Index: PullToRefresh/build/intermediates/blame/res/androidTest/debug/single/drawable-xhdpi-v4.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/blame/res/androidTest/debug/single/drawable-xhdpi-v4.json	(revision )
+++ PullToRefresh/build/intermediates/blame/res/androidTest/debug/single/drawable-xhdpi-v4.json	(revision )
@@ -0,0 +1,14 @@
+[
+    {
+        "merged": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\res\\merged\\androidTest\\debug\\drawable-xhdpi-v4\\default_ptr_flip.png",
+        "source": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\drawable-xhdpi-v4\\default_ptr_flip.png"
+    },
+    {
+        "merged": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\res\\merged\\androidTest\\debug\\drawable-xhdpi-v4\\default_ptr_rotate.png",
+        "source": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\drawable-xhdpi-v4\\default_ptr_rotate.png"
+    },
+    {
+        "merged": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\res\\merged\\androidTest\\debug\\drawable-xhdpi-v4\\indicator_arrow.png",
+        "source": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\drawable-xhdpi-v4\\indicator_arrow.png"
+    }
+]
\ No newline at end of file
Index: gradle.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GBK
===================================================================
--- gradle.properties	(revision )
+++ gradle.properties	(revision )
@@ -0,0 +1,18 @@
+# Project-wide Gradle settings.
+
+# IDE (e.g. Android Studio) users:
+# Gradle settings configured through the IDE *will override*
+# any settings specified in this file.
+
+# For more details on how to configure your build environment visit
+# http://www.gradle.org/docs/current/userguide/build_environment.html
+
+# Specifies the JVM arguments used for the daemon process.
+# The setting is particularly useful for tweaking memory settings.
+# Default value: -Xmx10248m -XX:MaxPermSize=256m
+# org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8
+
+# When configured, Gradle will run in incubating parallel mode.
+# This option should only be used with decoupled projects. More details, visit
+# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
+# org.gradle.parallel=true
\ No newline at end of file
Index: PullToRefresh/src/main/res/anim/slide_in_from_top.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/src/main/res/anim/slide_in_from_top.xml	(revision )
+++ PullToRefresh/src/main/res/anim/slide_in_from_top.xml	(revision )
@@ -0,0 +1,21 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+     Copyright (C) 2009 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+
+<translate xmlns:android="http://schemas.android.com/apk/res/android"
+    android:duration="@android:integer/config_longAnimTime"
+    android:fromYDelta="-100%p"
+    android:toYDelta="0" />
Index: PullToRefresh/build/intermediates/bundles/debug/R.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/bundles/debug/R.txt	(revision )
+++ PullToRefresh/build/intermediates/bundles/debug/R.txt	(revision )
@@ -0,0 +1,78 @@
+int anim slide_in_from_bottom 0x7f040000
+int anim slide_in_from_top 0x7f040001
+int anim slide_out_to_bottom 0x7f040002
+int anim slide_out_to_top 0x7f040003
+int attr ptrAdapterViewBackground 0x7f010010
+int attr ptrAnimationStyle 0x7f01000c
+int attr ptrDrawable 0x7f010006
+int attr ptrDrawableBottom 0x7f010012
+int attr ptrDrawableEnd 0x7f010008
+int attr ptrDrawableStart 0x7f010007
+int attr ptrDrawableTop 0x7f010011
+int attr ptrHeaderBackground 0x7f010001
+int attr ptrHeaderSubTextColor 0x7f010003
+int attr ptrHeaderTextAppearance 0x7f01000a
+int attr ptrHeaderTextColor 0x7f010002
+int attr ptrListViewExtrasEnabled 0x7f01000e
+int attr ptrMode 0x7f010004
+int attr ptrOverScroll 0x7f010009
+int attr ptrRefreshableViewBackground 0x7f010000
+int attr ptrRotateDrawableWhilePulling 0x7f01000f
+int attr ptrScrollingWhileRefreshingEnabled 0x7f01000d
+int attr ptrShowIndicator 0x7f010005
+int attr ptrSubHeaderTextAppearance 0x7f01000b
+int dimen header_footer_left_right_padding 0x7f070000
+int dimen header_footer_top_bottom_padding 0x7f070001
+int dimen indicator_corner_radius 0x7f070002
+int dimen indicator_internal_padding 0x7f070003
+int dimen indicator_right_padding 0x7f070004
+int drawable default_ptr_flip 0x7f020000
+int drawable default_ptr_rotate 0x7f020001
+int drawable indicator_arrow 0x7f020002
+int drawable indicator_bg_bottom 0x7f020003
+int drawable indicator_bg_top 0x7f020004
+int id both 0x7f060003
+int id disabled 0x7f060000
+int id fl_inner 0x7f06000c
+int id flip 0x7f060008
+int id gridview 0x7f060009
+int id manualOnly 0x7f060004
+int id pullDownFromTop 0x7f060005
+int id pullFromEnd 0x7f060002
+int id pullFromStart 0x7f060001
+int id pullUpFromBottom 0x7f060006
+int id pull_to_refresh_image 0x7f06000d
+int id pull_to_refresh_progress 0x7f06000e
+int id pull_to_refresh_sub_text 0x7f060010
+int id pull_to_refresh_text 0x7f06000f
+int id rotate 0x7f060007
+int id scrollview 0x7f06000a
+int id webview 0x7f06000b
+int layout pull_to_refresh_header_horizontal 0x7f030000
+int layout pull_to_refresh_header_vertical 0x7f030001
+int string pull_to_refresh_from_bottom_pull_label 0x7f050003
+int string pull_to_refresh_from_bottom_refreshing_label 0x7f050004
+int string pull_to_refresh_from_bottom_release_label 0x7f050005
+int string pull_to_refresh_pull_label 0x7f050000
+int string pull_to_refresh_refreshing_label 0x7f050001
+int string pull_to_refresh_release_label 0x7f050002
+int[] styleable PullToRefresh { 0x7f010000, 0x7f010001, 0x7f010002, 0x7f010003, 0x7f010004, 0x7f010005, 0x7f010006, 0x7f010007, 0x7f010008, 0x7f010009, 0x7f01000a, 0x7f01000b, 0x7f01000c, 0x7f01000d, 0x7f01000e, 0x7f01000f, 0x7f010010, 0x7f010011, 0x7f010012 }
+int styleable PullToRefresh_ptrAdapterViewBackground 16
+int styleable PullToRefresh_ptrAnimationStyle 12
+int styleable PullToRefresh_ptrDrawable 6
+int styleable PullToRefresh_ptrDrawableBottom 18
+int styleable PullToRefresh_ptrDrawableEnd 8
+int styleable PullToRefresh_ptrDrawableStart 7
+int styleable PullToRefresh_ptrDrawableTop 17
+int styleable PullToRefresh_ptrHeaderBackground 1
+int styleable PullToRefresh_ptrHeaderSubTextColor 3
+int styleable PullToRefresh_ptrHeaderTextAppearance 10
+int styleable PullToRefresh_ptrHeaderTextColor 2
+int styleable PullToRefresh_ptrListViewExtrasEnabled 14
+int styleable PullToRefresh_ptrMode 4
+int styleable PullToRefresh_ptrOverScroll 9
+int styleable PullToRefresh_ptrRefreshableViewBackground 0
+int styleable PullToRefresh_ptrRotateDrawableWhilePulling 15
+int styleable PullToRefresh_ptrScrollingWhileRefreshingEnabled 13
+int styleable PullToRefresh_ptrShowIndicator 5
+int styleable PullToRefresh_ptrSubHeaderTextAppearance 11
Index: app/src/main/res/values/attrs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/attrs.xml	(revision )
+++ app/src/main/res/values/attrs.xml	(revision )
@@ -0,0 +1,81 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+
+    <declare-styleable name="PullToRefresh">
+
+        <!-- A drawable to use as the background of the Refreshable View -->
+        <attr name="ptrRefreshableViewBackground" format="reference|color" />
+
+        <!-- A drawable to use as the background of the Header and Footer Loading Views -->
+        <attr name="ptrHeaderBackground" format="reference|color" />
+
+        <!-- Text Color of the Header and Footer Loading Views -->
+        <attr name="ptrHeaderTextColor" format="reference|color" />
+
+        <!-- Text Color of the Header and Footer Loading Views Sub Header -->
+  <!--       <attr name="ptrHeaderSubTextColor" format="reference|color" />  -->
+
+        <!-- Mode of Pull-to-Refresh that should be used -->
+        <attr name="ptrMode">
+            <flag name="disabled" value="0x0" />
+            <flag name="pullFromStart" value="0x1" />
+            <flag name="pullFromEnd" value="0x2" />
+            <flag name="both" value="0x3" />
+            <flag name="manualOnly" value="0x4" />
+
+            <!-- These last two are depreacted -->
+            <flag name="pullDownFromTop" value="0x1" />
+            <flag name="pullUpFromBottom" value="0x2" />
+        </attr>
+
+        <!-- Whether the Indicator overlay(s) should be used -->
+        <attr name="ptrShowIndicator" format="reference|boolean" />
+
+        <!-- Drawable to use as Loading Indicator. Changes both Header and Footer. -->
+        <attr name="ptrDrawable" format="reference" />
+
+        <!-- Drawable to use as Loading Indicator in the Header View. Overrides value set in ptrDrawable. -->
+        <attr name="ptrDrawableStart" format="reference" />
+
+        <!-- Drawable to use as Loading Indicator in the Footer View. Overrides value set in ptrDrawable. -->
+        <attr name="ptrDrawableEnd" format="reference" />
+
+        <!-- Whether Android's built-in Over Scroll should be utilised for Pull-to-Refresh. -->
+        <attr name="ptrOverScroll" format="reference|boolean" />
+
+        <!-- Base text color, typeface, size, and style for Header and Footer Loading Views -->
+        <attr name="ptrHeaderTextAppearance" format="reference" />
+
+        <!-- Base text color, typeface, size, and style for Header and Footer Loading Views Sub Header -->
+        <!-- <attr name="ptrSubHeaderTextAppearance" format="reference" /> -->
+
+
+        <!-- Style of Animation should be used displayed when pulling. -->
+        <attr name="ptrAnimationStyle">
+            <flag name="rotate" value="0x0" />
+            <flag name="flip" value="0x1" />
+        </attr>
+
+        <!-- Whether the user can scroll while the View is Refreshing -->
+        <attr name="ptrScrollingWhileRefreshingEnabled" format="reference|boolean" />
+
+        <!--
+        	Whether PullToRefreshListView has it's extras enabled. This allows the user to be 
+        	able to scroll while refreshing, and behaves better. It acheives this by adding
+        	Header and/or Footer Views to the ListView.
+        -->
+        <attr name="ptrListViewExtrasEnabled" format="reference|boolean" />
+
+        <!--
+        	Whether the Drawable should be continually rotated as you pull. This only
+        	takes effect when using the 'Rotate' Animation Style.
+        -->
+        <attr name="ptrRotateDrawableWhilePulling" format="reference|boolean" />
+
+        <!-- BELOW HERE ARE DEPRECEATED. DO NOT USE. -->
+        <attr name="ptrAdapterViewBackground" format="reference|color" />
+        <attr name="ptrDrawableTop" format="reference" />
+        <attr name="ptrDrawableBottom" format="reference" />
+    </declare-styleable>
+
+</resources>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/bundles/debug/res/values-cs/values-cs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/bundles/debug/res/values-cs/values-cs.xml	(revision )
+++ PullToRefresh/build/intermediates/bundles/debug/res/values-cs/values-cs.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="pull_to_refresh_pull_label">Tažením aktualizujete…</string>
+    <string name="pull_to_refresh_refreshing_label">Načítání…</string>
+    <string name="pull_to_refresh_release_label">Uvolněním aktualizujete…</string>
+</resources>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/blame/res/androidTest/debug/multi/values-zh.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/blame/res/androidTest/debug/multi/values-zh.json	(revision )
+++ PullToRefresh/build/intermediates/blame/res/androidTest/debug/multi/values-zh.json	(revision )
@@ -0,0 +1,64 @@
+[
+    {
+        "outputFile": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\res\\merged\\androidTest\\debug\\values-zh\\values-zh.xml",
+        "map": [
+            {
+                "to": {
+                    "startLine": 2,
+                    "startColumn": 4,
+                    "startOffset": 55,
+                    "endColumn": 60,
+                    "endOffset": 111
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values-zh\\values-zh.xml",
+                    "position": {
+                        "startLine": 2,
+                        "startColumn": 4,
+                        "startOffset": 55,
+                        "endColumn": 60,
+                        "endOffset": 111
+                    }
+                }
+            },
+            {
+                "to": {
+                    "startLine": 3,
+                    "startColumn": 4,
+                    "startOffset": 116,
+                    "endColumn": 66,
+                    "endOffset": 178
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values-zh\\values-zh.xml",
+                    "position": {
+                        "startLine": 3,
+                        "startColumn": 4,
+                        "startOffset": 116,
+                        "endColumn": 66,
+                        "endOffset": 178
+                    }
+                }
+            },
+            {
+                "to": {
+                    "startLine": 4,
+                    "startColumn": 4,
+                    "startOffset": 183,
+                    "endColumn": 64,
+                    "endOffset": 243
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values-zh\\values-zh.xml",
+                    "position": {
+                        "startLine": 4,
+                        "startColumn": 4,
+                        "startOffset": 183,
+                        "endColumn": 64,
+                        "endOffset": 243
+                    }
+                }
+            }
+        ]
+    }
+]
\ No newline at end of file
Index: PullToRefresh/build/intermediates/bundles/release/res/values-es/values-es.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/bundles/release/res/values-es/values-es.xml	(revision )
+++ PullToRefresh/build/intermediates/bundles/release/res/values-es/values-es.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="pull_to_refresh_pull_label">Tirar para actualizar…</string>
+    <string name="pull_to_refresh_refreshing_label">Cargando…</string>
+    <string name="pull_to_refresh_release_label">Soltar para actualizar…</string>
+</resources>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/res/merged/androidTest/debug/values-it/values-it.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/res/merged/androidTest/debug/values-it/values-it.xml	(revision )
+++ PullToRefresh/build/intermediates/res/merged/androidTest/debug/values-it/values-it.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="pull_to_refresh_pull_label">Tira per aggiornare…</string>
+    <string name="pull_to_refresh_refreshing_label">Caricamento…</string>
+    <string name="pull_to_refresh_release_label">Rilascia per aggionare…</string>
+</resources>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/res/merged/androidTest/debug/values-pl/values-pl.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/res/merged/androidTest/debug/values-pl/values-pl.xml	(revision )
+++ PullToRefresh/build/intermediates/res/merged/androidTest/debug/values-pl/values-pl.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="pull_to_refresh_pull_label">Pociągnij, aby odświeżyć…</string>
+    <string name="pull_to_refresh_refreshing_label">Wczytywanie…</string>
+    <string name="pull_to_refresh_release_label">Puść, aby odświeżyć…</string>
+</resources>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/bundles/debug/res/anim/slide_in_from_bottom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/bundles/debug/res/anim/slide_in_from_bottom.xml	(revision )
+++ PullToRefresh/build/intermediates/bundles/debug/res/anim/slide_in_from_bottom.xml	(revision )
@@ -0,0 +1,21 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+     Copyright (C) 2009 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+
+<translate xmlns:android="http://schemas.android.com/apk/res/android"
+    android:duration="@android:integer/config_longAnimTime"
+    android:fromYDelta="100%p"
+    android:toYDelta="0" />
Index: PullToRefresh/build/intermediates/res/merged/androidTest/debug/values-iw/values-iw.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/res/merged/androidTest/debug/values-iw/values-iw.xml	(revision )
+++ PullToRefresh/build/intermediates/res/merged/androidTest/debug/values-iw/values-iw.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="pull_to_refresh_pull_label">משוך לרענון…</string>
+    <string name="pull_to_refresh_refreshing_label">טוען…</string>
+    <string name="pull_to_refresh_release_label">שחרר לרענון…</string>
+</resources>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/incremental/mergeDebugAssets/merger.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/incremental/mergeDebugAssets/merger.xml	(revision )
+++ PullToRefresh/build/intermediates/incremental/mergeDebugAssets/merger.xml	(revision )
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="utf-8"?>
+<merger version="3"><dataSet config="main"><source path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\assets"/></dataSet><dataSet config="debug"><source path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\debug\assets"/></dataSet></merger>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/bundles/release/res/values-ko/values-ko.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/bundles/release/res/values-ko/values-ko.xml	(revision )
+++ PullToRefresh/build/intermediates/bundles/release/res/values-ko/values-ko.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="pull_to_refresh_pull_label">당겨서 새로 고침…</string>
+    <string name="pull_to_refresh_refreshing_label">로드 중…</string>
+    <string name="pull_to_refresh_release_label">놓아서 새로 고침…</string>
+</resources>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/res/merged/androidTest/debug/values-fi/values-fi.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/res/merged/androidTest/debug/values-fi/values-fi.xml	(revision )
+++ PullToRefresh/build/intermediates/res/merged/androidTest/debug/values-fi/values-fi.xml	(revision )
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="pull_to_refresh_from_bottom_pull_label">Päivitä vetämällä ylös…</string>
+    <string name="pull_to_refresh_from_bottom_refreshing_label">@string/pull_to_refresh_refreshing_label</string>
+    <string name="pull_to_refresh_from_bottom_release_label">@string/pull_to_refresh_release_label</string>
+    <string name="pull_to_refresh_pull_label">Päivitä vetämällä alas…</string>
+    <string name="pull_to_refresh_refreshing_label">Päivitetään…</string>
+    <string name="pull_to_refresh_release_label">Päivitä vapauttamalla…</string>
+</resources>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/bundles/debug/res/values-ru/values-ru.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/bundles/debug/res/values-ru/values-ru.xml	(revision )
+++ PullToRefresh/build/intermediates/bundles/debug/res/values-ru/values-ru.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="pull_to_refresh_pull_label">Потяните для обновления…</string>
+    <string name="pull_to_refresh_refreshing_label">Загрузка…</string>
+    <string name="pull_to_refresh_release_label">Отпустите для обновления…</string>
+</resources>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/incremental/mergeDebugAndroidTestAssets/merger.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/incremental/mergeDebugAndroidTestAssets/merger.xml	(revision )
+++ PullToRefresh/build/intermediates/incremental/mergeDebugAndroidTestAssets/merger.xml	(revision )
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="utf-8"?>
+<merger version="3"><dataSet config="debug"><source path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\build\intermediates\bundles\debug\assets"/></dataSet><dataSet config="main"><source path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\androidTest\assets"/></dataSet></merger>
\ No newline at end of file
Index: gradlew.bat
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- gradlew.bat	(revision )
+++ gradlew.bat	(revision )
@@ -0,0 +1,90 @@
+@if "%DEBUG%" == "" @echo off
+@rem ##########################################################################
+@rem
+@rem  Gradle startup script for Windows
+@rem
+@rem ##########################################################################
+
+@rem Set local scope for the variables with windows NT shell
+if "%OS%"=="Windows_NT" setlocal
+
+@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+set DEFAULT_JVM_OPTS=
+
+set DIRNAME=%~dp0
+if "%DIRNAME%" == "" set DIRNAME=.
+set APP_BASE_NAME=%~n0
+set APP_HOME=%DIRNAME%
+
+@rem Find java.exe
+if defined JAVA_HOME goto findJavaFromJavaHome
+
+set JAVA_EXE=java.exe
+%JAVA_EXE% -version >NUL 2>&1
+if "%ERRORLEVEL%" == "0" goto init
+
+echo.
+echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
+echo.
+echo Please set the JAVA_HOME variable in your environment to match the
+echo location of your Java installation.
+
+goto fail
+
+:findJavaFromJavaHome
+set JAVA_HOME=%JAVA_HOME:"=%
+set JAVA_EXE=%JAVA_HOME%/bin/java.exe
+
+if exist "%JAVA_EXE%" goto init
+
+echo.
+echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%
+echo.
+echo Please set the JAVA_HOME variable in your environment to match the
+echo location of your Java installation.
+
+goto fail
+
+:init
+@rem Get command-line arguments, handling Windowz variants
+
+if not "%OS%" == "Windows_NT" goto win9xME_args
+if "%@eval[2+2]" == "4" goto 4NT_args
+
+:win9xME_args
+@rem Slurp the command line arguments.
+set CMD_LINE_ARGS=
+set _SKIP=2
+
+:win9xME_args_slurp
+if "x%~1" == "x" goto execute
+
+set CMD_LINE_ARGS=%*
+goto execute
+
+:4NT_args
+@rem Get arguments from the 4NT Shell from JP Software
+set CMD_LINE_ARGS=%$
+
+:execute
+@rem Setup the command line
+
+set CLASSPATH=%APP_HOME%\gradle\wrapper\gradle-wrapper.jar
+
+@rem Execute Gradle
+"%JAVA_EXE%" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% "-Dorg.gradle.appname=%APP_BASE_NAME%" -classpath "%CLASSPATH%" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%
+
+:end
+@rem End local scope for the variables with windows NT shell
+if "%ERRORLEVEL%"=="0" goto mainEnd
+
+:fail
+rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of
+rem the _cmd.exe /c_ return code!
+if  not "" == "%GRADLE_EXIT_CONSOLE%" exit 1
+exit /b 1
+
+:mainEnd
+if "%OS%"=="Windows_NT" endlocal
+
+:omega
Index: PullToRefresh/build/intermediates/blame/res/androidTest/debug/multi/values-fi.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/blame/res/androidTest/debug/multi/values-fi.json	(revision )
+++ PullToRefresh/build/intermediates/blame/res/androidTest/debug/multi/values-fi.json	(revision )
@@ -0,0 +1,121 @@
+[
+    {
+        "outputFile": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\res\\merged\\androidTest\\debug\\values-fi\\values-fi.xml",
+        "map": [
+            {
+                "to": {
+                    "startLine": 2,
+                    "startColumn": 4,
+                    "startOffset": 55,
+                    "endColumn": 90,
+                    "endOffset": 141
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values-fi\\values-fi.xml",
+                    "position": {
+                        "startLine": 2,
+                        "startColumn": 4,
+                        "startOffset": 55,
+                        "endColumn": 90,
+                        "endOffset": 141
+                    }
+                }
+            },
+            {
+                "to": {
+                    "startLine": 3,
+                    "startColumn": 4,
+                    "startOffset": 146,
+                    "endColumn": 113,
+                    "endOffset": 255
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values-fi\\values-fi.xml",
+                    "position": {
+                        "startLine": 3,
+                        "startColumn": 4,
+                        "startOffset": 146,
+                        "endColumn": 113,
+                        "endOffset": 255
+                    }
+                }
+            },
+            {
+                "to": {
+                    "startLine": 4,
+                    "startColumn": 4,
+                    "startOffset": 260,
+                    "endColumn": 107,
+                    "endOffset": 363
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values-fi\\values-fi.xml",
+                    "position": {
+                        "startLine": 4,
+                        "startColumn": 4,
+                        "startOffset": 260,
+                        "endColumn": 107,
+                        "endOffset": 363
+                    }
+                }
+            },
+            {
+                "to": {
+                    "startLine": 5,
+                    "startColumn": 4,
+                    "startOffset": 368,
+                    "endColumn": 78,
+                    "endOffset": 442
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values-fi\\values-fi.xml",
+                    "position": {
+                        "startLine": 5,
+                        "startColumn": 4,
+                        "startOffset": 368,
+                        "endColumn": 78,
+                        "endOffset": 442
+                    }
+                }
+            },
+            {
+                "to": {
+                    "startLine": 6,
+                    "startColumn": 4,
+                    "startOffset": 447,
+                    "endColumn": 73,
+                    "endOffset": 516
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values-fi\\values-fi.xml",
+                    "position": {
+                        "startLine": 6,
+                        "startColumn": 4,
+                        "startOffset": 447,
+                        "endColumn": 73,
+                        "endOffset": 516
+                    }
+                }
+            },
+            {
+                "to": {
+                    "startLine": 7,
+                    "startColumn": 4,
+                    "startOffset": 521,
+                    "endColumn": 80,
+                    "endOffset": 597
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values-fi\\values-fi.xml",
+                    "position": {
+                        "startLine": 7,
+                        "startColumn": 4,
+                        "startOffset": 521,
+                        "endColumn": 80,
+                        "endOffset": 597
+                    }
+                }
+            }
+        ]
+    }
+]
\ No newline at end of file
Index: PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/IPullToRefresh.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/IPullToRefresh.java	(revision )
+++ PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/IPullToRefresh.java	(revision )
@@ -0,0 +1,246 @@
+/*******************************************************************************
+ * Copyright 2011, 2012 Chris Banes.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ *******************************************************************************/
+package com.handmark.pulltorefresh.library;
+
+import android.view.View;
+import android.view.animation.Interpolator;
+
+import com.handmark.pulltorefresh.library.PullToRefreshBase.Mode;
+import com.handmark.pulltorefresh.library.PullToRefreshBase.OnPullEventListener;
+import com.handmark.pulltorefresh.library.PullToRefreshBase.OnRefreshListener;
+import com.handmark.pulltorefresh.library.PullToRefreshBase.OnRefreshListener2;
+import com.handmark.pulltorefresh.library.PullToRefreshBase.State;
+
+public interface IPullToRefresh<T extends View> {
+
+	/**
+	 * Demos the Pull-to-Refresh functionality to the user so that they are
+	 * aware it is there. This could be useful when the user first opens your
+	 * app, etc. The animation will only happen if the Refresh View (ListView,
+	 * ScrollView, etc) is in a state where a Pull-to-Refresh could occur by a
+	 * user's touch gesture (i.e. scrolled to the top/bottom).
+	 * 
+	 * @return true - if the Demo has been started, false if not.
+	 */
+	public boolean demo();
+
+	/**
+	 * Get the mode that this view is currently in. This is only really useful
+	 * when using <code>Mode.BOTH</code>.
+	 * 
+	 * @return Mode that the view is currently in
+	 */
+	public Mode getCurrentMode();
+
+	/**
+	 * Returns whether the Touch Events are filtered or not. If true is
+	 * returned, then the View will only use touch events where the difference
+	 * in the Y-axis is greater than the difference in the X-axis. This means
+	 * that the View will not interfere when it is used in a horizontal
+	 * scrolling View (such as a ViewPager).
+	 * 
+	 * @return boolean - true if the View is filtering Touch Events
+	 */
+	public boolean getFilterTouchEvents();
+
+	/**
+	 * Returns a proxy object which allows you to call methods on all of the
+	 * LoadingLayouts (the Views which show when Pulling/Refreshing).
+	 * <p />
+	 * You should not keep the result of this method any longer than you need
+	 * it.
+	 * 
+	 * @return Object which will proxy any calls you make on it, to all of the
+	 *         LoadingLayouts.
+	 */
+	public ILoadingLayout getLoadingLayoutProxy();
+
+	/**
+	 * Returns a proxy object which allows you to call methods on the
+	 * LoadingLayouts (the Views which show when Pulling/Refreshing). The actual
+	 * LoadingLayout(s) which will be affected, are chosen by the parameters you
+	 * give.
+	 * <p />
+	 * You should not keep the result of this method any longer than you need
+	 * it.
+	 * 
+	 * @param includeStart - Whether to include the Start/Header Views
+	 * @param includeEnd - Whether to include the End/Footer Views
+	 * @return Object which will proxy any calls you make on it, to the
+	 *         LoadingLayouts included.
+	 */
+	public ILoadingLayout getLoadingLayoutProxy(boolean includeStart, boolean includeEnd);
+
+	/**
+	 * Get the mode that this view has been set to. If this returns
+	 * <code>Mode.BOTH</code>, you can use <code>getCurrentMode()</code> to
+	 * check which mode the view is currently in
+	 * 
+	 * @return Mode that the view has been set to
+	 */
+	public Mode getMode();
+
+	/**
+	 * Get the Wrapped Refreshable View. Anything returned here has already been
+	 * added to the content view.
+	 * 
+	 * @return The View which is currently wrapped
+	 */
+	public T getRefreshableView();
+
+	/**
+	 * Get whether the 'Refreshing' View should be automatically shown when
+	 * refreshing. Returns true by default.
+	 * 
+	 * @return - true if the Refreshing View will be show
+	 */
+	public boolean getShowViewWhileRefreshing();
+
+	/**
+	 * @return - The state that the View is currently in.
+	 */
+	public State getState();
+
+	/**
+	 * Whether Pull-to-Refresh is enabled
+	 * 
+	 * @return enabled
+	 */
+	public boolean isPullToRefreshEnabled();
+
+	/**
+	 * Gets whether Overscroll support is enabled. This is different to
+	 * Android's standard Overscroll support (the edge-glow) which is available
+	 * from GINGERBREAD onwards
+	 * 
+	 * @return true - if both PullToRefresh-OverScroll and Android's inbuilt
+	 *         OverScroll are enabled
+	 */
+	public boolean isPullToRefreshOverScrollEnabled();
+
+	/**
+	 * Returns whether the Widget is currently in the Refreshing mState
+	 * 
+	 * @return true if the Widget is currently refreshing
+	 */
+	public boolean isRefreshing();
+
+	/**
+	 * Returns whether the widget has enabled scrolling on the Refreshable View
+	 * while refreshing.
+	 * 
+	 * @return true if the widget has enabled scrolling while refreshing
+	 */
+	public boolean isScrollingWhileRefreshingEnabled();
+
+	/**
+	 * Mark the current Refresh as complete. Will Reset the UI and hide the
+	 * Refreshing View
+	 */
+	public void onRefreshComplete();
+
+	/**
+	 * Set the Touch Events to be filtered or not. If set to true, then the View
+	 * will only use touch events where the difference in the Y-axis is greater
+	 * than the difference in the X-axis. This means that the View will not
+	 * interfere when it is used in a horizontal scrolling View (such as a
+	 * ViewPager), but will restrict which types of finger scrolls will trigger
+	 * the View.
+	 * 
+	 * @param filterEvents - true if you want to filter Touch Events. Default is
+	 *            true.
+	 */
+	public void setFilterTouchEvents(boolean filterEvents);
+
+	/**
+	 * Set the mode of Pull-to-Refresh that this view will use.
+	 * 
+	 * @param mode - Mode to set the View to
+	 */
+	public void setMode(Mode mode);
+
+	/**
+	 * Set OnPullEventListener for the Widget
+	 * 
+	 * @param listener - Listener to be used when the Widget has a pull event to
+	 *            propogate.
+	 */
+	public void setOnPullEventListener(OnPullEventListener<T> listener);
+
+	/**
+	 * Set OnRefreshListener for the Widget
+	 * 
+	 * @param listener - Listener to be used when the Widget is set to Refresh
+	 */
+	public void setOnRefreshListener(OnRefreshListener<T> listener);
+
+	/**
+	 * Set OnRefreshListener for the Widget
+	 * 
+	 * @param listener - Listener to be used when the Widget is set to Refresh
+	 */
+	public void setOnRefreshListener(OnRefreshListener2<T> listener);
+
+	/**
+	 * Sets whether Overscroll support is enabled. This is different to
+	 * Android's standard Overscroll support (the edge-glow). This setting only
+	 * takes effect when running on device with Android v2.3 or greater.
+	 * 
+	 * @param enabled - true if you want Overscroll enabled
+	 */
+	public void setPullToRefreshOverScrollEnabled(boolean enabled);
+
+	/**
+	 * Sets the Widget to be in the refresh state. The UI will be updated to
+	 * show the 'Refreshing' view, and be scrolled to show such.
+	 */
+	public void setRefreshing();
+
+	/**
+	 * Sets the Widget to be in the refresh state. The UI will be updated to
+	 * show the 'Refreshing' view.
+	 * 
+	 * @param doScroll - true if you want to force a scroll to the Refreshing
+	 *            view.
+	 */
+	public void setRefreshing(boolean doScroll);
+
+	/**
+	 * Sets the Animation Interpolator that is used for animated scrolling.
+	 * Defaults to a DecelerateInterpolator
+	 * 
+	 * @param interpolator - Interpolator to use
+	 */
+	public void setScrollAnimationInterpolator(Interpolator interpolator);
+
+	/**
+	 * By default the Widget disables scrolling on the Refreshable View while
+	 * refreshing. This method can change this behaviour.
+	 * 
+	 * @param scrollingWhileRefreshingEnabled - true if you want to enable
+	 *            scrolling while refreshing
+	 */
+	public void setScrollingWhileRefreshingEnabled(boolean scrollingWhileRefreshingEnabled);
+
+	/**
+	 * A mutator to enable/disable whether the 'Refreshing' View should be
+	 * automatically shown when refreshing.
+	 * 
+	 * @param showView
+	 */
+	public void setShowViewWhileRefreshing(boolean showView);
+
+}
\ No newline at end of file
Index: PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/PullToRefreshExpandableListView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/PullToRefreshExpandableListView.java	(revision )
+++ PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/PullToRefreshExpandableListView.java	(revision )
@@ -0,0 +1,103 @@
+/*******************************************************************************
+ * Copyright 2011, 2012 Chris Banes.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ *******************************************************************************/
+package com.handmark.pulltorefresh.library;
+
+import android.annotation.TargetApi;
+import android.content.Context;
+import android.os.Build.VERSION;
+import android.os.Build.VERSION_CODES;
+import android.util.AttributeSet;
+import android.view.View;
+import android.widget.ExpandableListView;
+
+import com.handmark.pulltorefresh.library.internal.EmptyViewMethodAccessor;
+
+public class PullToRefreshExpandableListView extends PullToRefreshAdapterViewBase<ExpandableListView> {
+
+	public PullToRefreshExpandableListView(Context context) {
+		super(context);
+	}
+
+	public PullToRefreshExpandableListView(Context context, AttributeSet attrs) {
+		super(context, attrs);
+	}
+
+	public PullToRefreshExpandableListView(Context context, Mode mode) {
+		super(context, mode);
+	}
+
+	public PullToRefreshExpandableListView(Context context, Mode mode, AnimationStyle style) {
+		super(context, mode, style);
+	}
+
+	@Override
+	public final Orientation getPullToRefreshScrollDirection() {
+		return Orientation.VERTICAL;
+	}
+
+	@Override
+	protected ExpandableListView createRefreshableView(Context context, AttributeSet attrs) {
+		final ExpandableListView lv;
+		if (VERSION.SDK_INT >= VERSION_CODES.GINGERBREAD) {
+			lv = new InternalExpandableListViewSDK9(context, attrs);
+		} else {
+			lv = new InternalExpandableListView(context, attrs);
+		}
+
+		// Set it to this so it can be used in ListActivity/ListFragment
+		lv.setId(android.R.id.list);
+		return lv;
+	}
+
+	class InternalExpandableListView extends ExpandableListView implements EmptyViewMethodAccessor {
+
+		public InternalExpandableListView(Context context, AttributeSet attrs) {
+			super(context, attrs);
+		}
+
+		@Override
+		public void setEmptyView(View emptyView) {
+			PullToRefreshExpandableListView.this.setEmptyView(emptyView);
+		}
+
+		@Override
+		public void setEmptyViewInternal(View emptyView) {
+			super.setEmptyView(emptyView);
+		}
+	}
+
+	@TargetApi(9)
+	final class InternalExpandableListViewSDK9 extends InternalExpandableListView {
+
+		public InternalExpandableListViewSDK9(Context context, AttributeSet attrs) {
+			super(context, attrs);
+		}
+
+		@Override
+		protected boolean overScrollBy(int deltaX, int deltaY, int scrollX, int scrollY, int scrollRangeX,
+				int scrollRangeY, int maxOverScrollX, int maxOverScrollY, boolean isTouchEvent) {
+
+			final boolean returnValue = super.overScrollBy(deltaX, deltaY, scrollX, scrollY, scrollRangeX,
+					scrollRangeY, maxOverScrollX, maxOverScrollY, isTouchEvent);
+
+			// Does all of the hard work...
+			OverscrollHelper.overScrollBy(PullToRefreshExpandableListView.this, deltaX, scrollX, deltaY, scrollY,
+					isTouchEvent);
+
+			return returnValue;
+		}
+	}
+}
Index: PullToRefresh/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build.gradle	(revision )
+++ PullToRefresh/build.gradle	(revision )
@@ -0,0 +1,18 @@
+apply plugin: 'com.android.library'
+
+android {
+    compileSdkVersion 16
+    buildToolsVersion "19.1.0"
+
+    defaultConfig {
+        minSdkVersion 4
+        targetSdkVersion 4
+    }
+
+    buildTypes {
+        release {
+            minifyEnabled false
+            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
+        }
+    }
+}
Index: PullToRefresh/build/intermediates/res/merged/androidTest/debug/layout/pull_to_refresh_header_horizontal.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/res/merged/androidTest/debug/layout/pull_to_refresh_header_horizontal.xml	(revision )
+++ PullToRefresh/build/intermediates/res/merged/androidTest/debug/layout/pull_to_refresh_header_horizontal.xml	(revision )
@@ -0,0 +1,29 @@
+<?xml version="1.0" encoding="utf-8"?>
+<merge xmlns:android="http://schemas.android.com/apk/res/android" >
+
+    <FrameLayout
+        android:id="@+id/fl_inner"
+        android:layout_width="wrap_content"
+        android:layout_height="fill_parent"
+        android:paddingBottom="@dimen/header_footer_top_bottom_padding"
+        android:paddingLeft="@dimen/header_footer_left_right_padding"
+        android:paddingRight="@dimen/header_footer_left_right_padding"
+        android:paddingTop="@dimen/header_footer_top_bottom_padding" >
+
+        <ImageView
+            android:id="@+id/pull_to_refresh_image"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="center" />
+
+        <ProgressBar
+            android:id="@+id/pull_to_refresh_progress"
+            style="?android:attr/progressBarStyleSmall"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="center"
+            android:indeterminate="true"
+            android:visibility="gone" />
+    </FrameLayout>
+
+</merge>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/bundles/release/res/anim/slide_in_from_top.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/bundles/release/res/anim/slide_in_from_top.xml	(revision )
+++ PullToRefresh/build/intermediates/bundles/release/res/anim/slide_in_from_top.xml	(revision )
@@ -0,0 +1,21 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+     Copyright (C) 2009 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+
+<translate xmlns:android="http://schemas.android.com/apk/res/android"
+    android:duration="@android:integer/config_longAnimTime"
+    android:fromYDelta="-100%p"
+    android:toYDelta="0" />
Index: PullToRefresh/src/main/res/values-es/pull_refresh_strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/src/main/res/values-es/pull_refresh_strings.xml	(revision )
+++ PullToRefresh/src/main/res/values-es/pull_refresh_strings.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+  <string name="pull_to_refresh_pull_label">Tirar para actualizar…</string>
+  <string name="pull_to_refresh_release_label">Soltar para actualizar…</string>
+  <string name="pull_to_refresh_refreshing_label">Cargando…</string>
+</resources>
Index: PullToRefresh/build/intermediates/bundles/debug/res/values-nl/values-nl.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/bundles/debug/res/values-nl/values-nl.xml	(revision )
+++ PullToRefresh/build/intermediates/bundles/debug/res/values-nl/values-nl.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="pull_to_refresh_pull_label">Sleep om te vernieuwen…</string>
+    <string name="pull_to_refresh_refreshing_label">Laden…</string>
+    <string name="pull_to_refresh_release_label">Loslaten om te vernieuwen…</string>
+</resources>
\ No newline at end of file
Index: app/proguard-rules.pro
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/proguard-rules.pro	(revision )
+++ app/proguard-rules.pro	(revision )
@@ -0,0 +1,17 @@
+# Add project specific ProGuard rules here.
+# By default, the flags in this file are appended to flags specified
+# in E:\sdk/tools/proguard/proguard-android.txt
+# You can edit the include path and order by changing the proguardFiles
+# directive in build.gradle.
+#
+# For more details, see
+#   http://developer.android.com/guide/developing/tools/proguard.html
+
+# Add any project specific keep options here:
+
+# If your project uses WebView with JS, uncomment the following
+# and specify the fully qualified class name to the JavaScript interface
+# class:
+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
+#   public *;
+#}
Index: PullToRefresh/build/intermediates/bundles/release/res/values-iw/values-iw.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/bundles/release/res/values-iw/values-iw.xml	(revision )
+++ PullToRefresh/build/intermediates/bundles/release/res/values-iw/values-iw.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="pull_to_refresh_pull_label">משוך לרענון…</string>
+    <string name="pull_to_refresh_refreshing_label">טוען…</string>
+    <string name="pull_to_refresh_release_label">שחרר לרענון…</string>
+</resources>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/bundles/debug/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/bundles/debug/AndroidManifest.xml	(revision )
+++ PullToRefresh/build/intermediates/bundles/debug/AndroidManifest.xml	(revision )
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.handmark.pulltorefresh.library"
+    android:versionCode="2110"
+    android:versionName="2.1.1" >
+
+    <uses-sdk
+        android:minSdkVersion="4"
+        android:targetSdkVersion="4" />
+
+    <application />
+
+</manifest>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/bundles/release/res/values-pl/values-pl.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/bundles/release/res/values-pl/values-pl.xml	(revision )
+++ PullToRefresh/build/intermediates/bundles/release/res/values-pl/values-pl.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="pull_to_refresh_pull_label">Pociągnij, aby odświeżyć…</string>
+    <string name="pull_to_refresh_refreshing_label">Wczytywanie…</string>
+    <string name="pull_to_refresh_release_label">Puść, aby odświeżyć…</string>
+</resources>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/res/merged/androidTest/debug/values-es/values-es.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/res/merged/androidTest/debug/values-es/values-es.xml	(revision )
+++ PullToRefresh/build/intermediates/res/merged/androidTest/debug/values-es/values-es.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="pull_to_refresh_pull_label">Tirar para actualizar…</string>
+    <string name="pull_to_refresh_refreshing_label">Cargando…</string>
+    <string name="pull_to_refresh_release_label">Soltar para actualizar…</string>
+</resources>
\ No newline at end of file
Index: settings.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- settings.gradle	(revision )
+++ settings.gradle	(revision )
@@ -0,0 +1,2 @@
+include ':app'
+include ':PullToRefresh'
Index: PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/LoadingLayoutProxy.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/LoadingLayoutProxy.java	(revision )
+++ PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/LoadingLayoutProxy.java	(revision )
@@ -0,0 +1,73 @@
+package com.handmark.pulltorefresh.library;
+
+import java.util.HashSet;
+
+import android.graphics.Typeface;
+import android.graphics.drawable.Drawable;
+
+import com.handmark.pulltorefresh.library.internal.LoadingLayout;
+
+public class LoadingLayoutProxy implements ILoadingLayout {
+
+	private final HashSet<LoadingLayout> mLoadingLayouts;
+
+	LoadingLayoutProxy() {
+		mLoadingLayouts = new HashSet<LoadingLayout>();
+	}
+
+	/**
+	 * This allows you to add extra LoadingLayout instances to this proxy. This
+	 * is only necessary if you keep your own instances, and want to have them
+	 * included in any
+	 * {@link PullToRefreshBase#createLoadingLayoutProxy(boolean, boolean)
+	 * createLoadingLayoutProxy(...)} calls.
+	 * 
+	 * @param layout - LoadingLayout to have included.
+	 */
+	public void addLayout(LoadingLayout layout) {
+		if (null != layout) {
+			mLoadingLayouts.add(layout);
+		}
+	}
+
+	@Override
+	public void setLastUpdatedLabel(CharSequence label) {
+		for (LoadingLayout layout : mLoadingLayouts) {
+			layout.setLastUpdatedLabel(label);
+		}
+	}
+
+	@Override
+	public void setLoadingDrawable(Drawable drawable) {
+		for (LoadingLayout layout : mLoadingLayouts) {
+			layout.setLoadingDrawable(drawable);
+		}
+	}
+
+	@Override
+	public void setRefreshingLabel(CharSequence refreshingLabel) {
+		for (LoadingLayout layout : mLoadingLayouts) {
+			layout.setRefreshingLabel(refreshingLabel);
+		}
+	}
+
+	@Override
+	public void setPullLabel(CharSequence label) {
+		for (LoadingLayout layout : mLoadingLayouts) {
+			layout.setPullLabel(label);
+		}
+	}
+
+	@Override
+	public void setReleaseLabel(CharSequence label) {
+		for (LoadingLayout layout : mLoadingLayouts) {
+			layout.setReleaseLabel(label);
+		}
+	}
+
+	public void setTextTypeface(Typeface tf) {
+		for (LoadingLayout layout : mLoadingLayouts) {
+			layout.setTextTypeface(tf);
+		}
+	}
+}
Index: PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/ILoadingLayout.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/ILoadingLayout.java	(revision )
+++ PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/ILoadingLayout.java	(revision )
@@ -0,0 +1,57 @@
+package com.handmark.pulltorefresh.library;
+
+import android.graphics.Typeface;
+import android.graphics.drawable.Drawable;
+
+public interface ILoadingLayout {
+
+	/**
+	 * Set the Last Updated Text. This displayed under the main label when
+	 * Pulling
+	 * 
+	 * @param label - Label to set
+	 */
+	public void setLastUpdatedLabel(CharSequence label);
+
+	/**
+	 * Set the drawable used in the loading layout. This is the same as calling
+	 * <code>setLoadingDrawable(drawable, Mode.BOTH)</code>
+	 * 
+	 * @param drawable - Drawable to display
+	 */
+	public void setLoadingDrawable(Drawable drawable);
+
+	/**
+	 * Set Text to show when the Widget is being Pulled
+	 * <code>setPullLabel(releaseLabel, Mode.BOTH)</code>
+	 * 
+	 * @param pullLabel - CharSequence to display
+	 */
+	public void setPullLabel(CharSequence pullLabel);
+
+	/**
+	 * Set Text to show when the Widget is refreshing
+	 * <code>setRefreshingLabel(releaseLabel, Mode.BOTH)</code>
+	 * 
+	 * @param refreshingLabel - CharSequence to display
+	 */
+	public void setRefreshingLabel(CharSequence refreshingLabel);
+
+	/**
+	 * Set Text to show when the Widget is being pulled, and will refresh when
+	 * released. This is the same as calling
+	 * <code>setReleaseLabel(releaseLabel, Mode.BOTH)</code>
+	 * 
+	 * @param releaseLabel - CharSequence to display
+	 */
+	public void setReleaseLabel(CharSequence releaseLabel);
+
+	/**
+	 * Set's the Sets the typeface and style in which the text should be
+	 * displayed. Please see
+	 * {@link android.widget.TextView#setTypeface(Typeface)
+	 * TextView#setTypeface(Typeface)}.
+	 */
+	public void setTextTypeface(Typeface tf);
+
+}
Index: PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/internal/ViewCompat.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/internal/ViewCompat.java	(revision )
+++ PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/internal/ViewCompat.java	(revision )
@@ -0,0 +1,70 @@
+/*******************************************************************************
+ * Copyright 2011, 2012 Chris Banes.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ *******************************************************************************/
+package com.handmark.pulltorefresh.library.internal;
+
+import android.annotation.TargetApi;
+import android.graphics.drawable.Drawable;
+import android.os.Build.VERSION;
+import android.os.Build.VERSION_CODES;
+import android.view.View;
+
+@SuppressWarnings("deprecation")
+public class ViewCompat {
+
+	public static void postOnAnimation(View view, Runnable runnable) {
+		if (VERSION.SDK_INT >= VERSION_CODES.JELLY_BEAN) {
+			SDK16.postOnAnimation(view, runnable);
+		} else {
+			view.postDelayed(runnable, 16);
+		}
+	}
+
+	public static void setBackground(View view, Drawable background) {
+		if (VERSION.SDK_INT >= VERSION_CODES.JELLY_BEAN) {
+			SDK16.setBackground(view, background);
+		} else {
+			view.setBackgroundDrawable(background);
+		}
+	}
+
+	public static void setLayerType(View view, int layerType) {
+		if (VERSION.SDK_INT >= VERSION_CODES.HONEYCOMB) {
+			SDK11.setLayerType(view, layerType);
+		}
+	}
+
+	@TargetApi(11)
+	static class SDK11 {
+
+		public static void setLayerType(View view, int layerType) {
+			view.setLayerType(layerType, null);
+		}
+	}
+
+	@TargetApi(16)
+	static class SDK16 {
+
+		public static void postOnAnimation(View view, Runnable runnable) {
+			view.postOnAnimation(runnable);
+		}
+
+		public static void setBackground(View view, Drawable background) {
+			view.setBackground(background);
+		}
+
+	}
+
+}
Index: PullToRefresh/build/intermediates/bundles/debug/aapt/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/bundles/debug/aapt/AndroidManifest.xml	(revision )
+++ PullToRefresh/build/intermediates/bundles/debug/aapt/AndroidManifest.xml	(revision )
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.handmark.pulltorefresh.library"
+    android:versionCode="2110"
+    android:versionName="2.1.1" >
+
+    <uses-sdk
+        android:minSdkVersion="4"
+        android:targetSdkVersion="4" />
+
+    <application />
+
+</manifest>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/blame/res/androidTest/debug/single/anim.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/blame/res/androidTest/debug/single/anim.json	(revision )
+++ PullToRefresh/build/intermediates/blame/res/androidTest/debug/single/anim.json	(revision )
@@ -0,0 +1,18 @@
+[
+    {
+        "merged": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\res\\merged\\androidTest\\debug\\anim\\slide_out_to_top.xml",
+        "source": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\anim\\slide_out_to_top.xml"
+    },
+    {
+        "merged": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\res\\merged\\androidTest\\debug\\anim\\slide_out_to_bottom.xml",
+        "source": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\anim\\slide_out_to_bottom.xml"
+    },
+    {
+        "merged": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\res\\merged\\androidTest\\debug\\anim\\slide_in_from_bottom.xml",
+        "source": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\anim\\slide_in_from_bottom.xml"
+    },
+    {
+        "merged": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\res\\merged\\androidTest\\debug\\anim\\slide_in_from_top.xml",
+        "source": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\anim\\slide_in_from_top.xml"
+    }
+]
\ No newline at end of file
Index: PullToRefresh/src/main/res/values-pl/pull_refresh_strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/src/main/res/values-pl/pull_refresh_strings.xml	(revision )
+++ PullToRefresh/src/main/res/values-pl/pull_refresh_strings.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+  <string name="pull_to_refresh_pull_label">Pociągnij, aby odświeżyć…</string>
+  <string name="pull_to_refresh_release_label">Puść, aby odświeżyć…</string>
+  <string name="pull_to_refresh_refreshing_label">Wczytywanie…</string>
+</resources>
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/strings.xml	(revision )
+++ app/src/main/res/values/strings.xml	(revision )
@@ -0,0 +1,36 @@
+<resources>
+
+    <string name="app_name">WeatherDemo2</string>
+    <string name="today">今天</string>
+    <string name="pm">PM2.5</string>
+    <string name="default_text">＿ ＿</string>
+    <string name="forecast">预报</string>
+    <string name="information">详细信息</string>
+    <string name="felt_air_temp">体感温度</string>
+    <string name="humidity">湿度</string>
+    <string name="wind_direction">风向</string>
+    <string name="wind_power">风力</string>
+    <string name="sunrise">日出</string>
+    <string name="sunset">日落</string>
+    <string name="sendible_temperature">体感温度</string>
+    <string name="exercise_index">运动指数</string>
+    <string name="carWash_index">洗车指数</string>
+    <string name="uv_index">紫外线指数</string>
+    <string name="dressing_index">穿衣指数</string>
+    <string name="travel_index">旅行指数</string>
+    <string name="sunscreen_index">防晒指数</string>
+    <string name="cold_index">感冒指数</string>
+    <string name="comfort_index">舒适指数</string>
+    <string name="title_city">城市选择</string>
+
+    <!-- Just use standard Pull Down String when pulling up. These can be set for languages which require it -->
+
+    <string name="pull_to_refresh_pull_label">下拉刷新…</string>
+    <string name="pull_to_refresh_release_label">放开以刷新…</string>
+    <string name="pull_to_refresh_refreshing_label">正在载入…</string>
+    <string name="pull_to_refresh_from_bottom_pull_label">@string/pull_to_refresh_pull_label</string>
+    <string name="pull_to_refresh_from_bottom_release_label">@string/pull_to_refresh_release_label</string>
+    <string name="pull_to_refresh_from_bottom_refreshing_label">@string/pull_to_refresh_refreshing_label</string>
+    <string name="filler_text">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec sollicitudin mauris varius lacus porttitor eget blandit massa facilisis. Nulla pellentesque odio sed purus fermentum vitae viverra orci faucibus. Sed ullamcorper condimentum vulputate. Curabitur sit amet convallis velit. Vestibulum posuere eleifend risus ac adipiscing. Nam pulvinar nulla a velit faucibus imperdiet. Praesent eget nisi ac justo blandit sagittis. Maecenas at leo nisi, nec varius nisl.\nIn hac habitasse platea dictumst. Morbi neque tortor, vestibulum sed viverra a, luctus vel lorem. Nunc turpis eros, varius eget commodo et, euismod at eros. Sed tincidunt mi purus, vel posuere dui. Vestibulum ante lectus, porta sed mattis bibendum, scelerisque cursus sapien. Cras ultrices imperdiet fermentum. Aenean nisi nulla, euismod non blandit ac, dictum quis libero. Morbi consectetur tempor mollis. Suspendisse eget nunc arcu, vel ullamcorper augue. Integer malesuada, diam nec faucibus mollis, nisl velit euismod enim, ac mattis justo neque sit amet mauris. Vivamus pretium imperdiet pharetra.\nInteger sagittis augue sit amet lectus pulvinar sit amet commodo tortor mattis. Maecenas quis tellus eget ante eleifend sollicitudin non et nibh. Maecenas luctus euismod tristique. Fusce in odio nec diam blandit facilisis. Sed nec arcu eros. Vivamus quis tortor a metus tempus aliquam eget volutpat magna. Pellentesque id ultrices dolor. Sed blandit aliquet quam. Phasellus dapibus euismod vulputate. Aenean blandit, elit vitae vestibulum tincidunt, metus dui accumsan nulla, sit amet vehicula mauris lacus in est. Etiam dignissim pellentesque nulla vel malesuada. Cras vel lorem justo.\nSed condimentum nisl sit amet libero vestibulum hendrerit. Duis auctor tempus placerat. Proin velit ante, ornare nec dictum nec, hendrerit eu arcu. Etiam ut diam ornare quam venenatis pulvinar vitae vel leo. Vivamus consectetur, ante id interdum rhoncus, magna eros pulvinar lacus, a gravida nibh arcu vitae eros. Nulla scelerisque laoreet feugiat. Mauris sit amet gravida felis.\nNulla ac dolor sapien, vestibulum venenatis justo. Cras placerat velit vitae nibh pellentesque ultricies. Suspendisse adipiscing enim eu justo iaculis eu pretium urna fermentum. Duis porttitor nunc non nunc mattis vestibulum. Etiam elit tellus, feugiat in bibendum eget, adipiscing nec metus. Ut ut sem lacus, quis faucibus diam. Curabitur a nulla fermentum tortor dignissim posuere. Fusce faucibus ante ut sem imperdiet imperdiet eget vitae lorem. Etiam fringilla ornare ipsum, in sagittis quam ornare vitae. Nullam venenatis orci sit amet sapien adipiscing gravida. Proin turpis lectus, hendrerit vitae vehicula ut, auctor ac lectus. Pellentesque sollicitudin blandit ligula quis commodo. Mauris vulputate lectus in velit luctus aliquam. Quisque eget tincidunt elit. Quisque et augue quam, sed scelerisque eros.</string>
+
+</resources>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/res/merged/androidTest/debug/layout/pull_to_refresh_header_vertical.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/res/merged/androidTest/debug/layout/pull_to_refresh_header_vertical.xml	(revision )
+++ PullToRefresh/build/intermediates/res/merged/androidTest/debug/layout/pull_to_refresh_header_vertical.xml	(revision )
@@ -0,0 +1,59 @@
+<?xml version="1.0" encoding="utf-8"?>
+<merge xmlns:android="http://schemas.android.com/apk/res/android" >
+
+    <FrameLayout
+        android:id="@+id/fl_inner"
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content"
+        android:paddingBottom="@dimen/header_footer_top_bottom_padding"
+        android:paddingLeft="@dimen/header_footer_left_right_padding"
+        android:paddingRight="@dimen/header_footer_left_right_padding"
+        android:paddingTop="@dimen/header_footer_top_bottom_padding" >
+
+        <FrameLayout
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="left|center_vertical" >
+
+            <ImageView
+                android:id="@+id/pull_to_refresh_image"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_gravity="center" />
+
+            <ProgressBar
+                android:id="@+id/pull_to_refresh_progress"
+                style="?android:attr/progressBarStyleSmall"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_gravity="center"
+                android:indeterminate="true"
+                android:visibility="gone" />
+        </FrameLayout>
+
+        <LinearLayout
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="center"
+            android:gravity="center_horizontal"
+            android:orientation="vertical" >
+
+            <TextView
+                android:id="@+id/pull_to_refresh_text"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:singleLine="true"
+                android:textAppearance="?android:attr/textAppearance"
+                android:textStyle="bold" />
+
+            <TextView
+                android:id="@+id/pull_to_refresh_sub_text"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:singleLine="true"
+                android:textAppearance="?android:attr/textAppearanceSmall"
+                android:visibility="gone" />
+        </LinearLayout>
+    </FrameLayout>
+
+</merge>
\ No newline at end of file
Index: PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/PullToRefreshGridView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/PullToRefreshGridView.java	(revision )
+++ PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/PullToRefreshGridView.java	(revision )
@@ -0,0 +1,102 @@
+/*******************************************************************************
+ * Copyright 2011, 2012 Chris Banes.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ *******************************************************************************/
+package com.handmark.pulltorefresh.library;
+
+import android.annotation.TargetApi;
+import android.content.Context;
+import android.os.Build.VERSION;
+import android.os.Build.VERSION_CODES;
+import android.util.AttributeSet;
+import android.view.View;
+import android.widget.GridView;
+
+import com.handmark.pulltorefresh.library.internal.EmptyViewMethodAccessor;
+
+public class PullToRefreshGridView extends PullToRefreshAdapterViewBase<GridView> {
+
+	public PullToRefreshGridView(Context context) {
+		super(context);
+	}
+
+	public PullToRefreshGridView(Context context, AttributeSet attrs) {
+		super(context, attrs);
+	}
+
+	public PullToRefreshGridView(Context context, Mode mode) {
+		super(context, mode);
+	}
+
+	public PullToRefreshGridView(Context context, Mode mode, AnimationStyle style) {
+		super(context, mode, style);
+	}
+
+	@Override
+	public final Orientation getPullToRefreshScrollDirection() {
+		return Orientation.VERTICAL;
+	}
+
+	@Override
+	protected final GridView createRefreshableView(Context context, AttributeSet attrs) {
+		final GridView gv;
+		if (VERSION.SDK_INT >= VERSION_CODES.GINGERBREAD) {
+			gv = new InternalGridViewSDK9(context, attrs);
+		} else {
+			gv = new InternalGridView(context, attrs);
+		}
+
+		// Use Generated ID (from res/values/ids.xml)
+		gv.setId(R.id.gridview);
+		return gv;
+	}
+
+	class InternalGridView extends GridView implements EmptyViewMethodAccessor {
+
+		public InternalGridView(Context context, AttributeSet attrs) {
+			super(context, attrs);
+		}
+
+		@Override
+		public void setEmptyView(View emptyView) {
+			PullToRefreshGridView.this.setEmptyView(emptyView);
+		}
+
+		@Override
+		public void setEmptyViewInternal(View emptyView) {
+			super.setEmptyView(emptyView);
+		}
+	}
+
+	@TargetApi(9)
+	final class InternalGridViewSDK9 extends InternalGridView {
+
+		public InternalGridViewSDK9(Context context, AttributeSet attrs) {
+			super(context, attrs);
+		}
+
+		@Override
+		protected boolean overScrollBy(int deltaX, int deltaY, int scrollX, int scrollY, int scrollRangeX,
+				int scrollRangeY, int maxOverScrollX, int maxOverScrollY, boolean isTouchEvent) {
+
+			final boolean returnValue = super.overScrollBy(deltaX, deltaY, scrollX, scrollY, scrollRangeX,
+					scrollRangeY, maxOverScrollX, maxOverScrollY, isTouchEvent);
+
+			// Does all of the hard work...
+			OverscrollHelper.overScrollBy(PullToRefreshGridView.this, deltaX, scrollX, deltaY, scrollY, isTouchEvent);
+
+			return returnValue;
+		}
+	}
+}
Index: PullToRefresh/build/intermediates/bundles/release/res/values-he/values-he.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/bundles/release/res/values-he/values-he.xml	(revision )
+++ PullToRefresh/build/intermediates/bundles/release/res/values-he/values-he.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="pull_to_refresh_pull_label">משוך לרענון…</string>
+    <string name="pull_to_refresh_refreshing_label">טוען…</string>
+    <string name="pull_to_refresh_release_label">שחרר לרענון…</string>
+</resources>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/blame/res/androidTest/debug/single/layout.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/blame/res/androidTest/debug/single/layout.json	(revision )
+++ PullToRefresh/build/intermediates/blame/res/androidTest/debug/single/layout.json	(revision )
@@ -0,0 +1,10 @@
+[
+    {
+        "merged": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\res\\merged\\androidTest\\debug\\layout\\pull_to_refresh_header_vertical.xml",
+        "source": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\layout\\pull_to_refresh_header_vertical.xml"
+    },
+    {
+        "merged": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\res\\merged\\androidTest\\debug\\layout\\pull_to_refresh_header_horizontal.xml",
+        "source": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\layout\\pull_to_refresh_header_horizontal.xml"
+    }
+]
\ No newline at end of file
Index: app/src/main/res/layout/item_city_list.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/item_city_list.xml	(revision )
+++ app/src/main/res/layout/item_city_list.xml	(revision )
@@ -0,0 +1,15 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    >
+    
+    <TextView android:id="@+id/tv_city"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:padding="8dp"
+        android:textColor="@color/text_color"
+        android:textSize="16sp"
+        />
+
+</LinearLayout>
Index: app/src/androidTest/java/com/example/victor/weathertest3/ApplicationTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/androidTest/java/com/example/victor/weathertest3/ApplicationTest.java	(revision )
+++ app/src/androidTest/java/com/example/victor/weathertest3/ApplicationTest.java	(revision )
@@ -0,0 +1,13 @@
+package com.example.victor.weathertest3;
+
+import android.app.Application;
+import android.test.ApplicationTestCase;
+
+/**
+ * <a href="http://d.android.com/tools/testing/testing_android.html">Testing Fundamentals</a>
+ */
+public class ApplicationTest extends ApplicationTestCase<Application> {
+    public ApplicationTest() {
+        super(Application.class);
+    }
+}
\ No newline at end of file
Index: PullToRefresh/build/intermediates/blame/res/androidTest/debug/multi/values-de.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/blame/res/androidTest/debug/multi/values-de.json	(revision )
+++ PullToRefresh/build/intermediates/blame/res/androidTest/debug/multi/values-de.json	(revision )
@@ -0,0 +1,64 @@
+[
+    {
+        "outputFile": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\res\\merged\\androidTest\\debug\\values-de\\values-de.xml",
+        "map": [
+            {
+                "to": {
+                    "startLine": 2,
+                    "startColumn": 4,
+                    "startOffset": 55,
+                    "endColumn": 80,
+                    "endOffset": 131
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values-de\\values-de.xml",
+                    "position": {
+                        "startLine": 2,
+                        "startColumn": 4,
+                        "startOffset": 55,
+                        "endColumn": 80,
+                        "endOffset": 131
+                    }
+                }
+            },
+            {
+                "to": {
+                    "startLine": 3,
+                    "startColumn": 4,
+                    "startOffset": 136,
+                    "endColumn": 67,
+                    "endOffset": 199
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values-de\\values-de.xml",
+                    "position": {
+                        "startLine": 3,
+                        "startColumn": 4,
+                        "startOffset": 136,
+                        "endColumn": 67,
+                        "endOffset": 199
+                    }
+                }
+            },
+            {
+                "to": {
+                    "startLine": 4,
+                    "startColumn": 4,
+                    "startOffset": 204,
+                    "endColumn": 86,
+                    "endOffset": 286
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values-de\\values-de.xml",
+                    "position": {
+                        "startLine": 4,
+                        "startColumn": 4,
+                        "startOffset": 204,
+                        "endColumn": 86,
+                        "endOffset": 286
+                    }
+                }
+            }
+        ]
+    }
+]
\ No newline at end of file
Index: PullToRefresh/build/intermediates/res/merged/androidTest/debug/anim/slide_in_from_top.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/res/merged/androidTest/debug/anim/slide_in_from_top.xml	(revision )
+++ PullToRefresh/build/intermediates/res/merged/androidTest/debug/anim/slide_in_from_top.xml	(revision )
@@ -0,0 +1,21 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+     Copyright (C) 2009 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+
+<translate xmlns:android="http://schemas.android.com/apk/res/android"
+    android:duration="@android:integer/config_longAnimTime"
+    android:fromYDelta="-100%p"
+    android:toYDelta="0" />
Index: PullToRefresh/build/intermediates/bundles/release/res/values-fr/values-fr.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/bundles/release/res/values-fr/values-fr.xml	(revision )
+++ PullToRefresh/build/intermediates/bundles/release/res/values-fr/values-fr.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="pull_to_refresh_pull_label">Tirez pour rafraîchir…</string>
+    <string name="pull_to_refresh_refreshing_label">Chargement…</string>
+    <string name="pull_to_refresh_release_label">Relâcher pour rafraîchir…</string>
+</resources>
\ No newline at end of file
Index: PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/PullToRefreshWebView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/PullToRefreshWebView.java	(revision )
+++ PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/PullToRefreshWebView.java	(revision )
@@ -0,0 +1,165 @@
+/*******************************************************************************
+ * Copyright 2011, 2012 Chris Banes.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ *******************************************************************************/
+package com.handmark.pulltorefresh.library;
+
+import android.annotation.TargetApi;
+import android.content.Context;
+import android.os.Build.VERSION;
+import android.os.Build.VERSION_CODES;
+import android.os.Bundle;
+import android.util.AttributeSet;
+import android.util.FloatMath;
+import android.webkit.WebChromeClient;
+import android.webkit.WebView;
+
+public class PullToRefreshWebView extends PullToRefreshBase<WebView> {
+
+	private static final OnRefreshListener<WebView> defaultOnRefreshListener = new OnRefreshListener<WebView>() {
+
+		@Override
+		public void onRefresh(PullToRefreshBase<WebView> refreshView) {
+			refreshView.getRefreshableView().reload();
+		}
+
+	};
+
+	private final WebChromeClient defaultWebChromeClient = new WebChromeClient() {
+
+		@Override
+		public void onProgressChanged(WebView view, int newProgress) {
+			if (newProgress == 100) {
+				onRefreshComplete();
+			}
+		}
+
+	};
+
+	public PullToRefreshWebView(Context context) {
+		super(context);
+
+		/**
+		 * Added so that by default, Pull-to-Refresh refreshes the page
+		 */
+		setOnRefreshListener(defaultOnRefreshListener);
+		mRefreshableView.setWebChromeClient(defaultWebChromeClient);
+	}
+
+	public PullToRefreshWebView(Context context, AttributeSet attrs) {
+		super(context, attrs);
+
+		/**
+		 * Added so that by default, Pull-to-Refresh refreshes the page
+		 */
+		setOnRefreshListener(defaultOnRefreshListener);
+		mRefreshableView.setWebChromeClient(defaultWebChromeClient);
+	}
+
+	public PullToRefreshWebView(Context context, Mode mode) {
+		super(context, mode);
+
+		/**
+		 * Added so that by default, Pull-to-Refresh refreshes the page
+		 */
+		setOnRefreshListener(defaultOnRefreshListener);
+		mRefreshableView.setWebChromeClient(defaultWebChromeClient);
+	}
+
+	public PullToRefreshWebView(Context context, Mode mode, AnimationStyle style) {
+		super(context, mode, style);
+
+		/**
+		 * Added so that by default, Pull-to-Refresh refreshes the page
+		 */
+		setOnRefreshListener(defaultOnRefreshListener);
+		mRefreshableView.setWebChromeClient(defaultWebChromeClient);
+	}
+
+	@Override
+	public final Orientation getPullToRefreshScrollDirection() {
+		return Orientation.VERTICAL;
+	}
+
+	@Override
+	protected WebView createRefreshableView(Context context, AttributeSet attrs) {
+		WebView webView;
+		if (VERSION.SDK_INT >= VERSION_CODES.GINGERBREAD) {
+			webView = new InternalWebViewSDK9(context, attrs);
+		} else {
+			webView = new WebView(context, attrs);
+		}
+
+		webView.setId(R.id.webview);
+		return webView;
+	}
+
+	@Override
+	protected boolean isReadyForPullStart() {
+		return mRefreshableView.getScrollY() == 0;
+	}
+
+	@Override
+	protected boolean isReadyForPullEnd() {
+		float exactContentHeight = FloatMath.floor(mRefreshableView.getContentHeight() * mRefreshableView.getScale());
+		return mRefreshableView.getScrollY() >= (exactContentHeight - mRefreshableView.getHeight());
+	}
+
+	@Override
+	protected void onPtrRestoreInstanceState(Bundle savedInstanceState) {
+		super.onPtrRestoreInstanceState(savedInstanceState);
+		mRefreshableView.restoreState(savedInstanceState);
+	}
+
+	@Override
+	protected void onPtrSaveInstanceState(Bundle saveState) {
+		super.onPtrSaveInstanceState(saveState);
+		mRefreshableView.saveState(saveState);
+	}
+
+	@TargetApi(9)
+	final class InternalWebViewSDK9 extends WebView {
+
+		// WebView doesn't always scroll back to it's edge so we add some
+		// fuzziness
+		static final int OVERSCROLL_FUZZY_THRESHOLD = 2;
+
+		// WebView seems quite reluctant to overscroll so we use the scale
+		// factor to scale it's value
+		static final float OVERSCROLL_SCALE_FACTOR = 1.5f;
+
+		public InternalWebViewSDK9(Context context, AttributeSet attrs) {
+			super(context, attrs);
+		}
+
+		@Override
+		protected boolean overScrollBy(int deltaX, int deltaY, int scrollX, int scrollY, int scrollRangeX,
+				int scrollRangeY, int maxOverScrollX, int maxOverScrollY, boolean isTouchEvent) {
+
+			final boolean returnValue = super.overScrollBy(deltaX, deltaY, scrollX, scrollY, scrollRangeX,
+					scrollRangeY, maxOverScrollX, maxOverScrollY, isTouchEvent);
+
+			// Does all of the hard work...
+			OverscrollHelper.overScrollBy(PullToRefreshWebView.this, deltaX, scrollX, deltaY, scrollY,
+					getScrollRange(), OVERSCROLL_FUZZY_THRESHOLD, OVERSCROLL_SCALE_FACTOR, isTouchEvent);
+
+			return returnValue;
+		}
+
+		private int getScrollRange() {
+			return (int) Math.max(0, FloatMath.floor(mRefreshableView.getContentHeight() * mRefreshableView.getScale())
+					- (getHeight() - getPaddingBottom() - getPaddingTop()));
+		}
+	}
+}
Index: PullToRefresh/build/intermediates/res/merged/androidTest/debug/anim/slide_out_to_bottom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/res/merged/androidTest/debug/anim/slide_out_to_bottom.xml	(revision )
+++ PullToRefresh/build/intermediates/res/merged/androidTest/debug/anim/slide_out_to_bottom.xml	(revision )
@@ -0,0 +1,21 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+     Copyright (C) 2009 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+
+<translate xmlns:android="http://schemas.android.com/apk/res/android"
+    android:duration="@android:integer/config_longAnimTime"
+    android:fromYDelta="0"
+    android:toYDelta="100%p" />
Index: app/src/main/java/com/example/victor/weathertest3/CityActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/victor/weathertest3/CityActivity.java	(revision )
+++ app/src/main/java/com/example/victor/weathertest3/CityActivity.java	(revision )
@@ -0,0 +1,143 @@
+package com.example.victor.weathertest3;
+
+import android.app.Activity;
+import android.content.Intent;
+import android.os.Bundle;
+import android.os.Handler;
+import android.os.Message;
+import android.util.Log;
+import android.view.View;
+import android.view.View.OnClickListener;
+import android.widget.AdapterView;
+import android.widget.AdapterView.OnItemClickListener;
+import android.widget.ListView;
+
+import com.example.victor.weathertest3.adapter.CityListAdatper;
+
+import org.json.JSONArray;
+import org.json.JSONException;
+import org.json.JSONObject;
+
+import java.io.BufferedReader;
+import java.io.InputStream;
+import java.io.InputStreamReader;
+import java.net.URL;
+import java.util.ArrayList;
+import java.util.HashSet;
+import java.util.List;
+import java.util.Set;
+
+import javax.net.ssl.HttpsURLConnection;
+
+
+public class CityActivity extends Activity {
+
+	private ListView lv_city;
+	private List<String> list;
+    private JSONObject resultJson;
+	private static final String KEY ="bf15f74d90c54731889f9e06678dc71e";
+
+	@Override
+	protected void onCreate(Bundle savedInstanceState) {
+		// TODO Auto-generated method stub
+		super.onCreate(savedInstanceState);
+		setContentView(R.layout.activity_city);
+		initViews();
+        request();
+	}
+
+	private void initViews() {
+		findViewById(R.id.iv_back).setOnClickListener(new OnClickListener() {
+
+			@Override
+			public void onClick(View arg0) {
+				finish();
+			}
+		});
+
+		lv_city = (ListView) findViewById(R.id.lv_city);
+	}
+
+	private void getCities() {
+
+		try {
+			String status = resultJson.getString("status");
+			if ("ok".equals(status)) {
+				list = new ArrayList<String>();
+				JSONArray resultArray = resultJson.getJSONArray("city_info");
+				Set<String> citySet = new HashSet<String>();
+				for (int i = 0; i < resultArray.length(); i++) {
+					String city = resultArray.getJSONObject(i).getString("city");
+					citySet.add(city);
+				}
+				list.addAll(citySet);
+				CityListAdatper adatper = new CityListAdatper(CityActivity.this, list);
+				lv_city.setAdapter(adatper);
+				lv_city.setOnItemClickListener(new OnItemClickListener() {
+
+					@Override
+					public void onItemClick(AdapterView<?> arg0, View arg1, int arg2, long arg3) {
+						// TODO Auto-generated method stub
+						Intent intent = new Intent();
+						intent.putExtra("city", list.get(arg2));
+						setResult(1, intent);
+						finish();
+					}
+				});
+
+			}
+		} catch (JSONException e) {
+			e.printStackTrace();
+		}
+
+	}
+
+    public void request() {
+        final String a = "https://api.heweather.com/x3/citylist?search=allchina&key=bf15f74d90c54731889f9e06678dc71e";
+        new Thread(new Runnable() {
+            @Override
+            public void run() {
+                // TODO Auto-generated method stub
+                try {
+                    BufferedReader reader = null;
+                    String result = null;
+                    StringBuffer sbf = new StringBuffer();
+                    URL url = new URL(a);
+                    HttpsURLConnection connection = (HttpsURLConnection) url.openConnection();
+                    connection.setRequestMethod("GET");
+                    Log.e("err", a);
+                    connection.connect();
+
+                    InputStream is = connection.getInputStream();
+                    reader = new BufferedReader(new InputStreamReader(is, "UTF-8"));
+                    String strRead = null;
+                    while ((strRead = reader.readLine()) != null) {
+                        sbf.append(strRead);
+                    }
+                    reader.close();
+                    result = sbf.toString();
+                    Message msg = handler.obtainMessage();
+                    msg.what = 0;
+                    msg.obj = result;
+                    handler.sendMessage(msg);
+                } catch (Exception e) {
+                    Log.e("err", "出错" + e);
+                    e.printStackTrace();
+                }
+            }
+        }).start();
+    }
+
+    private Handler handler = new Handler() {
+        public void handleMessage(Message msg) {
+            if(msg.what == 0){
+                try {
+                    resultJson =  new JSONObject((String) msg.obj);
+                    getCities();
+                } catch (JSONException e) {
+                    e.printStackTrace();
+                }
+            }
+        }
+    };
+}
Index: PullToRefresh/build/intermediates/incremental/packageReleaseResources/merger.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/incremental/packageReleaseResources/merger.xml	(revision )
+++ PullToRefresh/build/intermediates/incremental/packageReleaseResources/merger.xml	(revision )
@@ -0,0 +1,76 @@
+<?xml version="1.0" encoding="utf-8"?>
+<merger version="3"><dataSet config="main$Generated" generated="true"><source path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res"/><source path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\build\generated\res\rs\release"/><source path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\build\generated\res\resValues\release"/></dataSet><dataSet config="release$Generated" generated="true"><source path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\release\res"/></dataSet><dataSet config="main" generated-set="main$Generated"><source path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res"><file name="slide_in_from_bottom" path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\anim\slide_in_from_bottom.xml" qualifiers="" type="anim"/><file name="slide_in_from_top" path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\anim\slide_in_from_top.xml" qualifiers="" type="anim"/><file name="slide_out_to_bottom" path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\anim\slide_out_to_bottom.xml" qualifiers="" type="anim"/><file name="slide_out_to_top" path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\anim\slide_out_to_top.xml" qualifiers="" type="anim"/><file name="indicator_bg_bottom" path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\drawable\indicator_bg_bottom.xml" qualifiers="" type="drawable"/><file name="indicator_bg_top" path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\drawable\indicator_bg_top.xml" qualifiers="" type="drawable"/><file name="default_ptr_flip" path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\drawable-hdpi\default_ptr_flip.png" qualifiers="hdpi-v4" type="drawable"/><file name="default_ptr_rotate" path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\drawable-hdpi\default_ptr_rotate.png" qualifiers="hdpi-v4" type="drawable"/><file name="indicator_arrow" path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\drawable-hdpi\indicator_arrow.png" qualifiers="hdpi-v4" type="drawable"/><file name="default_ptr_flip" path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\drawable-mdpi\default_ptr_flip.png" qualifiers="mdpi-v4" type="drawable"/><file name="default_ptr_rotate" path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\drawable-mdpi\default_ptr_rotate.png" qualifiers="mdpi-v4" type="drawable"/><file name="indicator_arrow" path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\drawable-mdpi\indicator_arrow.png" qualifiers="mdpi-v4" type="drawable"/><file name="default_ptr_flip" path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\drawable-xhdpi\default_ptr_flip.png" qualifiers="xhdpi-v4" type="drawable"/><file name="default_ptr_rotate" path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\drawable-xhdpi\default_ptr_rotate.png" qualifiers="xhdpi-v4" type="drawable"/><file name="indicator_arrow" path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\drawable-xhdpi\indicator_arrow.png" qualifiers="xhdpi-v4" type="drawable"/><file name="pull_to_refresh_header_horizontal" path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\layout\pull_to_refresh_header_horizontal.xml" qualifiers="" type="layout"/><file name="pull_to_refresh_header_vertical" path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\layout\pull_to_refresh_header_vertical.xml" qualifiers="" type="layout"/><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\values\attrs.xml" qualifiers=""><declare-styleable name="PullToRefresh">
+
+        <!-- A drawable to use as the background of the Refreshable View -->
+        <attr format="reference|color" name="ptrRefreshableViewBackground"/>
+
+        <!-- A drawable to use as the background of the Header and Footer Loading Views -->
+        <attr format="reference|color" name="ptrHeaderBackground"/>
+
+        <!-- Text Color of the Header and Footer Loading Views -->
+        <attr format="reference|color" name="ptrHeaderTextColor"/>
+
+        <!-- Text Color of the Header and Footer Loading Views Sub Header -->
+        <attr format="reference|color" name="ptrHeaderSubTextColor"/>
+
+        <!-- Mode of Pull-to-Refresh that should be used -->
+        <attr name="ptrMode">
+            <flag name="disabled" value="0x0"/>
+            <flag name="pullFromStart" value="0x1"/>
+            <flag name="pullFromEnd" value="0x2"/>
+            <flag name="both" value="0x3"/>
+            <flag name="manualOnly" value="0x4"/>
+
+            <!-- These last two are depreacted -->
+            <flag name="pullDownFromTop" value="0x1"/>
+            <flag name="pullUpFromBottom" value="0x2"/>
+        </attr>
+
+        <!-- Whether the Indicator overlay(s) should be used -->
+        <attr format="reference|boolean" name="ptrShowIndicator"/>
+
+        <!-- Drawable to use as Loading Indicator. Changes both Header and Footer. -->
+        <attr format="reference" name="ptrDrawable"/>
+
+        <!-- Drawable to use as Loading Indicator in the Header View. Overrides value set in ptrDrawable. -->
+        <attr format="reference" name="ptrDrawableStart"/>
+
+        <!-- Drawable to use as Loading Indicator in the Footer View. Overrides value set in ptrDrawable. -->
+        <attr format="reference" name="ptrDrawableEnd"/>
+
+        <!-- Whether Android's built-in Over Scroll should be utilised for Pull-to-Refresh. -->
+        <attr format="reference|boolean" name="ptrOverScroll"/>
+
+        <!-- Base text color, typeface, size, and style for Header and Footer Loading Views -->
+        <attr format="reference" name="ptrHeaderTextAppearance"/>
+
+        <!-- Base text color, typeface, size, and style for Header and Footer Loading Views Sub Header -->
+        <attr format="reference" name="ptrSubHeaderTextAppearance"/>
+
+        <!-- Style of Animation should be used displayed when pulling. -->
+        <attr name="ptrAnimationStyle">
+            <flag name="rotate" value="0x0"/>
+            <flag name="flip" value="0x1"/>
+        </attr>
+
+        <!-- Whether the user can scroll while the View is Refreshing -->
+        <attr format="reference|boolean" name="ptrScrollingWhileRefreshingEnabled"/>
+
+        <!--
+        	Whether PullToRefreshListView has it's extras enabled. This allows the user to be 
+        	able to scroll while refreshing, and behaves better. It acheives this by adding
+        	Header and/or Footer Views to the ListView.
+        -->
+        <attr format="reference|boolean" name="ptrListViewExtrasEnabled"/>
+
+        <!--
+        	Whether the Drawable should be continually rotated as you pull. This only
+        	takes effect when using the 'Rotate' Animation Style.
+        -->
+        <attr format="reference|boolean" name="ptrRotateDrawableWhilePulling"/>
+
+        <!-- BELOW HERE ARE DEPRECEATED. DO NOT USE. -->
+        <attr format="reference|color" name="ptrAdapterViewBackground"/>
+        <attr format="reference" name="ptrDrawableTop"/>
+        <attr format="reference" name="ptrDrawableBottom"/>
+    </declare-styleable></file><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\values\dimens.xml" qualifiers=""><dimen name="indicator_corner_radius">12dp</dimen><dimen name="indicator_right_padding">10dp</dimen><dimen name="indicator_internal_padding">4dp</dimen><dimen name="header_footer_top_bottom_padding">12dp</dimen><dimen name="header_footer_left_right_padding">24dp</dimen></file><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\values\ids.xml" qualifiers=""><item name="scrollview" type="id"/><item name="webview" type="id"/><item name="gridview" type="id"/></file><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\values\pull_refresh_strings.xml" qualifiers=""><string name="pull_to_refresh_from_bottom_pull_label">@string/pull_to_refresh_pull_label</string><string name="pull_to_refresh_from_bottom_release_label">@string/pull_to_refresh_release_label</string><string name="pull_to_refresh_from_bottom_refreshing_label">@string/pull_to_refresh_refreshing_label</string><string name="pull_to_refresh_refreshing_label">Loading…</string><string name="pull_to_refresh_pull_label">Pull to refresh…</string><string name="pull_to_refresh_release_label">Release to refresh…</string></file><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\values-ar\pull_refresh_strings.xml" qualifiers="ar"><string name="pull_to_refresh_release_label">اترك للتحديث…</string><string name="pull_to_refresh_refreshing_label">تحميل…</string><string name="pull_to_refresh_pull_label">اسحب للتحديث…</string></file><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\values-cs\pull_refresh_strings.xml" qualifiers="cs"><string name="pull_to_refresh_refreshing_label">Načítání…</string><string name="pull_to_refresh_pull_label">Tažením aktualizujete…</string><string name="pull_to_refresh_release_label">Uvolněním aktualizujete…</string></file><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\values-de\pull_refresh_strings.xml" qualifiers="de"><string name="pull_to_refresh_release_label">Loslassen zum Aktualisieren…</string><string name="pull_to_refresh_refreshing_label">Laden…</string><string name="pull_to_refresh_pull_label">Ziehen zum Aktualisieren…</string></file><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\values-es\pull_refresh_strings.xml" qualifiers="es"><string name="pull_to_refresh_refreshing_label">Cargando…</string><string name="pull_to_refresh_pull_label">Tirar para actualizar…</string><string name="pull_to_refresh_release_label">Soltar para actualizar…</string></file><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\values-fi\pull_refresh_strings.xml" qualifiers="fi"><string name="pull_to_refresh_release_label">Päivitä vapauttamalla…</string><string name="pull_to_refresh_pull_label">Päivitä vetämällä alas…</string><string name="pull_to_refresh_from_bottom_release_label">@string/pull_to_refresh_release_label</string><string name="pull_to_refresh_from_bottom_pull_label">Päivitä vetämällä ylös…</string><string name="pull_to_refresh_refreshing_label">Päivitetään…</string><string name="pull_to_refresh_from_bottom_refreshing_label">@string/pull_to_refresh_refreshing_label</string></file><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\values-fr\pull_refresh_strings.xml" qualifiers="fr"><string name="pull_to_refresh_refreshing_label">Chargement…</string><string name="pull_to_refresh_release_label">Relâcher pour rafraîchir…</string><string name="pull_to_refresh_pull_label">Tirez pour rafraîchir…</string></file><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\values-he\pull_refresh_strings.xml" qualifiers="he"><string name="pull_to_refresh_release_label">שחרר לרענון…</string><string name="pull_to_refresh_pull_label">משוך לרענון…</string><string name="pull_to_refresh_refreshing_label">טוען…</string></file><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\values-it\pull_refresh_strings.xml" qualifiers="it"><string name="pull_to_refresh_pull_label">Tira per aggiornare…</string><string name="pull_to_refresh_release_label">Rilascia per aggionare…</string><string name="pull_to_refresh_refreshing_label">Caricamento…</string></file><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\values-iw\pull_refresh_strings.xml" qualifiers="iw"><string name="pull_to_refresh_refreshing_label">טוען…</string><string name="pull_to_refresh_release_label">שחרר לרענון…</string><string name="pull_to_refresh_pull_label">משוך לרענון…</string></file><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\values-ja\pull_refresh_strings.xml" qualifiers="ja"><string name="pull_to_refresh_pull_label">画面を引っ張って…</string><string name="pull_to_refresh_refreshing_label">読み込み中…</string><string name="pull_to_refresh_release_label">指を離して更新…</string></file><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\values-ko\pull_refresh_strings.xml" qualifiers="ko"><string name="pull_to_refresh_pull_label">당겨서 새로 고침…</string><string name="pull_to_refresh_refreshing_label">로드 중…</string><string name="pull_to_refresh_release_label">놓아서 새로 고침…</string></file><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\values-nl\pull_refresh_strings.xml" qualifiers="nl"><string name="pull_to_refresh_pull_label">Sleep om te vernieuwen…</string><string name="pull_to_refresh_release_label">Loslaten om te vernieuwen…</string><string name="pull_to_refresh_refreshing_label">Laden…</string></file><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\values-pl\pull_refresh_strings.xml" qualifiers="pl"><string name="pull_to_refresh_pull_label">Pociągnij, aby odświeżyć…</string><string name="pull_to_refresh_release_label">Puść, aby odświeżyć…</string><string name="pull_to_refresh_refreshing_label">Wczytywanie…</string></file><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\values-pt\pull_refresh_strings.xml" qualifiers="pt"><string name="pull_to_refresh_pull_label">Puxe para atualizar…</string><string name="pull_to_refresh_refreshing_label">A carregar…</string><string name="pull_to_refresh_release_label">Liberação para atualizar…</string></file><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\values-pt-rBR\pull_refresh_strings.xml" qualifiers="pt-rBR"><string name="pull_to_refresh_pull_label">Puxe para atualizar…</string><string name="pull_to_refresh_release_label">Libere para atualizar…</string><string name="pull_to_refresh_refreshing_label">Carregando…</string></file><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\values-ro\pull_refresh_strings.xml" qualifiers="ro"><string name="pull_to_refresh_pull_label">Trage pentru a reîmprospăta…</string><string name="pull_to_refresh_release_label">Eliberează pentru a reîmprospăta…</string><string name="pull_to_refresh_refreshing_label">Încărcare…</string></file><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\values-ru\pull_refresh_strings.xml" qualifiers="ru"><string name="pull_to_refresh_release_label">Отпустите для обновления…</string><string name="pull_to_refresh_refreshing_label">Загрузка…</string><string name="pull_to_refresh_pull_label">Потяните для обновления…</string></file><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\values-zh\pull_refresh_strings.xml" qualifiers="zh"><string name="pull_to_refresh_release_label">放开以刷新…</string><string name="pull_to_refresh_pull_label">下拉刷新…</string><string name="pull_to_refresh_refreshing_label">正在载入…</string></file></source><source path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\build\generated\res\rs\release"/><source path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\build\generated\res\resValues\release"/></dataSet><dataSet config="release" generated-set="release$Generated"><source path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\release\res"/></dataSet><mergedItems><configuration qualifiers=""><declare-styleable name="PullToRefresh"><attr format="reference|color" name="ptrRefreshableViewBackground"/><attr format="reference|color" name="ptrHeaderBackground"/><attr format="reference|color" name="ptrHeaderTextColor"/><attr format="reference|color" name="ptrHeaderSubTextColor"/><attr name="ptrMode"><flag name="disabled" value="0x0"/><flag name="pullFromStart" value="0x1"/><flag name="pullFromEnd" value="0x2"/><flag name="both" value="0x3"/><flag name="manualOnly" value="0x4"/><flag name="pullDownFromTop" value="0x1"/><flag name="pullUpFromBottom" value="0x2"/></attr><attr format="reference|boolean" name="ptrShowIndicator"/><attr format="reference" name="ptrDrawable"/><attr format="reference" name="ptrDrawableStart"/><attr format="reference" name="ptrDrawableEnd"/><attr format="reference|boolean" name="ptrOverScroll"/><attr format="reference" name="ptrHeaderTextAppearance"/><attr format="reference" name="ptrSubHeaderTextAppearance"/><attr name="ptrAnimationStyle"><flag name="rotate" value="0x0"/><flag name="flip" value="0x1"/></attr><attr format="reference|boolean" name="ptrScrollingWhileRefreshingEnabled"/><attr format="reference|boolean" name="ptrListViewExtrasEnabled"/><attr format="reference|boolean" name="ptrRotateDrawableWhilePulling"/><attr format="reference|color" name="ptrAdapterViewBackground"/><attr format="reference" name="ptrDrawableTop"/><attr format="reference" name="ptrDrawableBottom"/></declare-styleable></configuration></mergedItems></merger>
\ No newline at end of file
Index: PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/internal/Utils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/internal/Utils.java	(revision )
+++ PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/internal/Utils.java	(revision )
@@ -0,0 +1,13 @@
+package com.handmark.pulltorefresh.library.internal;
+
+import android.util.Log;
+
+public class Utils {
+
+	static final String LOG_TAG = "PullToRefresh";
+
+	public static void warnDeprecation(String depreacted, String replacement) {
+		Log.w(LOG_TAG, "You're using the deprecated " + depreacted + " attr, please switch over to " + replacement);
+	}
+
+}
Index: PullToRefresh/build/intermediates/blame/res/androidTest/debug/multi/values-pl.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/blame/res/androidTest/debug/multi/values-pl.json	(revision )
+++ PullToRefresh/build/intermediates/blame/res/androidTest/debug/multi/values-pl.json	(revision )
@@ -0,0 +1,64 @@
+[
+    {
+        "outputFile": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\res\\merged\\androidTest\\debug\\values-pl\\values-pl.xml",
+        "map": [
+            {
+                "to": {
+                    "startLine": 2,
+                    "startColumn": 4,
+                    "startOffset": 55,
+                    "endColumn": 80,
+                    "endOffset": 131
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values-pl\\values-pl.xml",
+                    "position": {
+                        "startLine": 2,
+                        "startColumn": 4,
+                        "startOffset": 55,
+                        "endColumn": 80,
+                        "endOffset": 131
+                    }
+                }
+            },
+            {
+                "to": {
+                    "startLine": 3,
+                    "startColumn": 4,
+                    "startOffset": 136,
+                    "endColumn": 73,
+                    "endOffset": 205
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values-pl\\values-pl.xml",
+                    "position": {
+                        "startLine": 3,
+                        "startColumn": 4,
+                        "startOffset": 136,
+                        "endColumn": 73,
+                        "endOffset": 205
+                    }
+                }
+            },
+            {
+                "to": {
+                    "startLine": 4,
+                    "startColumn": 4,
+                    "startOffset": 210,
+                    "endColumn": 78,
+                    "endOffset": 284
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values-pl\\values-pl.xml",
+                    "position": {
+                        "startLine": 4,
+                        "startColumn": 4,
+                        "startOffset": 210,
+                        "endColumn": 78,
+                        "endOffset": 284
+                    }
+                }
+            }
+        ]
+    }
+]
\ No newline at end of file
Index: gradlew
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- gradlew	(revision )
+++ gradlew	(revision )
@@ -0,0 +1,160 @@
+#!/usr/bin/env bash
+
+##############################################################################
+##
+##  Gradle start up script for UN*X
+##
+##############################################################################
+
+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+DEFAULT_JVM_OPTS=""
+
+APP_NAME="Gradle"
+APP_BASE_NAME=`basename "$0"`
+
+# Use the maximum available, or set MAX_FD != -1 to use that value.
+MAX_FD="maximum"
+
+warn ( ) {
+    echo "$*"
+}
+
+die ( ) {
+    echo
+    echo "$*"
+    echo
+    exit 1
+}
+
+# OS specific support (must be 'true' or 'false').
+cygwin=false
+msys=false
+darwin=false
+case "`uname`" in
+  CYGWIN* )
+    cygwin=true
+    ;;
+  Darwin* )
+    darwin=true
+    ;;
+  MINGW* )
+    msys=true
+    ;;
+esac
+
+# Attempt to set APP_HOME
+# Resolve links: $0 may be a link
+PRG="$0"
+# Need this for relative symlinks.
+while [ -h "$PRG" ] ; do
+    ls=`ls -ld "$PRG"`
+    link=`expr "$ls" : '.*-> \(.*\)$'`
+    if expr "$link" : '/.*' > /dev/null; then
+        PRG="$link"
+    else
+        PRG=`dirname "$PRG"`"/$link"
+    fi
+done
+SAVED="`pwd`"
+cd "`dirname \"$PRG\"`/" >/dev/null
+APP_HOME="`pwd -P`"
+cd "$SAVED" >/dev/null
+
+CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar
+
+# Determine the Java command to use to start the JVM.
+if [ -n "$JAVA_HOME" ] ; then
+    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
+        # IBM's JDK on AIX uses strange locations for the executables
+        JAVACMD="$JAVA_HOME/jre/sh/java"
+    else
+        JAVACMD="$JAVA_HOME/bin/java"
+    fi
+    if [ ! -x "$JAVACMD" ] ; then
+        die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME
+
+Please set the JAVA_HOME variable in your environment to match the
+location of your Java installation."
+    fi
+else
+    JAVACMD="java"
+    which java >/dev/null 2>&1 || die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
+
+Please set the JAVA_HOME variable in your environment to match the
+location of your Java installation."
+fi
+
+# Increase the maximum file descriptors if we can.
+if [ "$cygwin" = "false" -a "$darwin" = "false" ] ; then
+    MAX_FD_LIMIT=`ulimit -H -n`
+    if [ $? -eq 0 ] ; then
+        if [ "$MAX_FD" = "maximum" -o "$MAX_FD" = "max" ] ; then
+            MAX_FD="$MAX_FD_LIMIT"
+        fi
+        ulimit -n $MAX_FD
+        if [ $? -ne 0 ] ; then
+            warn "Could not set maximum file descriptor limit: $MAX_FD"
+        fi
+    else
+        warn "Could not query maximum file descriptor limit: $MAX_FD_LIMIT"
+    fi
+fi
+
+# For Darwin, add options to specify how the application appears in the dock
+if $darwin; then
+    GRADLE_OPTS="$GRADLE_OPTS \"-Xdock:name=$APP_NAME\" \"-Xdock:icon=$APP_HOME/media/gradle.icns\""
+fi
+
+# For Cygwin, switch paths to Windows format before running java
+if $cygwin ; then
+    APP_HOME=`cygpath --path --mixed "$APP_HOME"`
+    CLASSPATH=`cygpath --path --mixed "$CLASSPATH"`
+    JAVACMD=`cygpath --unix "$JAVACMD"`
+
+    # We build the pattern for arguments to be converted via cygpath
+    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`
+    SEP=""
+    for dir in $ROOTDIRSRAW ; do
+        ROOTDIRS="$ROOTDIRS$SEP$dir"
+        SEP="|"
+    done
+    OURCYGPATTERN="(^($ROOTDIRS))"
+    # Add a user-defined pattern to the cygpath arguments
+    if [ "$GRADLE_CYGPATTERN" != "" ] ; then
+        OURCYGPATTERN="$OURCYGPATTERN|($GRADLE_CYGPATTERN)"
+    fi
+    # Now convert the arguments - kludge to limit ourselves to /bin/sh
+    i=0
+    for arg in "$@" ; do
+        CHECK=`echo "$arg"|egrep -c "$OURCYGPATTERN" -`
+        CHECK2=`echo "$arg"|egrep -c "^-"`                                 ### Determine if an option
+
+        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition
+            eval `echo args$i`=`cygpath --path --ignore --mixed "$arg"`
+        else
+            eval `echo args$i`="\"$arg\""
+        fi
+        i=$((i+1))
+    done
+    case $i in
+        (0) set -- ;;
+        (1) set -- "$args0" ;;
+        (2) set -- "$args0" "$args1" ;;
+        (3) set -- "$args0" "$args1" "$args2" ;;
+        (4) set -- "$args0" "$args1" "$args2" "$args3" ;;
+        (5) set -- "$args0" "$args1" "$args2" "$args3" "$args4" ;;
+        (6) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" ;;
+        (7) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" ;;
+        (8) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" ;;
+        (9) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" "$args8" ;;
+    esac
+fi
+
+# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules
+function splitJvmOpts() {
+    JVM_OPTS=("$@")
+}
+eval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS
+JVM_OPTS[${#JVM_OPTS[*]}]="-Dorg.gradle.appname=$APP_BASE_NAME"
+
+exec "$JAVACMD" "${JVM_OPTS[@]}" -classpath "$CLASSPATH" org.gradle.wrapper.GradleWrapperMain "$@"
Index: PullToRefresh/build/intermediates/incremental/packageDebugResources/merger.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/incremental/packageDebugResources/merger.xml	(revision )
+++ PullToRefresh/build/intermediates/incremental/packageDebugResources/merger.xml	(revision )
@@ -0,0 +1,76 @@
+<?xml version="1.0" encoding="utf-8"?>
+<merger version="3"><dataSet config="main$Generated" generated="true"><source path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res"/><source path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\build\generated\res\rs\debug"/><source path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\build\generated\res\resValues\debug"/></dataSet><dataSet config="debug$Generated" generated="true"><source path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\debug\res"/></dataSet><dataSet config="main" generated-set="main$Generated"><source path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res"><file name="slide_in_from_bottom" path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\anim\slide_in_from_bottom.xml" qualifiers="" type="anim"/><file name="slide_in_from_top" path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\anim\slide_in_from_top.xml" qualifiers="" type="anim"/><file name="slide_out_to_bottom" path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\anim\slide_out_to_bottom.xml" qualifiers="" type="anim"/><file name="slide_out_to_top" path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\anim\slide_out_to_top.xml" qualifiers="" type="anim"/><file name="indicator_bg_bottom" path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\drawable\indicator_bg_bottom.xml" qualifiers="" type="drawable"/><file name="indicator_bg_top" path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\drawable\indicator_bg_top.xml" qualifiers="" type="drawable"/><file name="default_ptr_flip" path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\drawable-hdpi\default_ptr_flip.png" qualifiers="hdpi-v4" type="drawable"/><file name="default_ptr_rotate" path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\drawable-hdpi\default_ptr_rotate.png" qualifiers="hdpi-v4" type="drawable"/><file name="indicator_arrow" path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\drawable-hdpi\indicator_arrow.png" qualifiers="hdpi-v4" type="drawable"/><file name="default_ptr_flip" path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\drawable-mdpi\default_ptr_flip.png" qualifiers="mdpi-v4" type="drawable"/><file name="default_ptr_rotate" path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\drawable-mdpi\default_ptr_rotate.png" qualifiers="mdpi-v4" type="drawable"/><file name="indicator_arrow" path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\drawable-mdpi\indicator_arrow.png" qualifiers="mdpi-v4" type="drawable"/><file name="default_ptr_flip" path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\drawable-xhdpi\default_ptr_flip.png" qualifiers="xhdpi-v4" type="drawable"/><file name="default_ptr_rotate" path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\drawable-xhdpi\default_ptr_rotate.png" qualifiers="xhdpi-v4" type="drawable"/><file name="indicator_arrow" path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\drawable-xhdpi\indicator_arrow.png" qualifiers="xhdpi-v4" type="drawable"/><file name="pull_to_refresh_header_horizontal" path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\layout\pull_to_refresh_header_horizontal.xml" qualifiers="" type="layout"/><file name="pull_to_refresh_header_vertical" path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\layout\pull_to_refresh_header_vertical.xml" qualifiers="" type="layout"/><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\values\attrs.xml" qualifiers=""><declare-styleable name="PullToRefresh">
+
+        <!-- A drawable to use as the background of the Refreshable View -->
+        <attr format="reference|color" name="ptrRefreshableViewBackground"/>
+
+        <!-- A drawable to use as the background of the Header and Footer Loading Views -->
+        <attr format="reference|color" name="ptrHeaderBackground"/>
+
+        <!-- Text Color of the Header and Footer Loading Views -->
+        <attr format="reference|color" name="ptrHeaderTextColor"/>
+
+        <!-- Text Color of the Header and Footer Loading Views Sub Header -->
+        <attr format="reference|color" name="ptrHeaderSubTextColor"/>
+
+        <!-- Mode of Pull-to-Refresh that should be used -->
+        <attr name="ptrMode">
+            <flag name="disabled" value="0x0"/>
+            <flag name="pullFromStart" value="0x1"/>
+            <flag name="pullFromEnd" value="0x2"/>
+            <flag name="both" value="0x3"/>
+            <flag name="manualOnly" value="0x4"/>
+
+            <!-- These last two are depreacted -->
+            <flag name="pullDownFromTop" value="0x1"/>
+            <flag name="pullUpFromBottom" value="0x2"/>
+        </attr>
+
+        <!-- Whether the Indicator overlay(s) should be used -->
+        <attr format="reference|boolean" name="ptrShowIndicator"/>
+
+        <!-- Drawable to use as Loading Indicator. Changes both Header and Footer. -->
+        <attr format="reference" name="ptrDrawable"/>
+
+        <!-- Drawable to use as Loading Indicator in the Header View. Overrides value set in ptrDrawable. -->
+        <attr format="reference" name="ptrDrawableStart"/>
+
+        <!-- Drawable to use as Loading Indicator in the Footer View. Overrides value set in ptrDrawable. -->
+        <attr format="reference" name="ptrDrawableEnd"/>
+
+        <!-- Whether Android's built-in Over Scroll should be utilised for Pull-to-Refresh. -->
+        <attr format="reference|boolean" name="ptrOverScroll"/>
+
+        <!-- Base text color, typeface, size, and style for Header and Footer Loading Views -->
+        <attr format="reference" name="ptrHeaderTextAppearance"/>
+
+        <!-- Base text color, typeface, size, and style for Header and Footer Loading Views Sub Header -->
+        <attr format="reference" name="ptrSubHeaderTextAppearance"/>
+
+        <!-- Style of Animation should be used displayed when pulling. -->
+        <attr name="ptrAnimationStyle">
+            <flag name="rotate" value="0x0"/>
+            <flag name="flip" value="0x1"/>
+        </attr>
+
+        <!-- Whether the user can scroll while the View is Refreshing -->
+        <attr format="reference|boolean" name="ptrScrollingWhileRefreshingEnabled"/>
+
+        <!--
+        	Whether PullToRefreshListView has it's extras enabled. This allows the user to be 
+        	able to scroll while refreshing, and behaves better. It acheives this by adding
+        	Header and/or Footer Views to the ListView.
+        -->
+        <attr format="reference|boolean" name="ptrListViewExtrasEnabled"/>
+
+        <!--
+        	Whether the Drawable should be continually rotated as you pull. This only
+        	takes effect when using the 'Rotate' Animation Style.
+        -->
+        <attr format="reference|boolean" name="ptrRotateDrawableWhilePulling"/>
+
+        <!-- BELOW HERE ARE DEPRECEATED. DO NOT USE. -->
+        <attr format="reference|color" name="ptrAdapterViewBackground"/>
+        <attr format="reference" name="ptrDrawableTop"/>
+        <attr format="reference" name="ptrDrawableBottom"/>
+    </declare-styleable></file><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\values\dimens.xml" qualifiers=""><dimen name="indicator_corner_radius">12dp</dimen><dimen name="indicator_right_padding">10dp</dimen><dimen name="indicator_internal_padding">4dp</dimen><dimen name="header_footer_top_bottom_padding">12dp</dimen><dimen name="header_footer_left_right_padding">24dp</dimen></file><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\values\ids.xml" qualifiers=""><item name="scrollview" type="id"/><item name="webview" type="id"/><item name="gridview" type="id"/></file><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\values\pull_refresh_strings.xml" qualifiers=""><string name="pull_to_refresh_from_bottom_pull_label">@string/pull_to_refresh_pull_label</string><string name="pull_to_refresh_from_bottom_release_label">@string/pull_to_refresh_release_label</string><string name="pull_to_refresh_from_bottom_refreshing_label">@string/pull_to_refresh_refreshing_label</string><string name="pull_to_refresh_refreshing_label">Loading…</string><string name="pull_to_refresh_pull_label">Pull to refresh…</string><string name="pull_to_refresh_release_label">Release to refresh…</string></file><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\values-ar\pull_refresh_strings.xml" qualifiers="ar"><string name="pull_to_refresh_release_label">اترك للتحديث…</string><string name="pull_to_refresh_refreshing_label">تحميل…</string><string name="pull_to_refresh_pull_label">اسحب للتحديث…</string></file><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\values-cs\pull_refresh_strings.xml" qualifiers="cs"><string name="pull_to_refresh_refreshing_label">Načítání…</string><string name="pull_to_refresh_pull_label">Tažením aktualizujete…</string><string name="pull_to_refresh_release_label">Uvolněním aktualizujete…</string></file><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\values-de\pull_refresh_strings.xml" qualifiers="de"><string name="pull_to_refresh_release_label">Loslassen zum Aktualisieren…</string><string name="pull_to_refresh_refreshing_label">Laden…</string><string name="pull_to_refresh_pull_label">Ziehen zum Aktualisieren…</string></file><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\values-es\pull_refresh_strings.xml" qualifiers="es"><string name="pull_to_refresh_refreshing_label">Cargando…</string><string name="pull_to_refresh_pull_label">Tirar para actualizar…</string><string name="pull_to_refresh_release_label">Soltar para actualizar…</string></file><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\values-fi\pull_refresh_strings.xml" qualifiers="fi"><string name="pull_to_refresh_release_label">Päivitä vapauttamalla…</string><string name="pull_to_refresh_pull_label">Päivitä vetämällä alas…</string><string name="pull_to_refresh_from_bottom_release_label">@string/pull_to_refresh_release_label</string><string name="pull_to_refresh_from_bottom_pull_label">Päivitä vetämällä ylös…</string><string name="pull_to_refresh_refreshing_label">Päivitetään…</string><string name="pull_to_refresh_from_bottom_refreshing_label">@string/pull_to_refresh_refreshing_label</string></file><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\values-fr\pull_refresh_strings.xml" qualifiers="fr"><string name="pull_to_refresh_refreshing_label">Chargement…</string><string name="pull_to_refresh_release_label">Relâcher pour rafraîchir…</string><string name="pull_to_refresh_pull_label">Tirez pour rafraîchir…</string></file><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\values-he\pull_refresh_strings.xml" qualifiers="he"><string name="pull_to_refresh_release_label">שחרר לרענון…</string><string name="pull_to_refresh_pull_label">משוך לרענון…</string><string name="pull_to_refresh_refreshing_label">טוען…</string></file><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\values-it\pull_refresh_strings.xml" qualifiers="it"><string name="pull_to_refresh_pull_label">Tira per aggiornare…</string><string name="pull_to_refresh_release_label">Rilascia per aggionare…</string><string name="pull_to_refresh_refreshing_label">Caricamento…</string></file><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\values-iw\pull_refresh_strings.xml" qualifiers="iw"><string name="pull_to_refresh_refreshing_label">טוען…</string><string name="pull_to_refresh_release_label">שחרר לרענון…</string><string name="pull_to_refresh_pull_label">משוך לרענון…</string></file><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\values-ja\pull_refresh_strings.xml" qualifiers="ja"><string name="pull_to_refresh_pull_label">画面を引っ張って…</string><string name="pull_to_refresh_refreshing_label">読み込み中…</string><string name="pull_to_refresh_release_label">指を離して更新…</string></file><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\values-ko\pull_refresh_strings.xml" qualifiers="ko"><string name="pull_to_refresh_pull_label">당겨서 새로 고침…</string><string name="pull_to_refresh_refreshing_label">로드 중…</string><string name="pull_to_refresh_release_label">놓아서 새로 고침…</string></file><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\values-nl\pull_refresh_strings.xml" qualifiers="nl"><string name="pull_to_refresh_pull_label">Sleep om te vernieuwen…</string><string name="pull_to_refresh_release_label">Loslaten om te vernieuwen…</string><string name="pull_to_refresh_refreshing_label">Laden…</string></file><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\values-pl\pull_refresh_strings.xml" qualifiers="pl"><string name="pull_to_refresh_pull_label">Pociągnij, aby odświeżyć…</string><string name="pull_to_refresh_release_label">Puść, aby odświeżyć…</string><string name="pull_to_refresh_refreshing_label">Wczytywanie…</string></file><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\values-pt\pull_refresh_strings.xml" qualifiers="pt"><string name="pull_to_refresh_pull_label">Puxe para atualizar…</string><string name="pull_to_refresh_refreshing_label">A carregar…</string><string name="pull_to_refresh_release_label">Liberação para atualizar…</string></file><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\values-pt-rBR\pull_refresh_strings.xml" qualifiers="pt-rBR"><string name="pull_to_refresh_pull_label">Puxe para atualizar…</string><string name="pull_to_refresh_release_label">Libere para atualizar…</string><string name="pull_to_refresh_refreshing_label">Carregando…</string></file><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\values-ro\pull_refresh_strings.xml" qualifiers="ro"><string name="pull_to_refresh_pull_label">Trage pentru a reîmprospăta…</string><string name="pull_to_refresh_release_label">Eliberează pentru a reîmprospăta…</string><string name="pull_to_refresh_refreshing_label">Încărcare…</string></file><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\values-ru\pull_refresh_strings.xml" qualifiers="ru"><string name="pull_to_refresh_release_label">Отпустите для обновления…</string><string name="pull_to_refresh_refreshing_label">Загрузка…</string><string name="pull_to_refresh_pull_label">Потяните для обновления…</string></file><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\res\values-zh\pull_refresh_strings.xml" qualifiers="zh"><string name="pull_to_refresh_release_label">放开以刷新…</string><string name="pull_to_refresh_pull_label">下拉刷新…</string><string name="pull_to_refresh_refreshing_label">正在载入…</string></file></source><source path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\build\generated\res\rs\debug"/><source path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\build\generated\res\resValues\debug"/></dataSet><dataSet config="debug" generated-set="debug$Generated"><source path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\debug\res"/></dataSet><mergedItems><configuration qualifiers=""><declare-styleable name="PullToRefresh"><attr format="reference|color" name="ptrRefreshableViewBackground"/><attr format="reference|color" name="ptrHeaderBackground"/><attr format="reference|color" name="ptrHeaderTextColor"/><attr format="reference|color" name="ptrHeaderSubTextColor"/><attr name="ptrMode"><flag name="disabled" value="0x0"/><flag name="pullFromStart" value="0x1"/><flag name="pullFromEnd" value="0x2"/><flag name="both" value="0x3"/><flag name="manualOnly" value="0x4"/><flag name="pullDownFromTop" value="0x1"/><flag name="pullUpFromBottom" value="0x2"/></attr><attr format="reference|boolean" name="ptrShowIndicator"/><attr format="reference" name="ptrDrawable"/><attr format="reference" name="ptrDrawableStart"/><attr format="reference" name="ptrDrawableEnd"/><attr format="reference|boolean" name="ptrOverScroll"/><attr format="reference" name="ptrHeaderTextAppearance"/><attr format="reference" name="ptrSubHeaderTextAppearance"/><attr name="ptrAnimationStyle"><flag name="rotate" value="0x0"/><flag name="flip" value="0x1"/></attr><attr format="reference|boolean" name="ptrScrollingWhileRefreshingEnabled"/><attr format="reference|boolean" name="ptrListViewExtrasEnabled"/><attr format="reference|boolean" name="ptrRotateDrawableWhilePulling"/><attr format="reference|color" name="ptrAdapterViewBackground"/><attr format="reference" name="ptrDrawableTop"/><attr format="reference" name="ptrDrawableBottom"/></declare-styleable></configuration></mergedItems></merger>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/bundles/debug/res/values-it/values-it.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/bundles/debug/res/values-it/values-it.xml	(revision )
+++ PullToRefresh/build/intermediates/bundles/debug/res/values-it/values-it.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="pull_to_refresh_pull_label">Tira per aggiornare…</string>
+    <string name="pull_to_refresh_refreshing_label">Caricamento…</string>
+    <string name="pull_to_refresh_release_label">Rilascia per aggionare…</string>
+</resources>
\ No newline at end of file
Index: PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/OverscrollHelper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/OverscrollHelper.java	(revision )
+++ PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/OverscrollHelper.java	(revision )
@@ -0,0 +1,178 @@
+/*******************************************************************************
+ * Copyright 2011, 2012 Chris Banes.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ *******************************************************************************/
+package com.handmark.pulltorefresh.library;
+
+import android.annotation.TargetApi;
+import android.util.Log;
+import android.view.View;
+
+import com.handmark.pulltorefresh.library.PullToRefreshBase.Mode;
+import com.handmark.pulltorefresh.library.PullToRefreshBase.State;
+
+@TargetApi(9)
+public final class OverscrollHelper {
+
+	static final String LOG_TAG = "OverscrollHelper";
+	static final float DEFAULT_OVERSCROLL_SCALE = 1f;
+
+	/**
+	 * Helper method for Overscrolling that encapsulates all of the necessary
+	 * function.
+	 * <p/>
+	 * This should only be used on AdapterView's such as ListView as it just
+	 * calls through to overScrollBy() with the scrollRange = 0. AdapterView's
+	 * do not have a scroll range (i.e. getScrollY() doesn't work).
+	 * 
+	 * @param view - PullToRefreshView that is calling this.
+	 * @param deltaX - Change in X in pixels, passed through from from
+	 *            overScrollBy call
+	 * @param scrollX - Current X scroll value in pixels before applying deltaY,
+	 *            passed through from from overScrollBy call
+	 * @param deltaY - Change in Y in pixels, passed through from from
+	 *            overScrollBy call
+	 * @param scrollY - Current Y scroll value in pixels before applying deltaY,
+	 *            passed through from from overScrollBy call
+	 * @param isTouchEvent - true if this scroll operation is the result of a
+	 *            touch event, passed through from from overScrollBy call
+	 */
+	public static void overScrollBy(final PullToRefreshBase<?> view, final int deltaX, final int scrollX,
+			final int deltaY, final int scrollY, final boolean isTouchEvent) {
+		overScrollBy(view, deltaX, scrollX, deltaY, scrollY, 0, isTouchEvent);
+	}
+
+	/**
+	 * Helper method for Overscrolling that encapsulates all of the necessary
+	 * function. This version of the call is used for Views that need to specify
+	 * a Scroll Range but scroll back to it's edge correctly.
+	 * 
+	 * @param view - PullToRefreshView that is calling this.
+	 * @param deltaX - Change in X in pixels, passed through from from
+	 *            overScrollBy call
+	 * @param scrollX - Current X scroll value in pixels before applying deltaY,
+	 *            passed through from from overScrollBy call
+	 * @param deltaY - Change in Y in pixels, passed through from from
+	 *            overScrollBy call
+	 * @param scrollY - Current Y scroll value in pixels before applying deltaY,
+	 *            passed through from from overScrollBy call
+	 * @param scrollRange - Scroll Range of the View, specifically needed for
+	 *            ScrollView
+	 * @param isTouchEvent - true if this scroll operation is the result of a
+	 *            touch event, passed through from from overScrollBy call
+	 */
+	public static void overScrollBy(final PullToRefreshBase<?> view, final int deltaX, final int scrollX,
+			final int deltaY, final int scrollY, final int scrollRange, final boolean isTouchEvent) {
+		overScrollBy(view, deltaX, scrollX, deltaY, scrollY, scrollRange, 0, DEFAULT_OVERSCROLL_SCALE, isTouchEvent);
+	}
+
+	/**
+	 * Helper method for Overscrolling that encapsulates all of the necessary
+	 * function. This is the advanced version of the call.
+	 * 
+	 * @param view - PullToRefreshView that is calling this.
+	 * @param deltaX - Change in X in pixels, passed through from from
+	 *            overScrollBy call
+	 * @param scrollX - Current X scroll value in pixels before applying deltaY,
+	 *            passed through from from overScrollBy call
+	 * @param deltaY - Change in Y in pixels, passed through from from
+	 *            overScrollBy call
+	 * @param scrollY - Current Y scroll value in pixels before applying deltaY,
+	 *            passed through from from overScrollBy call
+	 * @param scrollRange - Scroll Range of the View, specifically needed for
+	 *            ScrollView
+	 * @param fuzzyThreshold - Threshold for which the values how fuzzy we
+	 *            should treat the other values. Needed for WebView as it
+	 *            doesn't always scroll back to it's edge. 0 = no fuzziness.
+	 * @param scaleFactor - Scale Factor for overscroll amount
+	 * @param isTouchEvent - true if this scroll operation is the result of a
+	 *            touch event, passed through from from overScrollBy call
+	 */
+	public static void overScrollBy(final PullToRefreshBase<?> view, final int deltaX, final int scrollX,
+			final int deltaY, final int scrollY, final int scrollRange, final int fuzzyThreshold,
+			final float scaleFactor, final boolean isTouchEvent) {
+
+		final int deltaValue, currentScrollValue, scrollValue;
+		switch (view.getPullToRefreshScrollDirection()) {
+			case HORIZONTAL:
+				deltaValue = deltaX;
+				scrollValue = scrollX;
+				currentScrollValue = view.getScrollX();
+				break;
+			case VERTICAL:
+			default:
+				deltaValue = deltaY;
+				scrollValue = scrollY;
+				currentScrollValue = view.getScrollY();
+				break;
+		}
+
+		// Check that OverScroll is enabled and that we're not currently
+		// refreshing.
+		if (view.isPullToRefreshOverScrollEnabled() && !view.isRefreshing()) {
+			final Mode mode = view.getMode();
+
+			// Check that Pull-to-Refresh is enabled, and the event isn't from
+			// touch
+			if (mode.permitsPullToRefresh() && !isTouchEvent && deltaValue != 0) {
+				final int newScrollValue = (deltaValue + scrollValue);
+
+				if (PullToRefreshBase.DEBUG) {
+					Log.d(LOG_TAG, "OverScroll. DeltaX: " + deltaX + ", ScrollX: " + scrollX + ", DeltaY: " + deltaY
+							+ ", ScrollY: " + scrollY + ", NewY: " + newScrollValue + ", ScrollRange: " + scrollRange
+							+ ", CurrentScroll: " + currentScrollValue);
+				}
+
+				if (newScrollValue < (0 - fuzzyThreshold)) {
+					// Check the mode supports the overscroll direction, and
+					// then move scroll
+					if (mode.showHeaderLoadingLayout()) {
+						// If we're currently at zero, we're about to start
+						// overscrolling, so change the state
+						if (currentScrollValue == 0) {
+							view.setState(State.OVERSCROLLING);
+						}
+
+						view.setHeaderScroll((int) (scaleFactor * (currentScrollValue + newScrollValue)));
+					}
+				} else if (newScrollValue > (scrollRange + fuzzyThreshold)) {
+					// Check the mode supports the overscroll direction, and
+					// then move scroll
+					if (mode.showFooterLoadingLayout()) {
+						// If we're currently at zero, we're about to start
+						// overscrolling, so change the state
+						if (currentScrollValue == 0) {
+							view.setState(State.OVERSCROLLING);
+						}
+
+						view.setHeaderScroll((int) (scaleFactor * (currentScrollValue + newScrollValue - scrollRange)));
+					}
+				} else if (Math.abs(newScrollValue) <= fuzzyThreshold
+						|| Math.abs(newScrollValue - scrollRange) <= fuzzyThreshold) {
+					// Means we've stopped overscrolling, so scroll back to 0
+					view.setState(State.RESET);
+				}
+			} else if (isTouchEvent && State.OVERSCROLLING == view.getState()) {
+				// This condition means that we were overscrolling from a fling,
+				// but the user has touched the View and is now overscrolling
+				// from touch instead. We need to just reset.
+				view.setState(State.RESET);
+			}
+		}
+	}
+
+	static boolean isAndroidOverScrollEnabled(View view) {
+		return view.getOverScrollMode() != View.OVER_SCROLL_NEVER;
+	}
+}
Index: app/src/main/res/values/colors.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/colors.xml	(revision )
+++ app/src/main/res/values/colors.xml	(revision )
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+
+    <color name="light_grey">#E6E6E6</color>
+    <color name="dark_grey">#B8B8B8</color>
+    <color name="frame_color">#717171</color>
+    <color name="text_color">#666666</color>
+    <color name="blue">#63b8ff</color>
+
+</resources>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/bundles/release/res/drawable/indicator_bg_top.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/bundles/release/res/drawable/indicator_bg_top.xml	(revision )
+++ PullToRefresh/build/intermediates/bundles/release/res/drawable/indicator_bg_top.xml	(revision )
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="rectangle" >
+
+    <solid android:color="#40000000" />
+
+    <!--
+    I know the android:radius is useless here but it's needed to fix an old bug:
+    http://code.google.com/p/android/issues/detail?id=939
+    -->
+    <corners
+        android:bottomLeftRadius="@dimen/indicator_corner_radius"
+        android:bottomRightRadius="@dimen/indicator_corner_radius"
+        android:radius="1dp"
+        android:topLeftRadius="0dp"
+        android:topRightRadius="0dp" />
+
+</shape>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/blame/res/androidTest/debug/multi/values-ru.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/blame/res/androidTest/debug/multi/values-ru.json	(revision )
+++ PullToRefresh/build/intermediates/blame/res/androidTest/debug/multi/values-ru.json	(revision )
@@ -0,0 +1,64 @@
+[
+    {
+        "outputFile": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\res\\merged\\androidTest\\debug\\values-ru\\values-ru.xml",
+        "map": [
+            {
+                "to": {
+                    "startLine": 2,
+                    "startColumn": 4,
+                    "startOffset": 55,
+                    "endColumn": 79,
+                    "endOffset": 130
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values-ru\\values-ru.xml",
+                    "position": {
+                        "startLine": 2,
+                        "startColumn": 4,
+                        "startOffset": 55,
+                        "endColumn": 79,
+                        "endOffset": 130
+                    }
+                }
+            },
+            {
+                "to": {
+                    "startLine": 3,
+                    "startColumn": 4,
+                    "startOffset": 135,
+                    "endColumn": 70,
+                    "endOffset": 201
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values-ru\\values-ru.xml",
+                    "position": {
+                        "startLine": 3,
+                        "startColumn": 4,
+                        "startOffset": 135,
+                        "endColumn": 70,
+                        "endOffset": 201
+                    }
+                }
+            },
+            {
+                "to": {
+                    "startLine": 4,
+                    "startColumn": 4,
+                    "startOffset": 206,
+                    "endColumn": 83,
+                    "endOffset": 285
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values-ru\\values-ru.xml",
+                    "position": {
+                        "startLine": 4,
+                        "startColumn": 4,
+                        "startOffset": 206,
+                        "endColumn": 83,
+                        "endOffset": 285
+                    }
+                }
+            }
+        ]
+    }
+]
\ No newline at end of file
Index: PullToRefresh/src/main/res/layout/pull_to_refresh_header_vertical.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/src/main/res/layout/pull_to_refresh_header_vertical.xml	(revision )
+++ PullToRefresh/src/main/res/layout/pull_to_refresh_header_vertical.xml	(revision )
@@ -0,0 +1,59 @@
+<?xml version="1.0" encoding="utf-8"?>
+<merge xmlns:android="http://schemas.android.com/apk/res/android" >
+
+    <FrameLayout
+        android:id="@+id/fl_inner"
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content"
+        android:paddingBottom="@dimen/header_footer_top_bottom_padding"
+        android:paddingLeft="@dimen/header_footer_left_right_padding"
+        android:paddingRight="@dimen/header_footer_left_right_padding"
+        android:paddingTop="@dimen/header_footer_top_bottom_padding" >
+
+        <FrameLayout
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="left|center_vertical" >
+
+            <ImageView
+                android:id="@+id/pull_to_refresh_image"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_gravity="center" />
+
+            <ProgressBar
+                android:id="@+id/pull_to_refresh_progress"
+                style="?android:attr/progressBarStyleSmall"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_gravity="center"
+                android:indeterminate="true"
+                android:visibility="gone" />
+        </FrameLayout>
+
+        <LinearLayout
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="center"
+            android:gravity="center_horizontal"
+            android:orientation="vertical" >
+
+            <TextView
+                android:id="@+id/pull_to_refresh_text"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:singleLine="true"
+                android:textAppearance="?android:attr/textAppearance"
+                android:textStyle="bold" />
+
+            <TextView
+                android:id="@+id/pull_to_refresh_sub_text"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:singleLine="true"
+                android:textAppearance="?android:attr/textAppearanceSmall"
+                android:visibility="gone" />
+        </LinearLayout>
+    </FrameLayout>
+
+</merge>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/blame/res/androidTest/debug/single/drawable.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/blame/res/androidTest/debug/single/drawable.json	(revision )
+++ PullToRefresh/build/intermediates/blame/res/androidTest/debug/single/drawable.json	(revision )
@@ -0,0 +1,10 @@
+[
+    {
+        "merged": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\res\\merged\\androidTest\\debug\\drawable\\indicator_bg_top.xml",
+        "source": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\drawable\\indicator_bg_top.xml"
+    },
+    {
+        "merged": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\res\\merged\\androidTest\\debug\\drawable\\indicator_bg_bottom.xml",
+        "source": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\drawable\\indicator_bg_bottom.xml"
+    }
+]
\ No newline at end of file
Index: PullToRefresh/build/intermediates/bundles/release/res/drawable/indicator_bg_bottom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/bundles/release/res/drawable/indicator_bg_bottom.xml	(revision )
+++ PullToRefresh/build/intermediates/bundles/release/res/drawable/indicator_bg_bottom.xml	(revision )
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="rectangle" >
+
+    <solid android:color="#40000000" />
+
+    <!--
+    I know the android:radius is useless here but it's needed to fix an old bug:
+    http://code.google.com/p/android/issues/detail?id=939
+    -->
+    <corners
+        android:bottomLeftRadius="0dp"
+        android:bottomRightRadius="0dp"
+        android:radius="1dp"
+        android:topLeftRadius="@dimen/indicator_corner_radius"
+        android:topRightRadius="@dimen/indicator_corner_radius" />
+
+</shape>
\ No newline at end of file
Index: app/src/main/java/com/example/victor/weathertest3/bean/WeatherBean.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/victor/weathertest3/bean/WeatherBean.java	(revision )
+++ app/src/main/java/com/example/victor/weathertest3/bean/WeatherBean.java	(revision )
@@ -0,0 +1,223 @@
+package com.example.victor.weathertest3.bean;
+
+import java.util.List;
+
+public class WeatherBean {
+	
+	private String city;
+	private String city_id;
+	private String release;//发布时间
+	private String weather_id;
+	private String weather_str;
+	private String Max_temp;
+	private String Min_temp;
+	private String now_temp;  //实时温度
+	private String humidity;
+	private String wind_direction;
+	private String wind_power;
+    private String sunrise;
+    private String sunset;
+    private String sendible_temperature;// 体感温度
+	private String uv_index;// 紫外线
+	private String carWash_index;// 洗车
+	private String dressing_index;// 穿衣
+	private String cold_index;// 感冒
+	private String comfort_index;// 舒适
+	private String exercise_index;// 运动
+    private String travel_index;// 旅行
+    private String sunscreen_index;// 防晒
+    private PMBean pmBean;
+	private List<SixDayWeatherBean> SixDayList;
+
+    public String getCity() {
+        return city;
+    }
+
+    public void setCity(String city) {
+        this.city = city;
+    }
+
+    public String getCity_id() {
+        return city_id;
+    }
+
+    public void setCity_id(String city_id) {
+        this.city_id = city_id;
+    }
+
+    public String getRelease() {
+        return release;
+    }
+
+    public void setRelease(String release) {
+        this.release = release;
+    }
+
+    public String getWeather_id() {
+        return weather_id;
+    }
+
+    public void setWeather_id(String weather_id) {
+        this.weather_id = weather_id;
+    }
+
+    public String getWeather_str() {
+        return weather_str;
+    }
+
+    public void setWeather_str(String weather_str) {
+        this.weather_str = weather_str;
+    }
+
+    public String getMax_temp() {
+        return Max_temp;
+    }
+
+    public void setMax_temp(String max_temp) {
+        Max_temp = max_temp;
+    }
+
+    public String getMin_temp() {
+        return Min_temp;
+    }
+
+    public void setMin_temp(String min_temp) {
+        Min_temp = min_temp;
+    }
+
+    public String getNow_temp() {
+        return now_temp;
+    }
+
+    public void setNow_temp(String now_temp) {
+        this.now_temp = now_temp;
+    }
+
+    public String getHumidity() {
+        return humidity;
+    }
+
+    public void setHumidity(String humidity) {
+        this.humidity = humidity;
+    }
+
+    public String getWind_direction() {
+        return wind_direction;
+    }
+
+    public void setWind_direction(String wind_direction) {
+        this.wind_direction = wind_direction;
+    }
+
+    public String getWind_power() {
+        return wind_power;
+    }
+
+    public void setWind_power(String wind_power) {
+        this.wind_power = wind_power;
+    }
+
+    public String getSunrise() {
+        return sunrise;
+    }
+
+    public void setSunrise(String sunrise) {
+        this.sunrise = sunrise;
+    }
+
+    public String getSunset() {
+        return sunset;
+    }
+
+    public void setSunset(String sunset) {
+        this.sunset = sunset;
+    }
+
+    public String getSendible_temperature() {
+        return sendible_temperature;
+    }
+
+    public void setSendible_temperature(String sendible_temperature) {
+        this.sendible_temperature = sendible_temperature;
+    }
+
+    public String getUv_index() {
+        return uv_index;
+    }
+
+    public void setUv_index(String uv_index) {
+        this.uv_index = uv_index;
+    }
+
+    public String getCarWash_index() {
+        return carWash_index;
+    }
+
+    public void setCarWash_index(String carWash_index) {
+        this.carWash_index = carWash_index;
+    }
+
+    public String getDressing_index() {
+        return dressing_index;
+    }
+
+    public void setDressing_index(String dressing_index) {
+        this.dressing_index = dressing_index;
+    }
+
+    public String getCold_index() {
+        return cold_index;
+    }
+
+    public void setCold_index(String cold_index) {
+        this.cold_index = cold_index;
+    }
+
+    public String getComfort_index() {
+        return comfort_index;
+    }
+
+    public void setComfort_index(String comfort_index) {
+        this.comfort_index = comfort_index;
+    }
+
+    public String getExercise_index() {
+        return exercise_index;
+    }
+
+    public void setExercise_index(String exercise_index) {
+        this.exercise_index = exercise_index;
+    }
+
+    public String getTravel_index() {
+        return travel_index;
+    }
+
+    public void setTravel_index(String travel_index) {
+        this.travel_index = travel_index;
+    }
+
+    public String getSunscreen_index() {
+        return sunscreen_index;
+    }
+
+    public void setSunscreen_index(String sunscreen_index) {
+        this.sunscreen_index = sunscreen_index;
+    }
+
+    public PMBean getPmBean() {
+        return pmBean;
+    }
+
+    public void setPmBean(PMBean pmBean) {
+        this.pmBean = pmBean;
+    }
+
+    public List<SixDayWeatherBean> getSixDayList() {
+        return SixDayList;
+    }
+
+    public void setSixDayList(List<SixDayWeatherBean> sixDayList) {
+        SixDayList = sixDayList;
+    }
+}
Index: PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/PullToRefreshListView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/PullToRefreshListView.java	(revision )
+++ PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/PullToRefreshListView.java	(revision )
@@ -0,0 +1,337 @@
+/*******************************************************************************
+ * Copyright 2011, 2012 Chris Banes.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ *******************************************************************************/
+package com.handmark.pulltorefresh.library;
+
+import android.annotation.TargetApi;
+import android.content.Context;
+import android.content.res.TypedArray;
+import android.graphics.Canvas;
+import android.os.Build.VERSION;
+import android.os.Build.VERSION_CODES;
+import android.util.AttributeSet;
+import android.view.Gravity;
+import android.view.MotionEvent;
+import android.view.View;
+import android.widget.FrameLayout;
+import android.widget.ListAdapter;
+import android.widget.ListView;
+
+import com.handmark.pulltorefresh.library.internal.EmptyViewMethodAccessor;
+import com.handmark.pulltorefresh.library.internal.LoadingLayout;
+
+public class PullToRefreshListView extends PullToRefreshAdapterViewBase<ListView> {
+
+	private LoadingLayout mHeaderLoadingView;
+	private LoadingLayout mFooterLoadingView;
+
+	private FrameLayout mLvFooterLoadingFrame;
+
+	private boolean mListViewExtrasEnabled;
+
+	public PullToRefreshListView(Context context) {
+		super(context);
+	}
+
+	public PullToRefreshListView(Context context, AttributeSet attrs) {
+		super(context, attrs);
+	}
+
+	public PullToRefreshListView(Context context, Mode mode) {
+		super(context, mode);
+	}
+
+	public PullToRefreshListView(Context context, Mode mode, AnimationStyle style) {
+		super(context, mode, style);
+	}
+
+	@Override
+	public final Orientation getPullToRefreshScrollDirection() {
+		return Orientation.VERTICAL;
+	}
+
+	@Override
+	protected void onRefreshing(final boolean doScroll) {
+		/**
+		 * If we're not showing the Refreshing view, or the list is empty, the
+		 * the header/footer views won't show so we use the normal method.
+		 */
+		ListAdapter adapter = mRefreshableView.getAdapter();
+		if (!mListViewExtrasEnabled || !getShowViewWhileRefreshing() || null == adapter || adapter.isEmpty()) {
+			super.onRefreshing(doScroll);
+			return;
+		}
+
+		super.onRefreshing(false);
+
+		final LoadingLayout origLoadingView, listViewLoadingView, oppositeListViewLoadingView;
+		final int selection, scrollToY;
+
+		switch (getCurrentMode()) {
+			case MANUAL_REFRESH_ONLY:
+			case PULL_FROM_END:
+				origLoadingView = getFooterLayout();
+				listViewLoadingView = mFooterLoadingView;
+				oppositeListViewLoadingView = mHeaderLoadingView;
+				selection = mRefreshableView.getCount() - 1;
+				scrollToY = getScrollY() - getFooterSize();
+				break;
+			case PULL_FROM_START:
+			default:
+				origLoadingView = getHeaderLayout();
+				listViewLoadingView = mHeaderLoadingView;
+				oppositeListViewLoadingView = mFooterLoadingView;
+				selection = 0;
+				scrollToY = getScrollY() + getHeaderSize();
+				break;
+		}
+
+		// Hide our original Loading View
+		origLoadingView.reset();
+		origLoadingView.hideAllViews();
+
+		// Make sure the opposite end is hidden too
+		oppositeListViewLoadingView.setVisibility(View.GONE);
+
+		// Show the ListView Loading View and set it to refresh.
+		listViewLoadingView.setVisibility(View.VISIBLE);
+		listViewLoadingView.refreshing();
+
+		if (doScroll) {
+			// We need to disable the automatic visibility changes for now
+			disableLoadingLayoutVisibilityChanges();
+
+			// We scroll slightly so that the ListView's header/footer is at the
+			// same Y position as our normal header/footer
+			setHeaderScroll(scrollToY);
+
+			// Make sure the ListView is scrolled to show the loading
+			// header/footer
+			mRefreshableView.setSelection(selection);
+
+			// Smooth scroll as normal
+			smoothScrollTo(0);
+		}
+	}
+
+	@Override
+	protected void onReset() {
+		/**
+		 * If the extras are not enabled, just call up to super and return.
+		 */
+		if (!mListViewExtrasEnabled) {
+			super.onReset();
+			return;
+		}
+
+		final LoadingLayout originalLoadingLayout, listViewLoadingLayout;
+		final int scrollToHeight, selection;
+		final boolean scrollLvToEdge;
+
+		switch (getCurrentMode()) {
+			case MANUAL_REFRESH_ONLY:
+			case PULL_FROM_END:
+				originalLoadingLayout = getFooterLayout();
+				listViewLoadingLayout = mFooterLoadingView;
+				selection = mRefreshableView.getCount() - 1;
+				scrollToHeight = getFooterSize();
+				scrollLvToEdge = Math.abs(mRefreshableView.getLastVisiblePosition() - selection) <= 1;
+				break;
+			case PULL_FROM_START:
+			default:
+				originalLoadingLayout = getHeaderLayout();
+				listViewLoadingLayout = mHeaderLoadingView;
+				scrollToHeight = -getHeaderSize();
+				selection = 0;
+				scrollLvToEdge = Math.abs(mRefreshableView.getFirstVisiblePosition() - selection) <= 1;
+				break;
+		}
+
+		// If the ListView header loading layout is showing, then we need to
+		// flip so that the original one is showing instead
+		if (listViewLoadingLayout.getVisibility() == View.VISIBLE) {
+
+			// Set our Original View to Visible
+			originalLoadingLayout.showInvisibleViews();
+
+			// Hide the ListView Header/Footer
+			listViewLoadingLayout.setVisibility(View.GONE);
+
+			/**
+			 * Scroll so the View is at the same Y as the ListView
+			 * header/footer, but only scroll if: we've pulled to refresh, it's
+			 * positioned correctly
+			 */
+			if (scrollLvToEdge && getState() != State.MANUAL_REFRESHING) {
+				mRefreshableView.setSelection(selection);
+				setHeaderScroll(scrollToHeight);
+			}
+		}
+
+		// Finally, call up to super
+		super.onReset();
+	}
+
+	@Override
+	protected LoadingLayoutProxy createLoadingLayoutProxy(final boolean includeStart, final boolean includeEnd) {
+		LoadingLayoutProxy proxy = super.createLoadingLayoutProxy(includeStart, includeEnd);
+
+		if (mListViewExtrasEnabled) {
+			final Mode mode = getMode();
+
+			if (includeStart && mode.showHeaderLoadingLayout()) {
+				proxy.addLayout(mHeaderLoadingView);
+			}
+			if (includeEnd && mode.showFooterLoadingLayout()) {
+				proxy.addLayout(mFooterLoadingView);
+			}
+		}
+
+		return proxy;
+	}
+
+	protected ListView createListView(Context context, AttributeSet attrs) {
+		final ListView lv;
+		if (VERSION.SDK_INT >= VERSION_CODES.GINGERBREAD) {
+			lv = new InternalListViewSDK9(context, attrs);
+		} else {
+			lv = new InternalListView(context, attrs);
+		}
+		return lv;
+	}
+
+	@Override
+	protected ListView createRefreshableView(Context context, AttributeSet attrs) {
+		ListView lv = createListView(context, attrs);
+
+		// Set it to this so it can be used in ListActivity/ListFragment
+		lv.setId(android.R.id.list);
+		return lv;
+	}
+
+	@Override
+	protected void handleStyledAttributes(TypedArray a) {
+		super.handleStyledAttributes(a);
+
+		mListViewExtrasEnabled = a.getBoolean(R.styleable.PullToRefresh_ptrListViewExtrasEnabled, true);
+
+		if (mListViewExtrasEnabled) {
+			final FrameLayout.LayoutParams lp = new FrameLayout.LayoutParams(FrameLayout.LayoutParams.MATCH_PARENT,
+					FrameLayout.LayoutParams.WRAP_CONTENT, Gravity.CENTER_HORIZONTAL);
+
+			// Create Loading Views ready for use later
+			FrameLayout frame = new FrameLayout(getContext());
+			mHeaderLoadingView = createLoadingLayout(getContext(), Mode.PULL_FROM_START, a);
+			mHeaderLoadingView.setVisibility(View.GONE);
+			frame.addView(mHeaderLoadingView, lp);
+			mRefreshableView.addHeaderView(frame, null, false);
+
+			mLvFooterLoadingFrame = new FrameLayout(getContext());
+			mFooterLoadingView = createLoadingLayout(getContext(), Mode.PULL_FROM_END, a);
+			mFooterLoadingView.setVisibility(View.GONE);
+			mLvFooterLoadingFrame.addView(mFooterLoadingView, lp);
+
+			/**
+			 * If the value for Scrolling While Refreshing hasn't been
+			 * explicitly set via XML, enable Scrolling While Refreshing.
+			 */
+			if (!a.hasValue(R.styleable.PullToRefresh_ptrScrollingWhileRefreshingEnabled)) {
+				setScrollingWhileRefreshingEnabled(true);
+			}
+		}
+	}
+
+	@TargetApi(9)
+	final class InternalListViewSDK9 extends InternalListView {
+
+		public InternalListViewSDK9(Context context, AttributeSet attrs) {
+			super(context, attrs);
+		}
+
+		@Override
+		protected boolean overScrollBy(int deltaX, int deltaY, int scrollX, int scrollY, int scrollRangeX,
+				int scrollRangeY, int maxOverScrollX, int maxOverScrollY, boolean isTouchEvent) {
+
+			final boolean returnValue = super.overScrollBy(deltaX, deltaY, scrollX, scrollY, scrollRangeX,
+					scrollRangeY, maxOverScrollX, maxOverScrollY, isTouchEvent);
+
+			// Does all of the hard work...
+			OverscrollHelper.overScrollBy(PullToRefreshListView.this, deltaX, scrollX, deltaY, scrollY, isTouchEvent);
+
+			return returnValue;
+		}
+	}
+
+	protected class InternalListView extends ListView implements EmptyViewMethodAccessor {
+
+		private boolean mAddedLvFooter = false;
+
+		public InternalListView(Context context, AttributeSet attrs) {
+			super(context, attrs);
+		}
+
+		@Override
+		protected void dispatchDraw(Canvas canvas) {
+			/**
+			 * This is a bit hacky, but Samsung's ListView has got a bug in it
+			 * when using Header/Footer Views and the list is empty. This masks
+			 * the issue so that it doesn't cause an FC. See Issue #66.
+			 */
+			try {
+				super.dispatchDraw(canvas);
+			} catch (IndexOutOfBoundsException e) {
+				e.printStackTrace();
+			}
+		}
+
+		@Override
+		public boolean dispatchTouchEvent(MotionEvent ev) {
+			/**
+			 * This is a bit hacky, but Samsung's ListView has got a bug in it
+			 * when using Header/Footer Views and the list is empty. This masks
+			 * the issue so that it doesn't cause an FC. See Issue #66.
+			 */
+			try {
+				return super.dispatchTouchEvent(ev);
+			} catch (IndexOutOfBoundsException e) {
+				e.printStackTrace();
+				return false;
+			}
+		}
+
+		@Override
+		public void setAdapter(ListAdapter adapter) {
+			// Add the Footer View at the last possible moment
+			if (null != mLvFooterLoadingFrame && !mAddedLvFooter) {
+				addFooterView(mLvFooterLoadingFrame, null, false);
+				mAddedLvFooter = true;
+			}
+
+			super.setAdapter(adapter);
+		}
+
+		@Override
+		public void setEmptyView(View emptyView) {
+			PullToRefreshListView.this.setEmptyView(emptyView);
+		}
+
+		@Override
+		public void setEmptyViewInternal(View emptyView) {
+			super.setEmptyView(emptyView);
+		}
+
+	}
+
+}
Index: PullToRefresh/build/intermediates/blame/res/androidTest/debug/multi/values-it.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/blame/res/androidTest/debug/multi/values-it.json	(revision )
+++ PullToRefresh/build/intermediates/blame/res/androidTest/debug/multi/values-it.json	(revision )
@@ -0,0 +1,64 @@
+[
+    {
+        "outputFile": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\res\\merged\\androidTest\\debug\\values-it\\values-it.xml",
+        "map": [
+            {
+                "to": {
+                    "startLine": 2,
+                    "startColumn": 4,
+                    "startOffset": 55,
+                    "endColumn": 75,
+                    "endOffset": 126
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values-it\\values-it.xml",
+                    "position": {
+                        "startLine": 2,
+                        "startColumn": 4,
+                        "startOffset": 55,
+                        "endColumn": 75,
+                        "endOffset": 126
+                    }
+                }
+            },
+            {
+                "to": {
+                    "startLine": 3,
+                    "startColumn": 4,
+                    "startOffset": 131,
+                    "endColumn": 73,
+                    "endOffset": 200
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values-it\\values-it.xml",
+                    "position": {
+                        "startLine": 3,
+                        "startColumn": 4,
+                        "startOffset": 131,
+                        "endColumn": 73,
+                        "endOffset": 200
+                    }
+                }
+            },
+            {
+                "to": {
+                    "startLine": 4,
+                    "startColumn": 4,
+                    "startOffset": 205,
+                    "endColumn": 81,
+                    "endOffset": 282
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values-it\\values-it.xml",
+                    "position": {
+                        "startLine": 4,
+                        "startColumn": 4,
+                        "startOffset": 205,
+                        "endColumn": 81,
+                        "endOffset": 282
+                    }
+                }
+            }
+        ]
+    }
+]
\ No newline at end of file
Index: PullToRefresh/src/main/res/values-ro/pull_refresh_strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/src/main/res/values-ro/pull_refresh_strings.xml	(revision )
+++ PullToRefresh/src/main/res/values-ro/pull_refresh_strings.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+  <string name="pull_to_refresh_pull_label">Trage pentru a reîmprospăta…</string>
+  <string name="pull_to_refresh_release_label">Eliberează pentru a reîmprospăta…</string>
+  <string name="pull_to_refresh_refreshing_label">Încărcare…</string>
+</resources>
Index: .idea/.name
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/.name	(revision )
+++ .idea/.name	(revision )
@@ -0,0 +1,1 @@
+WeatherTest3
\ No newline at end of file
Index: app/src/main/res/values-w820dp/dimens.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values-w820dp/dimens.xml	(revision )
+++ app/src/main/res/values-w820dp/dimens.xml	(revision )
@@ -0,0 +1,6 @@
+<resources>
+    <!-- Example customization of dimensions originally defined in res/values/dimens.xml
+         (such as screen margins) for screens with more than 820dp of available width. This
+         would include 7" and 10" devices in landscape (~960dp and ~1280dp respectively). -->
+    <dimen name="activity_horizontal_margin">64dp</dimen>
+</resources>
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision )
+++ .idea/misc.xml	(revision )
@@ -0,0 +1,96 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="EntryPointsManager">
+    <entry_points version="2.0" />
+  </component>
+  <component name="NullableNotNullManager">
+    <option name="myDefaultNullable" value="android.support.annotation.Nullable" />
+    <option name="myDefaultNotNull" value="android.support.annotation.NonNull" />
+    <option name="myNullables">
+      <value>
+        <list size="4">
+          <item index="0" class="java.lang.String" itemvalue="org.jetbrains.annotations.Nullable" />
+          <item index="1" class="java.lang.String" itemvalue="javax.annotation.Nullable" />
+          <item index="2" class="java.lang.String" itemvalue="edu.umd.cs.findbugs.annotations.Nullable" />
+          <item index="3" class="java.lang.String" itemvalue="android.support.annotation.Nullable" />
+        </list>
+      </value>
+    </option>
+    <option name="myNotNulls">
+      <value>
+        <list size="4">
+          <item index="0" class="java.lang.String" itemvalue="org.jetbrains.annotations.NotNull" />
+          <item index="1" class="java.lang.String" itemvalue="javax.annotation.Nonnull" />
+          <item index="2" class="java.lang.String" itemvalue="edu.umd.cs.findbugs.annotations.NonNull" />
+          <item index="3" class="java.lang.String" itemvalue="android.support.annotation.NonNull" />
+        </list>
+      </value>
+    </option>
+  </component>
+  <component name="ProjectLevelVcsManager" settingsEditedManually="false">
+    <OptionsSetting value="true" id="Add" />
+    <OptionsSetting value="true" id="Remove" />
+    <OptionsSetting value="true" id="Checkout" />
+    <OptionsSetting value="true" id="Update" />
+    <OptionsSetting value="true" id="Status" />
+    <OptionsSetting value="true" id="Edit" />
+    <ConfirmationsSetting value="0" id="Add" />
+    <ConfirmationsSetting value="0" id="Remove" />
+  </component>
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_7" default="false" assert-keyword="true" jdk-15="true" project-jdk-name="Android API 23 Platform" project-jdk-type="Android SDK">
+    <output url="file://$PROJECT_DIR$/build/classes" />
+  </component>
+  <component name="ProjectType">
+    <option name="id" value="Android" />
+  </component>
+  <component name="masterDetails">
+    <states>
+      <state key="GlobalLibrariesConfigurable.UI">
+        <settings>
+          <splitter-proportions>
+            <option name="proportions">
+              <list>
+                <option value="0.2" />
+              </list>
+            </option>
+          </splitter-proportions>
+        </settings>
+      </state>
+      <state key="JdkListConfigurable.UI">
+        <settings>
+          <last-edited>Android API 23 Platform</last-edited>
+          <splitter-proportions>
+            <option name="proportions">
+              <list>
+                <option value="0.2" />
+              </list>
+            </option>
+          </splitter-proportions>
+        </settings>
+      </state>
+      <state key="ProjectJDKs.UI">
+        <settings>
+          <last-edited>Android API 23 Platform</last-edited>
+          <splitter-proportions>
+            <option name="proportions">
+              <list>
+                <option value="0.2" />
+              </list>
+            </option>
+          </splitter-proportions>
+        </settings>
+      </state>
+      <state key="ProjectLibrariesConfigurable.UI">
+        <settings>
+          <splitter-proportions>
+            <option name="proportions">
+              <list>
+                <option value="0.2" />
+              </list>
+            </option>
+          </splitter-proportions>
+        </settings>
+      </state>
+    </states>
+  </component>
+</project>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/res/merged/androidTest/debug/values-pt/values-pt.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/res/merged/androidTest/debug/values-pt/values-pt.xml	(revision )
+++ PullToRefresh/build/intermediates/res/merged/androidTest/debug/values-pt/values-pt.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="pull_to_refresh_pull_label">Puxe para atualizar…</string>
+    <string name="pull_to_refresh_refreshing_label">A carregar…</string>
+    <string name="pull_to_refresh_release_label">Liberação para atualizar…</string>
+</resources>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/bundles/debug/res/drawable/indicator_bg_bottom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/bundles/debug/res/drawable/indicator_bg_bottom.xml	(revision )
+++ PullToRefresh/build/intermediates/bundles/debug/res/drawable/indicator_bg_bottom.xml	(revision )
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="rectangle" >
+
+    <solid android:color="#40000000" />
+
+    <!--
+    I know the android:radius is useless here but it's needed to fix an old bug:
+    http://code.google.com/p/android/issues/detail?id=939
+    -->
+    <corners
+        android:bottomLeftRadius="0dp"
+        android:bottomRightRadius="0dp"
+        android:radius="1dp"
+        android:topLeftRadius="@dimen/indicator_corner_radius"
+        android:topRightRadius="@dimen/indicator_corner_radius" />
+
+</shape>
\ No newline at end of file
Index: app/src/main/res/layout/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_main.xml	(revision )
+++ app/src/main/res/layout/activity_main.xml	(revision )
@@ -0,0 +1,721 @@
+<?xml version="1" encoding="utf-8"?>
+<LinearLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:orientation="vertical"
+    android:background="@android:color/white"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <com.handmark.pulltorefresh.library.PullToRefreshScrollView
+        xmlns:ptr="http://schemas.android.com/apk/res-auto"
+        android:id="@+id/my_list"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:scrollbars="none"
+        ptr:ptrAnimationStyle="flip"
+        ptr:ptrMode="pullFromStart">
+
+        <LinearLayout
+            android:orientation="vertical"
+            android:padding="16dp"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content">
+
+            <RelativeLayout
+                android:id="@+id/rl_city"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content">
+
+                <TextView
+                android:textColor="@color/text_color"
+                android:id="@+id/tv_city"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="@string/default_text"
+                android:layout_centerInParent="true" />
+
+                <ImageView
+                    android:padding="4dp"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:src="@drawable/arrow"
+                    android:layout_toRightOf="@id/tv_city"
+                    android:layout_alignTop="@id/tv_city"
+                    android:layout_alignBottom="@id/tv_city" />
+
+            </RelativeLayout>
+
+            <TextView
+                android:textSize="12sp"
+                android:textColor="@color/text_color"
+                android:layout_gravity="center"
+                android:id="@+id/tv_release"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginBottom="16dp"
+                android:text="@string/default_text" />
+            
+            <View
+                android:background="@color/light_grey"
+                android:layout_width="match_parent"
+                android:layout_height="1px" />
+
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginTop="24dp">
+
+                <ImageView
+                    android:id="@+id/iv_now_weather"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:src="@drawable/d100" />
+
+                <TextView
+                    android:textColor="@color/text_color"
+                    android:layout_gravity="center_vertical"
+                    android:id="@+id/tv_now_weather"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_marginLeft="4dp"
+                    android:text="@string/default_text" />
+                
+            </LinearLayout>
+
+            <LinearLayout
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content">
+
+                <TextView
+                    android:textSize="12sp"
+                    android:textColor="@color/text_color"
+                    android:id="@+id/tv_today_maxTemp"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_marginTop="4dp"
+                    android:text="@string/default_text" />
+                
+                <TextView
+                    android:textSize="12sp"
+                    android:textColor="@color/text_color"
+                    android:id="@+id/tv_today_minTemp"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_marginLeft="40dp"
+                    android:layout_marginTop="4dp"
+                    android:text="@string/default_text" />
+                
+            </LinearLayout>
+
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginTop="16dp"
+                android:layout_marginBottom="16dp">
+
+                <TextView
+                    android:textSize="48sp"
+                    android:textColor="@color/text_color"
+                    android:id="@+id/tv_now_temp"
+                    android:layout_width="0dp"
+                    android:layout_height="wrap_content"
+                    android:text="@string/default_text"
+                    android:layout_weight="1" />
+                
+                <LinearLayout
+                    android:orientation="vertical"
+                    android:background="@drawable/wireframe_light"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content">
+
+                    <TextView
+                        android:textColor="@color/text_color"
+                        android:layout_gravity="center_horizontal"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:text="@string/pm" />
+                    
+                    <LinearLayout
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:layout_marginTop="8dp">
+
+                        <TextView
+                            android:textColor="@color/text_color"
+                            android:id="@+id/tv_aqi"
+                            android:layout_width="wrap_content"
+                            android:layout_height="wrap_content"
+                            android:text="@string/default_text" />
+                        
+                        <TextView
+                            android:textColor="@color/text_color"
+                            android:gravity="right"
+                            android:id="@+id/tv_quality"
+                            android:layout_width="wrap_content"
+                            android:layout_height="wrap_content"
+                            android:text="@string/default_text"
+                            android:ems="5" />
+                        
+                    </LinearLayout>
+
+                </LinearLayout>
+
+            </LinearLayout>
+
+            <LinearLayout
+                android:orientation="vertical"
+                android:background="@drawable/wireframe_dark"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content">
+
+                <TextView
+                    android:textColor="@color/dark_grey"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_marginBottom="4dp"
+                    android:text="@string/forecast" />
+                
+                <View
+                    android:background="@color/light_grey"
+                    android:layout_width="match_parent"
+                    android:layout_height="1px"
+                    />
+
+                <LinearLayout
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:layout_marginTop="8dp">
+
+                    <TextView
+                        android:id="@+id/tv_today"
+                        style="@style/TextViewStyle" />
+                    
+                    <TextView
+                        android:id="@+id/tv_tomorrow"
+                        style="@style/TextViewStyle" />
+                    
+                    <TextView
+                        android:id="@+id/tv_thirdDay"
+                        style="@style/TextViewStyle" />
+                    
+                    <TextView
+                        android:id="@+id/tv_fourthDay"
+                        style="@style/TextViewStyle" />
+                    
+                    <TextView
+                        android:id="@+id/tv_fifthDay"
+                        style="@style/TextViewStyle" />
+                    
+                    <TextView
+                        android:id="@+id/tv_sixthDay"
+                        style="@style/TextViewStyle" />
+                    
+                </LinearLayout>
+                <LinearLayout
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content">
+
+                    <ImageView
+                        android:id="@+id/iv_today"
+                        android:src="@drawable/d100"
+                        style="@style/ViewStyle" />
+
+                    <ImageView
+                        android:id="@+id/iv_tomorrow"
+                        android:src="@drawable/d100"
+                        style="@style/ViewStyle" />
+
+                    <ImageView
+                        android:id="@+id/iv_thirdDay"
+                        android:src="@drawable/d100"
+                        style="@style/ViewStyle" />
+
+                    <ImageView
+                        android:id="@+id/iv_fourthDay"
+                        android:src="@drawable/d100"
+                        style="@style/ViewStyle" />
+
+                    <ImageView
+                        android:id="@+id/iv_fifthDay"
+                        android:src="@drawable/d100"
+                        style="@style/ViewStyle" />
+
+                    <ImageView
+                        android:id="@+id/iv_sixthDay"
+                        android:src="@drawable/d100"
+                        style="@style/ViewStyle" />
+
+                </LinearLayout>
+
+                <LinearLayout
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:layout_marginTop="8dp"
+                    android:layout_marginBottom="8dp">
+
+                    <TextView
+                        android:id="@+id/tv_today_temp"
+                        style="@style/TextViewStyle" />
+                    
+                    <TextView
+                        android:id="@+id/tv_tomorrow_temp"
+                        style="@style/TextViewStyle" />
+                    
+                    <TextView
+                        android:id="@+id/tv_thirdDay_temp"
+                        style="@style/TextViewStyle" />
+                    
+                    <TextView
+                        android:id="@+id/tv_fourthDay_temp"
+                        style="@style/TextViewStyle" />
+                    
+                    <TextView
+                        android:id="@+id/tv_fifthDay_temp"
+                        style="@style/TextViewStyle" />
+                    
+                    <TextView
+                        android:id="@+id/tv_sixthDay_temp"
+                        style="@style/TextViewStyle" />
+                    
+                </LinearLayout>
+
+            </LinearLayout>
+
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginTop="10dp">
+
+                <LinearLayout
+                    android:orientation="vertical"
+                    android:background="@drawable/wireframe_light"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="1">
+
+                    <ImageView
+                        android:layout_gravity="center_horizontal"
+                        android:layout_width="65dp"
+                        android:layout_height="79dp"
+                        android:src="@drawable/ic_wind" />
+
+                    <LinearLayout
+                        android:layout_width="match_parent"
+                        android:layout_height="wrap_content">
+
+                        <TextView
+                            android:textColor="@color/text_color"
+                            android:layout_width="wrap_content"
+                            android:layout_height="wrap_content"
+                            android:layout_marginLeft="20dp"
+                            android:text="@string/wind_direction" />
+                        
+                        <LinearLayout
+                            android:gravity="right"
+                            android:layout_width="match_parent"
+                            android:layout_height="wrap_content">
+
+                            <TextView
+                                android:textColor="@color/text_color"
+                                android:gravity="right"
+                                android:layout_width="wrap_content"
+                                android:layout_height="wrap_content"
+                                android:layout_marginRight="20dp"
+                                android:text="@string/wind_power" />
+                            
+                        </LinearLayout>
+
+                    </LinearLayout>
+
+                    <LinearLayout
+                        android:layout_width="match_parent"
+                        android:layout_height="wrap_content">
+
+                        <TextView
+                            android:textColor="@color/text_color"
+                            android:id="@+id/tv_windDirection"
+                            android:layout_width="wrap_content"
+                            android:layout_height="wrap_content"
+                            android:layout_marginLeft="15dp"
+                            android:text="@string/default_text" />
+                        
+                        <LinearLayout
+                            android:gravity="right"
+                            android:layout_width="match_parent"
+                            android:layout_height="wrap_content">
+
+                            <TextView
+                                android:textColor="@color/text_color"
+                                android:gravity="right"
+                                android:id="@+id/tv_windPower"
+                                android:layout_width="wrap_content"
+                                android:layout_height="wrap_content"
+                                android:layout_marginRight="20dp"
+                                android:text="@string/default_text"
+                                android:ems="10" />
+                            
+                        </LinearLayout>
+
+                    </LinearLayout>
+
+                </LinearLayout>
+                <LinearLayout
+                    android:orientation="vertical"
+                    android:background="@drawable/wireframe_light"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="1">
+
+                    <ImageView
+                        android:layout_gravity="center_horizontal"
+                        android:layout_width="65dp"
+                        android:layout_height="79dp"
+                        android:src="@drawable/ic_sunrise" />
+
+                    <LinearLayout
+                        android:layout_width="match_parent"
+                        android:layout_height="wrap_content">
+
+                        <TextView
+                            android:textColor="@color/text_color"
+                            android:layout_width="wrap_content"
+                            android:layout_height="wrap_content"
+                            android:layout_marginLeft="15dp"
+                            android:text="@string/sunrise" />
+                        
+                        <LinearLayout
+                            android:gravity="right"
+                            android:layout_width="match_parent"
+                            android:layout_height="wrap_content">
+
+                            <TextView
+                                android:textColor="@color/text_color"
+                                android:gravity="right"
+                                android:layout_width="wrap_content"
+                                android:layout_height="wrap_content"
+                                android:layout_marginRight="20dp"
+                                android:text="@string/sunset"
+                                android:ems="10" />
+                            
+                        </LinearLayout>
+
+                    </LinearLayout>
+
+                    <LinearLayout
+                        android:layout_width="match_parent"
+                        android:layout_height="wrap_content">
+
+                        <TextView
+                            android:textColor="@color/text_color"
+                            android:id="@+id/tv_sunrise"
+                            android:layout_width="wrap_content"
+                            android:layout_height="wrap_content"
+                            android:layout_marginLeft="15dp"
+                            android:text="@string/default_text" />
+                        
+                        <LinearLayout
+                            android:gravity="right"
+                            android:layout_width="match_parent"
+                            android:layout_height="wrap_content">
+
+                            <TextView
+                                android:textColor="@color/text_color"
+                                android:gravity="right"
+                                android:id="@+id/tv_sunset"
+                                android:layout_width="wrap_content"
+                                android:layout_height="wrap_content"
+                                android:layout_marginRight="15dp"
+                                android:text="@string/default_text"
+                                android:ems="10" />
+                            
+                        </LinearLayout>
+
+                    </LinearLayout>
+
+                </LinearLayout>
+
+            </LinearLayout>
+
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content">
+
+                <LinearLayout
+                    android:orientation="vertical"
+                    android:background="@drawable/wireframe_light"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="1">
+
+                    <ImageView
+                        android:layout_gravity="center_horizontal"
+                        android:layout_width="65dp"
+                        android:layout_height="79dp"
+                        android:src="@drawable/ic_humidity" />
+
+                    <TextView
+                        android:textColor="@color/text_color"
+                        android:layout_gravity="center_horizontal"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:text="@string/humidity" />
+                    
+                    <TextView
+                        android:textColor="@color/text_color"
+                        android:layout_gravity="center_horizontal"
+                        android:id="@+id/tv_humidity"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:text="@string/default_text" />
+                    
+                </LinearLayout>
+
+                <LinearLayout
+                    android:orientation="vertical"
+                    android:background="@drawable/wireframe_light"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="1">
+
+                    <ImageView
+                        android:layout_gravity="center_horizontal"
+                        android:layout_width="65dp"
+                        android:layout_height="79dp"
+                        android:src="@drawable/ic_temperature" />
+
+                    <TextView
+                        android:textColor="@color/text_color"
+                        android:layout_gravity="center_horizontal"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:text="@string/sendible_temperature" />
+                    
+                    <TextView
+                        android:textColor="@color/text_color"
+                        android:layout_gravity="center_horizontal"
+                        android:id="@+id/tv_sendibleTemperature"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:text="@string/default_text" />
+                    
+                </LinearLayout>
+
+            </LinearLayout>
+
+            <LinearLayout
+                android:orientation="vertical"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginTop="16dp">
+
+                <LinearLayout
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content">
+
+                    <LinearLayout
+                        android:orientation="vertical"
+                        android:background="@drawable/wireframe_light"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:layout_weight="1">
+
+                        <ImageView
+                            android:layout_gravity="center_horizontal"
+                            android:layout_width="65dp"
+                            android:layout_height="79dp"
+                            android:src="@drawable/sport_index" />
+
+                        <TextView
+                            android:text="@string/exercise_index"
+                            style="@style/indexStyle" />
+                        
+                        <TextView
+                            android:id="@+id/tv_exercise_index"
+                            android:text="@string/default_text"
+                            style="@style/indexValueStyle" />
+                        
+                    </LinearLayout>
+
+                    <LinearLayout
+                        android:orientation="vertical"
+                        android:background="@drawable/wireframe_light"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:layout_weight="1">
+
+                        <ImageView
+                            android:layout_gravity="center_horizontal"
+                            android:layout_width="65dp"
+                            android:layout_height="79dp"
+                            android:src="@drawable/wash_index" />
+
+                        <TextView
+                            android:text="@string/carWash_index"
+                            style="@style/indexStyle" />
+                        
+                        <TextView
+                            android:id="@+id/tv_carWash_index"
+                            android:text="@string/default_text"
+                            style="@style/indexValueStyle" />
+                        
+                    </LinearLayout>
+
+                    <LinearLayout
+                        android:orientation="vertical"
+                        android:background="@drawable/wireframe_light"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:layout_weight="1">
+
+                        <ImageView
+                            android:layout_gravity="center_horizontal"
+                            android:layout_width="65dp"
+                            android:layout_height="79dp"
+                            android:src="@drawable/ultraviolet_index"
+                            />
+
+                        <TextView
+                            android:text="@string/uv_index"
+                            style="@style/indexStyle"/>
+
+                        <TextView
+                            android:id="@+id/tv_uv_index"
+                            android:text="@string/default_text"
+                            style="@style/indexValueStyle"
+                            />
+                        
+                    </LinearLayout>
+
+                    <LinearLayout
+                        android:orientation="vertical"
+                        android:background="@drawable/wireframe_light"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:layout_weight="1">
+
+                        <ImageView
+                            android:layout_gravity="center_horizontal"
+                            android:layout_width="65dp"
+                            android:layout_height="79dp"
+                            android:src="@drawable/dress_index" />
+
+                        <TextView
+                            android:text="@string/dressing_index"
+                            style="@style/indexStyle" />
+                        
+                        <TextView
+                            android:id="@+id/tv_dressing_index"
+                            android:text="@string/default_text"
+                            style="@style/indexValueStyle" />
+                        
+                    </LinearLayout>
+
+                </LinearLayout>
+
+                <LinearLayout
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content">
+
+                    <LinearLayout
+                        android:orientation="vertical"
+                        android:background="@drawable/wireframe_light"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:layout_weight="1">
+
+                        <ImageView
+                            android:layout_gravity="center_horizontal"
+                            android:layout_width="65dp"
+                            android:layout_height="79dp"
+                            android:src="@drawable/travel_index" />
+
+                        <TextView
+                            android:text="@string/travel_index"
+                            style="@style/indexStyle" />
+                        
+                        <TextView
+                            android:id="@+id/tv_travel_index"
+                            android:text="@string/default_text"
+                            style="@style/indexValueStyle" />
+                        
+                    </LinearLayout>
+                    <LinearLayout
+                        android:orientation="vertical"
+                        android:background="@drawable/wireframe_light"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:layout_weight="1">
+
+                        <ImageView
+                            android:layout_gravity="center_horizontal"
+                            android:layout_width="65dp"
+                            android:layout_height="79dp"
+                            android:src="@drawable/sunscreen_index" />
+
+                        <TextView
+                            android:text="@string/sunscreen_index"
+                            style="@style/indexStyle" />
+                        
+                        <TextView
+                            android:id="@+id/tv_sunscreen_index"
+                            android:text="@string/default_text"
+                            style="@style/indexValueStyle" />
+                        
+                    </LinearLayout>
+
+                    <LinearLayout
+                        android:orientation="vertical"
+                        android:background="@drawable/wireframe_light"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:layout_weight="1">
+
+                        <ImageView
+                            android:layout_gravity="center_horizontal"
+                            android:layout_width="65dp"
+                            android:layout_height="79dp"
+                            android:src="@drawable/cold_index" />
+
+                        <TextView
+                            android:text="@string/cold_index"
+                            style="@style/indexStyle" />
+                        
+                        <TextView
+                            android:id="@+id/tv_cold_index"
+                            android:text="@string/default_text"
+                            style="@style/indexValueStyle" />
+                        
+                    </LinearLayout>
+                    <LinearLayout
+                        android:orientation="vertical"
+                        android:background="@drawable/wireframe_light"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:layout_weight="1">
+
+                        <ImageView
+                            android:layout_gravity="center_horizontal"
+                            android:layout_width="65dp"
+                            android:layout_height="79dp"
+                            android:src="@drawable/comfort_index" />
+
+                        <TextView
+                            android:text="@string/comfort_index"
+                            style="@style/indexStyle" />
+                        
+                        <TextView
+                            android:id="@+id/tv_comfort_index"
+                            android:text="@string/default_text"
+                            style="@style/indexValueStyle" />
+                        
+                    </LinearLayout>
+
+                </LinearLayout>
+
+            </LinearLayout>
+
+        </LinearLayout>
+
+    </com.handmark.pulltorefresh.library.PullToRefreshScrollView>
+
+</LinearLayout>
Index: PullToRefresh/build/intermediates/bundles/release/R.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/bundles/release/R.txt	(revision )
+++ PullToRefresh/build/intermediates/bundles/release/R.txt	(revision )
@@ -0,0 +1,78 @@
+int anim slide_in_from_bottom 0x7f040000
+int anim slide_in_from_top 0x7f040001
+int anim slide_out_to_bottom 0x7f040002
+int anim slide_out_to_top 0x7f040003
+int attr ptrAdapterViewBackground 0x7f010010
+int attr ptrAnimationStyle 0x7f01000c
+int attr ptrDrawable 0x7f010006
+int attr ptrDrawableBottom 0x7f010012
+int attr ptrDrawableEnd 0x7f010008
+int attr ptrDrawableStart 0x7f010007
+int attr ptrDrawableTop 0x7f010011
+int attr ptrHeaderBackground 0x7f010001
+int attr ptrHeaderSubTextColor 0x7f010003
+int attr ptrHeaderTextAppearance 0x7f01000a
+int attr ptrHeaderTextColor 0x7f010002
+int attr ptrListViewExtrasEnabled 0x7f01000e
+int attr ptrMode 0x7f010004
+int attr ptrOverScroll 0x7f010009
+int attr ptrRefreshableViewBackground 0x7f010000
+int attr ptrRotateDrawableWhilePulling 0x7f01000f
+int attr ptrScrollingWhileRefreshingEnabled 0x7f01000d
+int attr ptrShowIndicator 0x7f010005
+int attr ptrSubHeaderTextAppearance 0x7f01000b
+int dimen header_footer_left_right_padding 0x7f070000
+int dimen header_footer_top_bottom_padding 0x7f070001
+int dimen indicator_corner_radius 0x7f070002
+int dimen indicator_internal_padding 0x7f070003
+int dimen indicator_right_padding 0x7f070004
+int drawable default_ptr_flip 0x7f020000
+int drawable default_ptr_rotate 0x7f020001
+int drawable indicator_arrow 0x7f020002
+int drawable indicator_bg_bottom 0x7f020003
+int drawable indicator_bg_top 0x7f020004
+int id both 0x7f060003
+int id disabled 0x7f060000
+int id fl_inner 0x7f06000c
+int id flip 0x7f060008
+int id gridview 0x7f060009
+int id manualOnly 0x7f060004
+int id pullDownFromTop 0x7f060005
+int id pullFromEnd 0x7f060002
+int id pullFromStart 0x7f060001
+int id pullUpFromBottom 0x7f060006
+int id pull_to_refresh_image 0x7f06000d
+int id pull_to_refresh_progress 0x7f06000e
+int id pull_to_refresh_sub_text 0x7f060010
+int id pull_to_refresh_text 0x7f06000f
+int id rotate 0x7f060007
+int id scrollview 0x7f06000a
+int id webview 0x7f06000b
+int layout pull_to_refresh_header_horizontal 0x7f030000
+int layout pull_to_refresh_header_vertical 0x7f030001
+int string pull_to_refresh_from_bottom_pull_label 0x7f050003
+int string pull_to_refresh_from_bottom_refreshing_label 0x7f050004
+int string pull_to_refresh_from_bottom_release_label 0x7f050005
+int string pull_to_refresh_pull_label 0x7f050000
+int string pull_to_refresh_refreshing_label 0x7f050001
+int string pull_to_refresh_release_label 0x7f050002
+int[] styleable PullToRefresh { 0x7f010000, 0x7f010001, 0x7f010002, 0x7f010003, 0x7f010004, 0x7f010005, 0x7f010006, 0x7f010007, 0x7f010008, 0x7f010009, 0x7f01000a, 0x7f01000b, 0x7f01000c, 0x7f01000d, 0x7f01000e, 0x7f01000f, 0x7f010010, 0x7f010011, 0x7f010012 }
+int styleable PullToRefresh_ptrAdapterViewBackground 16
+int styleable PullToRefresh_ptrAnimationStyle 12
+int styleable PullToRefresh_ptrDrawable 6
+int styleable PullToRefresh_ptrDrawableBottom 18
+int styleable PullToRefresh_ptrDrawableEnd 8
+int styleable PullToRefresh_ptrDrawableStart 7
+int styleable PullToRefresh_ptrDrawableTop 17
+int styleable PullToRefresh_ptrHeaderBackground 1
+int styleable PullToRefresh_ptrHeaderSubTextColor 3
+int styleable PullToRefresh_ptrHeaderTextAppearance 10
+int styleable PullToRefresh_ptrHeaderTextColor 2
+int styleable PullToRefresh_ptrListViewExtrasEnabled 14
+int styleable PullToRefresh_ptrMode 4
+int styleable PullToRefresh_ptrOverScroll 9
+int styleable PullToRefresh_ptrRefreshableViewBackground 0
+int styleable PullToRefresh_ptrRotateDrawableWhilePulling 15
+int styleable PullToRefresh_ptrScrollingWhileRefreshingEnabled 13
+int styleable PullToRefresh_ptrShowIndicator 5
+int styleable PullToRefresh_ptrSubHeaderTextAppearance 11
Index: PullToRefresh/src/main/res/anim/slide_out_to_bottom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/src/main/res/anim/slide_out_to_bottom.xml	(revision )
+++ PullToRefresh/src/main/res/anim/slide_out_to_bottom.xml	(revision )
@@ -0,0 +1,21 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+     Copyright (C) 2009 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+
+<translate xmlns:android="http://schemas.android.com/apk/res/android"
+    android:duration="@android:integer/config_longAnimTime"
+    android:fromYDelta="0"
+    android:toYDelta="100%p" />
Index: app/src/main/java/com/example/victor/weathertest3/WeatherApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/victor/weathertest3/WeatherApplication.java	(revision )
+++ app/src/main/java/com/example/victor/weathertest3/WeatherApplication.java	(revision )
@@ -0,0 +1,16 @@
+package com.example.victor.weathertest3;
+
+import android.app.Application;
+
+import com.baidu.apistore.sdk.ApiStoreSDK;
+
+/**
+ * Created by victor on 2016/8/19.
+ */
+public class WeatherApplication extends Application {
+    @Override
+    public void onCreate() {
+        super.onCreate();
+        ApiStoreSDK.init(this, "41cd4bd59934b4ef88c2d2c76a7e2a5b");
+    }
+}
Index: PullToRefresh/build/intermediates/res/merged/androidTest/debug/values-ko/values-ko.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/res/merged/androidTest/debug/values-ko/values-ko.xml	(revision )
+++ PullToRefresh/build/intermediates/res/merged/androidTest/debug/values-ko/values-ko.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="pull_to_refresh_pull_label">당겨서 새로 고침…</string>
+    <string name="pull_to_refresh_refreshing_label">로드 중…</string>
+    <string name="pull_to_refresh_release_label">놓아서 새로 고침…</string>
+</resources>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/bundles/release/res/values-zh/values-zh.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/bundles/release/res/values-zh/values-zh.xml	(revision )
+++ PullToRefresh/build/intermediates/bundles/release/res/values-zh/values-zh.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="pull_to_refresh_pull_label">下拉刷新…</string>
+    <string name="pull_to_refresh_refreshing_label">正在载入…</string>
+    <string name="pull_to_refresh_release_label">放开以刷新…</string>
+</resources>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/blame/res/androidTest/debug/multi/values-iw.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/blame/res/androidTest/debug/multi/values-iw.json	(revision )
+++ PullToRefresh/build/intermediates/blame/res/androidTest/debug/multi/values-iw.json	(revision )
@@ -0,0 +1,64 @@
+[
+    {
+        "outputFile": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\res\\merged\\androidTest\\debug\\values-iw\\values-iw.xml",
+        "map": [
+            {
+                "to": {
+                    "startLine": 2,
+                    "startColumn": 4,
+                    "startOffset": 55,
+                    "endColumn": 67,
+                    "endOffset": 118
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values-iw\\values-iw.xml",
+                    "position": {
+                        "startLine": 2,
+                        "startColumn": 4,
+                        "startOffset": 55,
+                        "endColumn": 67,
+                        "endOffset": 118
+                    }
+                }
+            },
+            {
+                "to": {
+                    "startLine": 3,
+                    "startColumn": 4,
+                    "startOffset": 123,
+                    "endColumn": 66,
+                    "endOffset": 185
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values-iw\\values-iw.xml",
+                    "position": {
+                        "startLine": 3,
+                        "startColumn": 4,
+                        "startOffset": 123,
+                        "endColumn": 66,
+                        "endOffset": 185
+                    }
+                }
+            },
+            {
+                "to": {
+                    "startLine": 4,
+                    "startColumn": 4,
+                    "startOffset": 190,
+                    "endColumn": 70,
+                    "endOffset": 256
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values-iw\\values-iw.xml",
+                    "position": {
+                        "startLine": 4,
+                        "startColumn": 4,
+                        "startOffset": 190,
+                        "endColumn": 70,
+                        "endOffset": 256
+                    }
+                }
+            }
+        ]
+    }
+]
\ No newline at end of file
Index: PullToRefresh/build/intermediates/bundles/debug/res/values-pt/values-pt.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/bundles/debug/res/values-pt/values-pt.xml	(revision )
+++ PullToRefresh/build/intermediates/bundles/debug/res/values-pt/values-pt.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="pull_to_refresh_pull_label">Puxe para atualizar…</string>
+    <string name="pull_to_refresh_refreshing_label">A carregar…</string>
+    <string name="pull_to_refresh_release_label">Liberação para atualizar…</string>
+</resources>
\ No newline at end of file
Index: app/src/main/java/com/example/victor/weathertest3/service/WeatherService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/victor/weathertest3/service/WeatherService.java	(revision )
+++ app/src/main/java/com/example/victor/weathertest3/service/WeatherService.java	(revision )
@@ -0,0 +1,249 @@
+package com.example.victor.weathertest3.service;
+
+import android.app.Service;
+import android.content.Intent;
+import android.os.Binder;
+import android.os.Handler;
+import android.os.IBinder;
+import android.os.Message;
+import android.util.Log;
+
+import com.baidu.apistore.sdk.ApiCallBack;
+import com.baidu.apistore.sdk.ApiStoreSDK;
+import com.baidu.apistore.sdk.network.Parameters;
+import com.example.victor.weathertest3.bean.PMBean;
+import com.example.victor.weathertest3.bean.SixDayWeatherBean;
+import com.example.victor.weathertest3.bean.WeatherBean;
+
+import org.json.JSONArray;
+import org.json.JSONException;
+import org.json.JSONObject;
+
+import java.text.ParseException;
+import java.text.SimpleDateFormat;
+import java.util.ArrayList;
+import java.util.Date;
+import java.util.List;
+
+public class WeatherService extends Service {
+
+    private String city;
+    private WeatherServiceBinder biner = new WeatherServiceBinder();
+    private WeatherBean bean = new WeatherBean();
+    private boolean isRunning = false;
+    private int count = 0;
+    private OnParserCallBack callBack;
+    private static final int REPEAT_MSG =0X01;
+    private final int CALLBACK_OK = 0x02;
+    private final int CALLBACK_ERROR = 0x04;
+
+    public WeatherService() {
+    }
+
+    public interface OnParserCallBack{
+        public void OnParserComplete(WeatherBean bean);
+    }
+
+    @Override
+    public IBinder onBind(Intent intent) {
+        return biner;
+    }
+
+    @Override
+    public void onCreate() {
+        super.onCreate();
+        city = "北京";
+        mHandler.sendEmptyMessage(REPEAT_MSG);
+    }
+
+    @Override
+    public int onStartCommand(Intent intent, int flags, int startId) {
+        return super.onStartCommand(intent, flags, startId);
+    }
+
+    //半小时刷新
+    Handler mHandler = new Handler() {
+        @Override
+        public void handleMessage(Message msg) {
+            if (msg.what == REPEAT_MSG){
+                getCityWeather();
+                sendEmptyMessageDelayed(REPEAT_MSG,30*60*1000);
+            }
+        }
+    };
+
+    public void getCityWeather(String city){
+        this.city = city;
+        getCityWeather();
+    }
+
+    public void getCityWeather(){
+        if(isRunning){
+            return;
+        }
+        isRunning = true;
+        count = 0;
+
+        Parameters parameters =new  Parameters();
+        parameters.put("city", city);
+        ApiStoreSDK.execute("http://apis.baidu.com/heweather/weather/free", ApiStoreSDK.GET, parameters, new ApiCallBack() {
+            public void onSuccess(int var1, String var2) {
+                count++;
+                bean = parserWeather(var1, var2);
+            }
+
+            public void onError(int var1, String var2, Exception var3) {
+                Log.e("parserWeather", "onError, status: " + var1);
+                Log.e("parserWeather", "errMsg: " + (var3 == null ? "" : var3.getMessage()));
+            }
+
+            public void onComplete() {
+                Parameters parameters = new Parameters();
+                parameters.put("cityname", bean.getCity());
+                Log.e("cityid", "" + bean.getCity_id());
+                parameters.put("cityid", bean.getCity_id().lastIndexOf(9));
+                ApiStoreSDK.execute("http://apis.baidu.com/apistore/weatherservice/recentweathers", ApiStoreSDK.GET, parameters, new ApiCallBack() {
+                    public void onSuccess(int var1, String var2) {
+                        count++;
+                        WeatherBean bean2 = parserWeather(var1, var2);
+                        bean.setSunscreen_index(bean2.getSunscreen_index());
+                    }
+
+                    public void onError(int var1, String var2, Exception var3) {
+                        Log.e("parserWeather--防晒指数", "onError, status: " + var1);
+                        Log.e("parserWeather--防晒指数", "errMsg: " + (var3 == null ? "" : var3.getMessage()));
+                    }
+
+                    public void onComplete() {
+                        Log.v("parserWeather--防晒指数", "成功");
+                        Log.e("getCityWeather", "" + count);
+                        if (count == 2) {
+                            Log.e("getCityWeather", "" + callBack);
+                            if (callBack != null) {
+                                callBack.OnParserComplete(bean);
+                            }
+                            isRunning = false;
+                        }
+                    }
+                });
+                Log.v("parserWeather", "完成");
+            }
+        });
+
+    }
+
+    public void setCallBack(OnParserCallBack callBack) {
+        this.callBack = callBack;
+    }
+
+    public void removeCallBack(){
+        callBack = null;
+    }
+
+    //解析天气接口
+    private WeatherBean parserWeather(int v,String s){
+
+        WeatherBean bean = null;
+        SimpleDateFormat sdfReleaseDate =new SimpleDateFormat("yyyy-MM-dd HH:mm");
+        SimpleDateFormat sdfday =new SimpleDateFormat("yyyy-MM-dd");
+        SimpleDateFormat format = new SimpleDateFormat("H:mm");
+        SimpleDateFormat format2 = new SimpleDateFormat("M/d");
+
+        if(v == 200){
+            try {
+                JSONObject resultJson = new JSONObject(s);
+                bean = new WeatherBean();
+
+                if (!resultJson.has("retData")){
+                    JSONObject weatherJson = resultJson.getJSONArray("HeWeather data service 3.0").getJSONObject(0);
+
+                    //基础信息
+                    JSONObject basic = weatherJson.getJSONObject("basic");
+                    bean.setCity(basic.getString("city"));
+                    bean.setCity_id(basic.getString("id"));
+                    Date datef = sdfReleaseDate.parse(basic.getJSONObject("update").getString("loc"));
+                    bean.setRelease(format.format(datef) + "发布");
+
+                    //现在信息
+                    JSONObject now = weatherJson.getJSONObject("now");
+                    bean.setWeather_str(now.getJSONObject("cond").getString("txt"));
+                    bean.setWeather_id(now.getJSONObject("cond").getString("code"));
+                    bean.setSendible_temperature(now.getString("fl"));
+                    bean.setHumidity(now.getString("hum"));
+                    bean.setNow_temp(now.getString("tmp"));
+                    bean.setWind_direction(now.getJSONObject("wind").getString("dir"));
+                    bean.setWind_power(now.getJSONObject("wind").getString("sc"));
+
+                    //每日预报
+                    JSONArray dailyForecast = weatherJson.getJSONArray("daily_forecast");
+                    JSONObject dayData = null;
+                    Date date = new Date(System.currentTimeMillis());
+                    List<SixDayWeatherBean> sixDaylist = new ArrayList<SixDayWeatherBean>();
+                    for (int i = 0; i < dailyForecast.length(); i++) {
+                        SixDayWeatherBean sixBean = new SixDayWeatherBean();
+                        dayData = dailyForecast.getJSONObject(i);
+                        datef = sdfday.parse(dayData.getString("date"));
+                        if (!datef.after(date)){
+                            bean.setMax_temp(dayData.getJSONObject("tmp").getString("max"));
+                            bean.setMin_temp(dayData.getJSONObject("tmp").getString("min"));
+                            bean.setSunrise(dayData.getJSONObject("astro").getString("sr"));
+                            bean.setSunset(dayData.getJSONObject("astro").getString("ss"));
+                        }
+                        sixBean.setDate(format2.format(datef));
+                        sixBean.setWeather_id(dayData.getJSONObject("cond").getString("code_d"));
+                        sixBean.setMaxTemp(dayData.getJSONObject("tmp").getString("max"));
+                        sixBean.setMinTemp(dayData.getJSONObject("tmp").getString("min"));
+                        sixDaylist.add(sixBean);
+                        if (sixDaylist.size() == 6){//需要6天的预报，防止过多
+                            break;
+                        }
+                    }
+
+                    //指数
+                    JSONObject index = weatherJson.getJSONObject("suggestion");
+                    bean.setComfort_index(index.getJSONObject("comf").getString("brf"));
+                    bean.setCarWash_index(index.getJSONObject("cw").getString("brf"));
+                    bean.setDressing_index(index.getJSONObject("drsg").getString("brf"));
+                    bean.setCold_index(index.getJSONObject("flu").getString("brf"));
+                    bean.setExercise_index(index.getJSONObject("sport").getString("brf"));
+                    bean.setTravel_index(index.getJSONObject("trav").getString("brf"));
+                    bean.setUv_index(index.getJSONObject("uv").getString("brf"));
+                    bean.setSixDayList(sixDaylist);
+
+                    //api
+                    if(weatherJson.has("aqi")) {
+                        JSONObject api = weatherJson.getJSONObject("aqi").getJSONObject("city");
+                        Log.e("api","有api");
+                        PMBean pmBean = new PMBean();
+                        pmBean.setAqi(api.getString("aqi"));
+                        pmBean.setQuality(api.getString("qlty"));
+                        bean.setPmBean(pmBean);
+                    }
+                }else {
+                    bean.setSunscreen_index(resultJson.getJSONObject("retData").getJSONObject("today").getJSONArray("index").getJSONObject(1).getString("index"));
+                }
+
+            } catch (JSONException e) {
+                e.printStackTrace();
+            } catch (ParseException e) {
+                e.printStackTrace();
+            }
+        }else{
+            Log.e("err", "出错，通信码为" + v);
+        }
+        return bean;
+    }
+
+    public class WeatherServiceBinder extends Binder{
+
+        public WeatherService getService(){
+            return WeatherService.this;
+        }
+
+    }
+
+    @Override
+    public void onDestroy() {
+        super.onDestroy();
+    }
+}
Index: PullToRefresh/build/intermediates/bundles/release/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/bundles/release/AndroidManifest.xml	(revision )
+++ PullToRefresh/build/intermediates/bundles/release/AndroidManifest.xml	(revision )
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.handmark.pulltorefresh.library"
+    android:versionCode="2110"
+    android:versionName="2.1.1" >
+
+    <uses-sdk
+        android:minSdkVersion="4"
+        android:targetSdkVersion="4" />
+
+    <application />
+
+</manifest>
\ No newline at end of file
Index: PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/PullToRefreshHorizontalScrollView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/PullToRefreshHorizontalScrollView.java	(revision )
+++ PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/PullToRefreshHorizontalScrollView.java	(revision )
@@ -0,0 +1,110 @@
+/*******************************************************************************
+ * Copyright 2011, 2012 Chris Banes.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ *******************************************************************************/
+package com.handmark.pulltorefresh.library;
+
+import android.annotation.TargetApi;
+import android.content.Context;
+import android.os.Build.VERSION;
+import android.os.Build.VERSION_CODES;
+import android.util.AttributeSet;
+import android.view.View;
+import android.widget.HorizontalScrollView;
+
+public class PullToRefreshHorizontalScrollView extends PullToRefreshBase<HorizontalScrollView> {
+
+	public PullToRefreshHorizontalScrollView(Context context) {
+		super(context);
+	}
+
+	public PullToRefreshHorizontalScrollView(Context context, AttributeSet attrs) {
+		super(context, attrs);
+	}
+
+	public PullToRefreshHorizontalScrollView(Context context, Mode mode) {
+		super(context, mode);
+	}
+
+	public PullToRefreshHorizontalScrollView(Context context, Mode mode, AnimationStyle style) {
+		super(context, mode, style);
+	}
+
+	@Override
+	public final Orientation getPullToRefreshScrollDirection() {
+		return Orientation.HORIZONTAL;
+	}
+
+	@Override
+	protected HorizontalScrollView createRefreshableView(Context context, AttributeSet attrs) {
+		HorizontalScrollView scrollView;
+
+		if (VERSION.SDK_INT >= VERSION_CODES.GINGERBREAD) {
+			scrollView = new InternalHorizontalScrollViewSDK9(context, attrs);
+		} else {
+			scrollView = new HorizontalScrollView(context, attrs);
+		}
+
+		scrollView.setId(R.id.scrollview);
+		return scrollView;
+	}
+
+	@Override
+	protected boolean isReadyForPullStart() {
+		return mRefreshableView.getScrollX() == 0;
+	}
+
+	@Override
+	protected boolean isReadyForPullEnd() {
+		View scrollViewChild = mRefreshableView.getChildAt(0);
+		if (null != scrollViewChild) {
+			return mRefreshableView.getScrollX() >= (scrollViewChild.getWidth() - getWidth());
+		}
+		return false;
+	}
+
+	@TargetApi(9)
+	final class InternalHorizontalScrollViewSDK9 extends HorizontalScrollView {
+
+		public InternalHorizontalScrollViewSDK9(Context context, AttributeSet attrs) {
+			super(context, attrs);
+		}
+
+		@Override
+		protected boolean overScrollBy(int deltaX, int deltaY, int scrollX, int scrollY, int scrollRangeX,
+				int scrollRangeY, int maxOverScrollX, int maxOverScrollY, boolean isTouchEvent) {
+
+			final boolean returnValue = super.overScrollBy(deltaX, deltaY, scrollX, scrollY, scrollRangeX,
+					scrollRangeY, maxOverScrollX, maxOverScrollY, isTouchEvent);
+
+			// Does all of the hard work...
+			OverscrollHelper.overScrollBy(PullToRefreshHorizontalScrollView.this, deltaX, scrollX, deltaY, scrollY,
+					getScrollRange(), isTouchEvent);
+
+			return returnValue;
+		}
+
+		/**
+		 * Taken from the AOSP ScrollView source
+		 */
+		private int getScrollRange() {
+			int scrollRange = 0;
+			if (getChildCount() > 0) {
+				View child = getChildAt(0);
+				scrollRange = Math.max(0, child.getWidth() - (getWidth() - getPaddingLeft() - getPaddingRight()));
+			}
+			return scrollRange;
+		}
+	}
+}
Index: .idea/encodings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/encodings.xml	(revision )
+++ .idea/encodings.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Encoding">
+    <file url="PROJECT" charset="UTF-8" />
+  </component>
+</project>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/bundles/debug/res/values-pt-rBR/values-pt-rBR.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/bundles/debug/res/values-pt-rBR/values-pt-rBR.xml	(revision )
+++ PullToRefresh/build/intermediates/bundles/debug/res/values-pt-rBR/values-pt-rBR.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="pull_to_refresh_pull_label">Puxe para atualizar…</string>
+    <string name="pull_to_refresh_refreshing_label">Carregando…</string>
+    <string name="pull_to_refresh_release_label">Libere para atualizar…</string>
+</resources>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/bundles/release/res/values-fi/values-fi.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/bundles/release/res/values-fi/values-fi.xml	(revision )
+++ PullToRefresh/build/intermediates/bundles/release/res/values-fi/values-fi.xml	(revision )
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="pull_to_refresh_from_bottom_pull_label">Päivitä vetämällä ylös…</string>
+    <string name="pull_to_refresh_from_bottom_refreshing_label">@string/pull_to_refresh_refreshing_label</string>
+    <string name="pull_to_refresh_from_bottom_release_label">@string/pull_to_refresh_release_label</string>
+    <string name="pull_to_refresh_pull_label">Päivitä vetämällä alas…</string>
+    <string name="pull_to_refresh_refreshing_label">Päivitetään…</string>
+    <string name="pull_to_refresh_release_label">Päivitä vapauttamalla…</string>
+</resources>
\ No newline at end of file
Index: PullToRefresh/src/main/res/values-ar/pull_refresh_strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/src/main/res/values-ar/pull_refresh_strings.xml	(revision )
+++ PullToRefresh/src/main/res/values-ar/pull_refresh_strings.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+  <string name="pull_to_refresh_pull_label">اسحب للتحديث…</string>
+  <string name="pull_to_refresh_release_label">اترك للتحديث…</string>
+  <string name="pull_to_refresh_refreshing_label">تحميل…</string>
+</resources>
Index: PullToRefresh/build/intermediates/bundles/release/res/layout/pull_to_refresh_header_vertical.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/bundles/release/res/layout/pull_to_refresh_header_vertical.xml	(revision )
+++ PullToRefresh/build/intermediates/bundles/release/res/layout/pull_to_refresh_header_vertical.xml	(revision )
@@ -0,0 +1,59 @@
+<?xml version="1.0" encoding="utf-8"?>
+<merge xmlns:android="http://schemas.android.com/apk/res/android" >
+
+    <FrameLayout
+        android:id="@+id/fl_inner"
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content"
+        android:paddingBottom="@dimen/header_footer_top_bottom_padding"
+        android:paddingLeft="@dimen/header_footer_left_right_padding"
+        android:paddingRight="@dimen/header_footer_left_right_padding"
+        android:paddingTop="@dimen/header_footer_top_bottom_padding" >
+
+        <FrameLayout
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="left|center_vertical" >
+
+            <ImageView
+                android:id="@+id/pull_to_refresh_image"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_gravity="center" />
+
+            <ProgressBar
+                android:id="@+id/pull_to_refresh_progress"
+                style="?android:attr/progressBarStyleSmall"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_gravity="center"
+                android:indeterminate="true"
+                android:visibility="gone" />
+        </FrameLayout>
+
+        <LinearLayout
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="center"
+            android:gravity="center_horizontal"
+            android:orientation="vertical" >
+
+            <TextView
+                android:id="@+id/pull_to_refresh_text"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:singleLine="true"
+                android:textAppearance="?android:attr/textAppearance"
+                android:textStyle="bold" />
+
+            <TextView
+                android:id="@+id/pull_to_refresh_sub_text"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:singleLine="true"
+                android:textAppearance="?android:attr/textAppearanceSmall"
+                android:visibility="gone" />
+        </LinearLayout>
+    </FrameLayout>
+
+</merge>
\ No newline at end of file
Index: PullToRefresh/build/generated/source/r/androidTest/debug/com/handmark/pulltorefresh/library/test/R.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/generated/source/r/androidTest/debug/com/handmark/pulltorefresh/library/test/R.java	(revision )
+++ PullToRefresh/build/generated/source/r/androidTest/debug/com/handmark/pulltorefresh/library/test/R.java	(revision )
@@ -0,0 +1,453 @@
+/* AUTO-GENERATED FILE.  DO NOT MODIFY.
+ *
+ * This class was automatically generated by the
+ * aapt tool from the resource data it found.  It
+ * should not be modified by hand.
+ */
+
+package com.handmark.pulltorefresh.library.test;
+
+public final class R {
+    public static final class anim {
+        public static final int slide_in_from_bottom=0x7f040000;
+        public static final int slide_in_from_top=0x7f040001;
+        public static final int slide_out_to_bottom=0x7f040002;
+        public static final int slide_out_to_top=0x7f040003;
+    }
+    public static final class attr {
+        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+         */
+        public static final int ptrAdapterViewBackground=0x7f010010;
+        /** <p>Must be one or more (separated by '|') of the following constant values.</p>
+<table>
+<colgroup align="left" />
+<colgroup align="left" />
+<colgroup align="left" />
+<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
+<tr><td><code>rotate</code></td><td>0x0</td><td></td></tr>
+<tr><td><code>flip</code></td><td>0x1</td><td></td></tr>
+</table>
+         */
+        public static final int ptrAnimationStyle=0x7f01000c;
+        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+         */
+        public static final int ptrDrawable=0x7f010006;
+        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+         */
+        public static final int ptrDrawableBottom=0x7f010012;
+        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+         */
+        public static final int ptrDrawableEnd=0x7f010008;
+        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+         */
+        public static final int ptrDrawableStart=0x7f010007;
+        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+         */
+        public static final int ptrDrawableTop=0x7f010011;
+        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+         */
+        public static final int ptrHeaderBackground=0x7f010001;
+        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+         */
+        public static final int ptrHeaderSubTextColor=0x7f010003;
+        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+         */
+        public static final int ptrHeaderTextAppearance=0x7f01000a;
+        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+         */
+        public static final int ptrHeaderTextColor=0x7f010002;
+        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
+         */
+        public static final int ptrListViewExtrasEnabled=0x7f01000e;
+        /** <p>Must be one or more (separated by '|') of the following constant values.</p>
+<table>
+<colgroup align="left" />
+<colgroup align="left" />
+<colgroup align="left" />
+<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
+<tr><td><code>disabled</code></td><td>0x0</td><td></td></tr>
+<tr><td><code>pullFromStart</code></td><td>0x1</td><td></td></tr>
+<tr><td><code>pullFromEnd</code></td><td>0x2</td><td></td></tr>
+<tr><td><code>both</code></td><td>0x3</td><td></td></tr>
+<tr><td><code>manualOnly</code></td><td>0x4</td><td></td></tr>
+<tr><td><code>pullDownFromTop</code></td><td>0x1</td><td></td></tr>
+<tr><td><code>pullUpFromBottom</code></td><td>0x2</td><td></td></tr>
+</table>
+         */
+        public static final int ptrMode=0x7f010004;
+        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
+         */
+        public static final int ptrOverScroll=0x7f010009;
+        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+         */
+        public static final int ptrRefreshableViewBackground=0x7f010000;
+        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
+         */
+        public static final int ptrRotateDrawableWhilePulling=0x7f01000f;
+        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
+         */
+        public static final int ptrScrollingWhileRefreshingEnabled=0x7f01000d;
+        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
+         */
+        public static final int ptrShowIndicator=0x7f010005;
+        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+         */
+        public static final int ptrSubHeaderTextAppearance=0x7f01000b;
+    }
+    public static final class dimen {
+        public static final int header_footer_left_right_padding=0x7f070000;
+        public static final int header_footer_top_bottom_padding=0x7f070001;
+        public static final int indicator_corner_radius=0x7f070002;
+        public static final int indicator_internal_padding=0x7f070003;
+        public static final int indicator_right_padding=0x7f070004;
+    }
+    public static final class drawable {
+        public static final int default_ptr_flip=0x7f020000;
+        public static final int default_ptr_rotate=0x7f020001;
+        public static final int indicator_arrow=0x7f020002;
+        public static final int indicator_bg_bottom=0x7f020003;
+        public static final int indicator_bg_top=0x7f020004;
+    }
+    public static final class id {
+        public static final int both=0x7f060003;
+        public static final int disabled=0x7f060000;
+        public static final int fl_inner=0x7f06000c;
+        public static final int flip=0x7f060008;
+        public static final int gridview=0x7f060009;
+        public static final int manualOnly=0x7f060004;
+        public static final int pullDownFromTop=0x7f060005;
+        public static final int pullFromEnd=0x7f060002;
+        public static final int pullFromStart=0x7f060001;
+        public static final int pullUpFromBottom=0x7f060006;
+        public static final int pull_to_refresh_image=0x7f06000d;
+        public static final int pull_to_refresh_progress=0x7f06000e;
+        public static final int pull_to_refresh_sub_text=0x7f060010;
+        public static final int pull_to_refresh_text=0x7f06000f;
+        public static final int rotate=0x7f060007;
+        public static final int scrollview=0x7f06000a;
+        public static final int webview=0x7f06000b;
+    }
+    public static final class layout {
+        public static final int pull_to_refresh_header_horizontal=0x7f030000;
+        public static final int pull_to_refresh_header_vertical=0x7f030001;
+    }
+    public static final class string {
+        public static final int pull_to_refresh_from_bottom_pull_label=0x7f050003;
+        public static final int pull_to_refresh_from_bottom_refreshing_label=0x7f050004;
+        public static final int pull_to_refresh_from_bottom_release_label=0x7f050005;
+        public static final int pull_to_refresh_pull_label=0x7f050000;
+        public static final int pull_to_refresh_refreshing_label=0x7f050001;
+        public static final int pull_to_refresh_release_label=0x7f050002;
+    }
+    public static final class styleable {
+        /** Attributes that can be used with a PullToRefresh.
+           <p>Includes the following attributes:</p>
+           <table>
+           <colgroup align="left" />
+           <colgroup align="left" />
+           <tr><th>Attribute</th><th>Description</th></tr>
+           <tr><td><code>{@link #PullToRefresh_ptrAdapterViewBackground com.handmark.pulltorefresh.library.test:ptrAdapterViewBackground}</code></td><td></td></tr>
+           <tr><td><code>{@link #PullToRefresh_ptrAnimationStyle com.handmark.pulltorefresh.library.test:ptrAnimationStyle}</code></td><td></td></tr>
+           <tr><td><code>{@link #PullToRefresh_ptrDrawable com.handmark.pulltorefresh.library.test:ptrDrawable}</code></td><td></td></tr>
+           <tr><td><code>{@link #PullToRefresh_ptrDrawableBottom com.handmark.pulltorefresh.library.test:ptrDrawableBottom}</code></td><td></td></tr>
+           <tr><td><code>{@link #PullToRefresh_ptrDrawableEnd com.handmark.pulltorefresh.library.test:ptrDrawableEnd}</code></td><td></td></tr>
+           <tr><td><code>{@link #PullToRefresh_ptrDrawableStart com.handmark.pulltorefresh.library.test:ptrDrawableStart}</code></td><td></td></tr>
+           <tr><td><code>{@link #PullToRefresh_ptrDrawableTop com.handmark.pulltorefresh.library.test:ptrDrawableTop}</code></td><td></td></tr>
+           <tr><td><code>{@link #PullToRefresh_ptrHeaderBackground com.handmark.pulltorefresh.library.test:ptrHeaderBackground}</code></td><td></td></tr>
+           <tr><td><code>{@link #PullToRefresh_ptrHeaderSubTextColor com.handmark.pulltorefresh.library.test:ptrHeaderSubTextColor}</code></td><td></td></tr>
+           <tr><td><code>{@link #PullToRefresh_ptrHeaderTextAppearance com.handmark.pulltorefresh.library.test:ptrHeaderTextAppearance}</code></td><td></td></tr>
+           <tr><td><code>{@link #PullToRefresh_ptrHeaderTextColor com.handmark.pulltorefresh.library.test:ptrHeaderTextColor}</code></td><td></td></tr>
+           <tr><td><code>{@link #PullToRefresh_ptrListViewExtrasEnabled com.handmark.pulltorefresh.library.test:ptrListViewExtrasEnabled}</code></td><td></td></tr>
+           <tr><td><code>{@link #PullToRefresh_ptrMode com.handmark.pulltorefresh.library.test:ptrMode}</code></td><td></td></tr>
+           <tr><td><code>{@link #PullToRefresh_ptrOverScroll com.handmark.pulltorefresh.library.test:ptrOverScroll}</code></td><td></td></tr>
+           <tr><td><code>{@link #PullToRefresh_ptrRefreshableViewBackground com.handmark.pulltorefresh.library.test:ptrRefreshableViewBackground}</code></td><td></td></tr>
+           <tr><td><code>{@link #PullToRefresh_ptrRotateDrawableWhilePulling com.handmark.pulltorefresh.library.test:ptrRotateDrawableWhilePulling}</code></td><td></td></tr>
+           <tr><td><code>{@link #PullToRefresh_ptrScrollingWhileRefreshingEnabled com.handmark.pulltorefresh.library.test:ptrScrollingWhileRefreshingEnabled}</code></td><td></td></tr>
+           <tr><td><code>{@link #PullToRefresh_ptrShowIndicator com.handmark.pulltorefresh.library.test:ptrShowIndicator}</code></td><td></td></tr>
+           <tr><td><code>{@link #PullToRefresh_ptrSubHeaderTextAppearance com.handmark.pulltorefresh.library.test:ptrSubHeaderTextAppearance}</code></td><td></td></tr>
+           </table>
+           @see #PullToRefresh_ptrAdapterViewBackground
+           @see #PullToRefresh_ptrAnimationStyle
+           @see #PullToRefresh_ptrDrawable
+           @see #PullToRefresh_ptrDrawableBottom
+           @see #PullToRefresh_ptrDrawableEnd
+           @see #PullToRefresh_ptrDrawableStart
+           @see #PullToRefresh_ptrDrawableTop
+           @see #PullToRefresh_ptrHeaderBackground
+           @see #PullToRefresh_ptrHeaderSubTextColor
+           @see #PullToRefresh_ptrHeaderTextAppearance
+           @see #PullToRefresh_ptrHeaderTextColor
+           @see #PullToRefresh_ptrListViewExtrasEnabled
+           @see #PullToRefresh_ptrMode
+           @see #PullToRefresh_ptrOverScroll
+           @see #PullToRefresh_ptrRefreshableViewBackground
+           @see #PullToRefresh_ptrRotateDrawableWhilePulling
+           @see #PullToRefresh_ptrScrollingWhileRefreshingEnabled
+           @see #PullToRefresh_ptrShowIndicator
+           @see #PullToRefresh_ptrSubHeaderTextAppearance
+         */
+        public static final int[] PullToRefresh = {
+            0x7f010000, 0x7f010001, 0x7f010002, 0x7f010003,
+            0x7f010004, 0x7f010005, 0x7f010006, 0x7f010007,
+            0x7f010008, 0x7f010009, 0x7f01000a, 0x7f01000b,
+            0x7f01000c, 0x7f01000d, 0x7f01000e, 0x7f01000f,
+            0x7f010010, 0x7f010011, 0x7f010012
+        };
+        /**
+          <p>This symbol is the offset where the {@link com.handmark.pulltorefresh.library.test.R.attr#ptrAdapterViewBackground}
+          attribute's value can be found in the {@link #PullToRefresh} array.
+
+
+          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+          @attr name com.handmark.pulltorefresh.library.test:ptrAdapterViewBackground
+        */
+        public static final int PullToRefresh_ptrAdapterViewBackground = 16;
+        /**
+          <p>This symbol is the offset where the {@link com.handmark.pulltorefresh.library.test.R.attr#ptrAnimationStyle}
+          attribute's value can be found in the {@link #PullToRefresh} array.
+
+
+          <p>Must be one or more (separated by '|') of the following constant values.</p>
+<table>
+<colgroup align="left" />
+<colgroup align="left" />
+<colgroup align="left" />
+<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
+<tr><td><code>rotate</code></td><td>0x0</td><td></td></tr>
+<tr><td><code>flip</code></td><td>0x1</td><td></td></tr>
+</table>
+          @attr name com.handmark.pulltorefresh.library.test:ptrAnimationStyle
+        */
+        public static final int PullToRefresh_ptrAnimationStyle = 12;
+        /**
+          <p>This symbol is the offset where the {@link com.handmark.pulltorefresh.library.test.R.attr#ptrDrawable}
+          attribute's value can be found in the {@link #PullToRefresh} array.
+
+
+          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+          @attr name com.handmark.pulltorefresh.library.test:ptrDrawable
+        */
+        public static final int PullToRefresh_ptrDrawable = 6;
+        /**
+          <p>This symbol is the offset where the {@link com.handmark.pulltorefresh.library.test.R.attr#ptrDrawableBottom}
+          attribute's value can be found in the {@link #PullToRefresh} array.
+
+
+          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+          @attr name com.handmark.pulltorefresh.library.test:ptrDrawableBottom
+        */
+        public static final int PullToRefresh_ptrDrawableBottom = 18;
+        /**
+          <p>This symbol is the offset where the {@link com.handmark.pulltorefresh.library.test.R.attr#ptrDrawableEnd}
+          attribute's value can be found in the {@link #PullToRefresh} array.
+
+
+          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+          @attr name com.handmark.pulltorefresh.library.test:ptrDrawableEnd
+        */
+        public static final int PullToRefresh_ptrDrawableEnd = 8;
+        /**
+          <p>This symbol is the offset where the {@link com.handmark.pulltorefresh.library.test.R.attr#ptrDrawableStart}
+          attribute's value can be found in the {@link #PullToRefresh} array.
+
+
+          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+          @attr name com.handmark.pulltorefresh.library.test:ptrDrawableStart
+        */
+        public static final int PullToRefresh_ptrDrawableStart = 7;
+        /**
+          <p>This symbol is the offset where the {@link com.handmark.pulltorefresh.library.test.R.attr#ptrDrawableTop}
+          attribute's value can be found in the {@link #PullToRefresh} array.
+
+
+          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+          @attr name com.handmark.pulltorefresh.library.test:ptrDrawableTop
+        */
+        public static final int PullToRefresh_ptrDrawableTop = 17;
+        /**
+          <p>This symbol is the offset where the {@link com.handmark.pulltorefresh.library.test.R.attr#ptrHeaderBackground}
+          attribute's value can be found in the {@link #PullToRefresh} array.
+
+
+          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+          @attr name com.handmark.pulltorefresh.library.test:ptrHeaderBackground
+        */
+        public static final int PullToRefresh_ptrHeaderBackground = 1;
+        /**
+          <p>This symbol is the offset where the {@link com.handmark.pulltorefresh.library.test.R.attr#ptrHeaderSubTextColor}
+          attribute's value can be found in the {@link #PullToRefresh} array.
+
+
+          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+          @attr name com.handmark.pulltorefresh.library.test:ptrHeaderSubTextColor
+        */
+        public static final int PullToRefresh_ptrHeaderSubTextColor = 3;
+        /**
+          <p>This symbol is the offset where the {@link com.handmark.pulltorefresh.library.test.R.attr#ptrHeaderTextAppearance}
+          attribute's value can be found in the {@link #PullToRefresh} array.
+
+
+          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+          @attr name com.handmark.pulltorefresh.library.test:ptrHeaderTextAppearance
+        */
+        public static final int PullToRefresh_ptrHeaderTextAppearance = 10;
+        /**
+          <p>This symbol is the offset where the {@link com.handmark.pulltorefresh.library.test.R.attr#ptrHeaderTextColor}
+          attribute's value can be found in the {@link #PullToRefresh} array.
+
+
+          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+          @attr name com.handmark.pulltorefresh.library.test:ptrHeaderTextColor
+        */
+        public static final int PullToRefresh_ptrHeaderTextColor = 2;
+        /**
+          <p>This symbol is the offset where the {@link com.handmark.pulltorefresh.library.test.R.attr#ptrListViewExtrasEnabled}
+          attribute's value can be found in the {@link #PullToRefresh} array.
+
+
+          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
+          @attr name com.handmark.pulltorefresh.library.test:ptrListViewExtrasEnabled
+        */
+        public static final int PullToRefresh_ptrListViewExtrasEnabled = 14;
+        /**
+          <p>This symbol is the offset where the {@link com.handmark.pulltorefresh.library.test.R.attr#ptrMode}
+          attribute's value can be found in the {@link #PullToRefresh} array.
+
+
+          <p>Must be one or more (separated by '|') of the following constant values.</p>
+<table>
+<colgroup align="left" />
+<colgroup align="left" />
+<colgroup align="left" />
+<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
+<tr><td><code>disabled</code></td><td>0x0</td><td></td></tr>
+<tr><td><code>pullFromStart</code></td><td>0x1</td><td></td></tr>
+<tr><td><code>pullFromEnd</code></td><td>0x2</td><td></td></tr>
+<tr><td><code>both</code></td><td>0x3</td><td></td></tr>
+<tr><td><code>manualOnly</code></td><td>0x4</td><td></td></tr>
+<tr><td><code>pullDownFromTop</code></td><td>0x1</td><td></td></tr>
+<tr><td><code>pullUpFromBottom</code></td><td>0x2</td><td></td></tr>
+</table>
+          @attr name com.handmark.pulltorefresh.library.test:ptrMode
+        */
+        public static final int PullToRefresh_ptrMode = 4;
+        /**
+          <p>This symbol is the offset where the {@link com.handmark.pulltorefresh.library.test.R.attr#ptrOverScroll}
+          attribute's value can be found in the {@link #PullToRefresh} array.
+
+
+          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
+          @attr name com.handmark.pulltorefresh.library.test:ptrOverScroll
+        */
+        public static final int PullToRefresh_ptrOverScroll = 9;
+        /**
+          <p>This symbol is the offset where the {@link com.handmark.pulltorefresh.library.test.R.attr#ptrRefreshableViewBackground}
+          attribute's value can be found in the {@link #PullToRefresh} array.
+
+
+          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+          @attr name com.handmark.pulltorefresh.library.test:ptrRefreshableViewBackground
+        */
+        public static final int PullToRefresh_ptrRefreshableViewBackground = 0;
+        /**
+          <p>This symbol is the offset where the {@link com.handmark.pulltorefresh.library.test.R.attr#ptrRotateDrawableWhilePulling}
+          attribute's value can be found in the {@link #PullToRefresh} array.
+
+
+          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
+          @attr name com.handmark.pulltorefresh.library.test:ptrRotateDrawableWhilePulling
+        */
+        public static final int PullToRefresh_ptrRotateDrawableWhilePulling = 15;
+        /**
+          <p>This symbol is the offset where the {@link com.handmark.pulltorefresh.library.test.R.attr#ptrScrollingWhileRefreshingEnabled}
+          attribute's value can be found in the {@link #PullToRefresh} array.
+
+
+          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
+          @attr name com.handmark.pulltorefresh.library.test:ptrScrollingWhileRefreshingEnabled
+        */
+        public static final int PullToRefresh_ptrScrollingWhileRefreshingEnabled = 13;
+        /**
+          <p>This symbol is the offset where the {@link com.handmark.pulltorefresh.library.test.R.attr#ptrShowIndicator}
+          attribute's value can be found in the {@link #PullToRefresh} array.
+
+
+          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
+          @attr name com.handmark.pulltorefresh.library.test:ptrShowIndicator
+        */
+        public static final int PullToRefresh_ptrShowIndicator = 5;
+        /**
+          <p>This symbol is the offset where the {@link com.handmark.pulltorefresh.library.test.R.attr#ptrSubHeaderTextAppearance}
+          attribute's value can be found in the {@link #PullToRefresh} array.
+
+
+          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+          @attr name com.handmark.pulltorefresh.library.test:ptrSubHeaderTextAppearance
+        */
+        public static final int PullToRefresh_ptrSubHeaderTextAppearance = 11;
+    };
+}
Index: PullToRefresh/src/main/res/layout/pull_to_refresh_header_horizontal.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/src/main/res/layout/pull_to_refresh_header_horizontal.xml	(revision )
+++ PullToRefresh/src/main/res/layout/pull_to_refresh_header_horizontal.xml	(revision )
@@ -0,0 +1,29 @@
+<?xml version="1.0" encoding="utf-8"?>
+<merge xmlns:android="http://schemas.android.com/apk/res/android" >
+
+    <FrameLayout
+        android:id="@+id/fl_inner"
+        android:layout_width="wrap_content"
+        android:layout_height="fill_parent"
+        android:paddingBottom="@dimen/header_footer_top_bottom_padding"
+        android:paddingLeft="@dimen/header_footer_left_right_padding"
+        android:paddingRight="@dimen/header_footer_left_right_padding"
+        android:paddingTop="@dimen/header_footer_top_bottom_padding" >
+
+        <ImageView
+            android:id="@+id/pull_to_refresh_image"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="center" />
+
+        <ProgressBar
+            android:id="@+id/pull_to_refresh_progress"
+            style="?android:attr/progressBarStyleSmall"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="center"
+            android:indeterminate="true"
+            android:visibility="gone" />
+    </FrameLayout>
+
+</merge>
\ No newline at end of file
Index: PullToRefresh/src/main/res/drawable/indicator_bg_top.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/src/main/res/drawable/indicator_bg_top.xml	(revision )
+++ PullToRefresh/src/main/res/drawable/indicator_bg_top.xml	(revision )
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="rectangle" >
+
+    <solid android:color="#40000000" />
+
+    <!--
+    I know the android:radius is useless here but it's needed to fix an old bug:
+    http://code.google.com/p/android/issues/detail?id=939
+    -->
+    <corners
+        android:bottomLeftRadius="@dimen/indicator_corner_radius"
+        android:bottomRightRadius="@dimen/indicator_corner_radius"
+        android:radius="1dp"
+        android:topLeftRadius="0dp"
+        android:topRightRadius="0dp" />
+
+</shape>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/bundles/release/aapt/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/bundles/release/aapt/AndroidManifest.xml	(revision )
+++ PullToRefresh/build/intermediates/bundles/release/aapt/AndroidManifest.xml	(revision )
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.handmark.pulltorefresh.library"
+    android:versionCode="2110"
+    android:versionName="2.1.1" >
+
+    <uses-sdk
+        android:minSdkVersion="4"
+        android:targetSdkVersion="4" />
+
+    <application />
+
+</manifest>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/bundles/debug/res/values-de/values-de.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/bundles/debug/res/values-de/values-de.xml	(revision )
+++ PullToRefresh/build/intermediates/bundles/debug/res/values-de/values-de.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="pull_to_refresh_pull_label">Ziehen zum Aktualisieren…</string>
+    <string name="pull_to_refresh_refreshing_label">Laden…</string>
+    <string name="pull_to_refresh_release_label">Loslassen zum Aktualisieren…</string>
+</resources>
\ No newline at end of file
Index: PullToRefresh/build/generated/source/r/release/com/handmark/pulltorefresh/library/R.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/generated/source/r/release/com/handmark/pulltorefresh/library/R.java	(revision )
+++ PullToRefresh/build/generated/source/r/release/com/handmark/pulltorefresh/library/R.java	(revision )
@@ -0,0 +1,453 @@
+/* AUTO-GENERATED FILE.  DO NOT MODIFY.
+ *
+ * This class was automatically generated by the
+ * aapt tool from the resource data it found.  It
+ * should not be modified by hand.
+ */
+
+package com.handmark.pulltorefresh.library;
+
+public final class R {
+    public static final class anim {
+        public static int slide_in_from_bottom=0x7f040000;
+        public static int slide_in_from_top=0x7f040001;
+        public static int slide_out_to_bottom=0x7f040002;
+        public static int slide_out_to_top=0x7f040003;
+    }
+    public static final class attr {
+        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+         */
+        public static int ptrAdapterViewBackground=0x7f010010;
+        /** <p>Must be one or more (separated by '|') of the following constant values.</p>
+<table>
+<colgroup align="left" />
+<colgroup align="left" />
+<colgroup align="left" />
+<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
+<tr><td><code>rotate</code></td><td>0x0</td><td></td></tr>
+<tr><td><code>flip</code></td><td>0x1</td><td></td></tr>
+</table>
+         */
+        public static int ptrAnimationStyle=0x7f01000c;
+        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+         */
+        public static int ptrDrawable=0x7f010006;
+        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+         */
+        public static int ptrDrawableBottom=0x7f010012;
+        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+         */
+        public static int ptrDrawableEnd=0x7f010008;
+        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+         */
+        public static int ptrDrawableStart=0x7f010007;
+        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+         */
+        public static int ptrDrawableTop=0x7f010011;
+        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+         */
+        public static int ptrHeaderBackground=0x7f010001;
+        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+         */
+        public static int ptrHeaderSubTextColor=0x7f010003;
+        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+         */
+        public static int ptrHeaderTextAppearance=0x7f01000a;
+        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+         */
+        public static int ptrHeaderTextColor=0x7f010002;
+        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
+         */
+        public static int ptrListViewExtrasEnabled=0x7f01000e;
+        /** <p>Must be one or more (separated by '|') of the following constant values.</p>
+<table>
+<colgroup align="left" />
+<colgroup align="left" />
+<colgroup align="left" />
+<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
+<tr><td><code>disabled</code></td><td>0x0</td><td></td></tr>
+<tr><td><code>pullFromStart</code></td><td>0x1</td><td></td></tr>
+<tr><td><code>pullFromEnd</code></td><td>0x2</td><td></td></tr>
+<tr><td><code>both</code></td><td>0x3</td><td></td></tr>
+<tr><td><code>manualOnly</code></td><td>0x4</td><td></td></tr>
+<tr><td><code>pullDownFromTop</code></td><td>0x1</td><td></td></tr>
+<tr><td><code>pullUpFromBottom</code></td><td>0x2</td><td></td></tr>
+</table>
+         */
+        public static int ptrMode=0x7f010004;
+        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
+         */
+        public static int ptrOverScroll=0x7f010009;
+        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+         */
+        public static int ptrRefreshableViewBackground=0x7f010000;
+        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
+         */
+        public static int ptrRotateDrawableWhilePulling=0x7f01000f;
+        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
+         */
+        public static int ptrScrollingWhileRefreshingEnabled=0x7f01000d;
+        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
+         */
+        public static int ptrShowIndicator=0x7f010005;
+        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+         */
+        public static int ptrSubHeaderTextAppearance=0x7f01000b;
+    }
+    public static final class dimen {
+        public static int header_footer_left_right_padding=0x7f070000;
+        public static int header_footer_top_bottom_padding=0x7f070001;
+        public static int indicator_corner_radius=0x7f070002;
+        public static int indicator_internal_padding=0x7f070003;
+        public static int indicator_right_padding=0x7f070004;
+    }
+    public static final class drawable {
+        public static int default_ptr_flip=0x7f020000;
+        public static int default_ptr_rotate=0x7f020001;
+        public static int indicator_arrow=0x7f020002;
+        public static int indicator_bg_bottom=0x7f020003;
+        public static int indicator_bg_top=0x7f020004;
+    }
+    public static final class id {
+        public static int both=0x7f060003;
+        public static int disabled=0x7f060000;
+        public static int fl_inner=0x7f06000c;
+        public static int flip=0x7f060008;
+        public static int gridview=0x7f060009;
+        public static int manualOnly=0x7f060004;
+        public static int pullDownFromTop=0x7f060005;
+        public static int pullFromEnd=0x7f060002;
+        public static int pullFromStart=0x7f060001;
+        public static int pullUpFromBottom=0x7f060006;
+        public static int pull_to_refresh_image=0x7f06000d;
+        public static int pull_to_refresh_progress=0x7f06000e;
+        public static int pull_to_refresh_sub_text=0x7f060010;
+        public static int pull_to_refresh_text=0x7f06000f;
+        public static int rotate=0x7f060007;
+        public static int scrollview=0x7f06000a;
+        public static int webview=0x7f06000b;
+    }
+    public static final class layout {
+        public static int pull_to_refresh_header_horizontal=0x7f030000;
+        public static int pull_to_refresh_header_vertical=0x7f030001;
+    }
+    public static final class string {
+        public static int pull_to_refresh_from_bottom_pull_label=0x7f050003;
+        public static int pull_to_refresh_from_bottom_refreshing_label=0x7f050004;
+        public static int pull_to_refresh_from_bottom_release_label=0x7f050005;
+        public static int pull_to_refresh_pull_label=0x7f050000;
+        public static int pull_to_refresh_refreshing_label=0x7f050001;
+        public static int pull_to_refresh_release_label=0x7f050002;
+    }
+    public static final class styleable {
+        /** Attributes that can be used with a PullToRefresh.
+           <p>Includes the following attributes:</p>
+           <table>
+           <colgroup align="left" />
+           <colgroup align="left" />
+           <tr><th>Attribute</th><th>Description</th></tr>
+           <tr><td><code>{@link #PullToRefresh_ptrAdapterViewBackground com.handmark.pulltorefresh.library:ptrAdapterViewBackground}</code></td><td></td></tr>
+           <tr><td><code>{@link #PullToRefresh_ptrAnimationStyle com.handmark.pulltorefresh.library:ptrAnimationStyle}</code></td><td></td></tr>
+           <tr><td><code>{@link #PullToRefresh_ptrDrawable com.handmark.pulltorefresh.library:ptrDrawable}</code></td><td></td></tr>
+           <tr><td><code>{@link #PullToRefresh_ptrDrawableBottom com.handmark.pulltorefresh.library:ptrDrawableBottom}</code></td><td></td></tr>
+           <tr><td><code>{@link #PullToRefresh_ptrDrawableEnd com.handmark.pulltorefresh.library:ptrDrawableEnd}</code></td><td></td></tr>
+           <tr><td><code>{@link #PullToRefresh_ptrDrawableStart com.handmark.pulltorefresh.library:ptrDrawableStart}</code></td><td></td></tr>
+           <tr><td><code>{@link #PullToRefresh_ptrDrawableTop com.handmark.pulltorefresh.library:ptrDrawableTop}</code></td><td></td></tr>
+           <tr><td><code>{@link #PullToRefresh_ptrHeaderBackground com.handmark.pulltorefresh.library:ptrHeaderBackground}</code></td><td></td></tr>
+           <tr><td><code>{@link #PullToRefresh_ptrHeaderSubTextColor com.handmark.pulltorefresh.library:ptrHeaderSubTextColor}</code></td><td></td></tr>
+           <tr><td><code>{@link #PullToRefresh_ptrHeaderTextAppearance com.handmark.pulltorefresh.library:ptrHeaderTextAppearance}</code></td><td></td></tr>
+           <tr><td><code>{@link #PullToRefresh_ptrHeaderTextColor com.handmark.pulltorefresh.library:ptrHeaderTextColor}</code></td><td></td></tr>
+           <tr><td><code>{@link #PullToRefresh_ptrListViewExtrasEnabled com.handmark.pulltorefresh.library:ptrListViewExtrasEnabled}</code></td><td></td></tr>
+           <tr><td><code>{@link #PullToRefresh_ptrMode com.handmark.pulltorefresh.library:ptrMode}</code></td><td></td></tr>
+           <tr><td><code>{@link #PullToRefresh_ptrOverScroll com.handmark.pulltorefresh.library:ptrOverScroll}</code></td><td></td></tr>
+           <tr><td><code>{@link #PullToRefresh_ptrRefreshableViewBackground com.handmark.pulltorefresh.library:ptrRefreshableViewBackground}</code></td><td></td></tr>
+           <tr><td><code>{@link #PullToRefresh_ptrRotateDrawableWhilePulling com.handmark.pulltorefresh.library:ptrRotateDrawableWhilePulling}</code></td><td></td></tr>
+           <tr><td><code>{@link #PullToRefresh_ptrScrollingWhileRefreshingEnabled com.handmark.pulltorefresh.library:ptrScrollingWhileRefreshingEnabled}</code></td><td></td></tr>
+           <tr><td><code>{@link #PullToRefresh_ptrShowIndicator com.handmark.pulltorefresh.library:ptrShowIndicator}</code></td><td></td></tr>
+           <tr><td><code>{@link #PullToRefresh_ptrSubHeaderTextAppearance com.handmark.pulltorefresh.library:ptrSubHeaderTextAppearance}</code></td><td></td></tr>
+           </table>
+           @see #PullToRefresh_ptrAdapterViewBackground
+           @see #PullToRefresh_ptrAnimationStyle
+           @see #PullToRefresh_ptrDrawable
+           @see #PullToRefresh_ptrDrawableBottom
+           @see #PullToRefresh_ptrDrawableEnd
+           @see #PullToRefresh_ptrDrawableStart
+           @see #PullToRefresh_ptrDrawableTop
+           @see #PullToRefresh_ptrHeaderBackground
+           @see #PullToRefresh_ptrHeaderSubTextColor
+           @see #PullToRefresh_ptrHeaderTextAppearance
+           @see #PullToRefresh_ptrHeaderTextColor
+           @see #PullToRefresh_ptrListViewExtrasEnabled
+           @see #PullToRefresh_ptrMode
+           @see #PullToRefresh_ptrOverScroll
+           @see #PullToRefresh_ptrRefreshableViewBackground
+           @see #PullToRefresh_ptrRotateDrawableWhilePulling
+           @see #PullToRefresh_ptrScrollingWhileRefreshingEnabled
+           @see #PullToRefresh_ptrShowIndicator
+           @see #PullToRefresh_ptrSubHeaderTextAppearance
+         */
+        public static final int[] PullToRefresh = {
+            0x7f010000, 0x7f010001, 0x7f010002, 0x7f010003,
+            0x7f010004, 0x7f010005, 0x7f010006, 0x7f010007,
+            0x7f010008, 0x7f010009, 0x7f01000a, 0x7f01000b,
+            0x7f01000c, 0x7f01000d, 0x7f01000e, 0x7f01000f,
+            0x7f010010, 0x7f010011, 0x7f010012
+        };
+        /**
+          <p>This symbol is the offset where the {@link com.handmark.pulltorefresh.library.R.attr#ptrAdapterViewBackground}
+          attribute's value can be found in the {@link #PullToRefresh} array.
+
+
+          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+          @attr name com.handmark.pulltorefresh.library:ptrAdapterViewBackground
+        */
+        public static final int PullToRefresh_ptrAdapterViewBackground = 16;
+        /**
+          <p>This symbol is the offset where the {@link com.handmark.pulltorefresh.library.R.attr#ptrAnimationStyle}
+          attribute's value can be found in the {@link #PullToRefresh} array.
+
+
+          <p>Must be one or more (separated by '|') of the following constant values.</p>
+<table>
+<colgroup align="left" />
+<colgroup align="left" />
+<colgroup align="left" />
+<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
+<tr><td><code>rotate</code></td><td>0x0</td><td></td></tr>
+<tr><td><code>flip</code></td><td>0x1</td><td></td></tr>
+</table>
+          @attr name com.handmark.pulltorefresh.library:ptrAnimationStyle
+        */
+        public static final int PullToRefresh_ptrAnimationStyle = 12;
+        /**
+          <p>This symbol is the offset where the {@link com.handmark.pulltorefresh.library.R.attr#ptrDrawable}
+          attribute's value can be found in the {@link #PullToRefresh} array.
+
+
+          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+          @attr name com.handmark.pulltorefresh.library:ptrDrawable
+        */
+        public static final int PullToRefresh_ptrDrawable = 6;
+        /**
+          <p>This symbol is the offset where the {@link com.handmark.pulltorefresh.library.R.attr#ptrDrawableBottom}
+          attribute's value can be found in the {@link #PullToRefresh} array.
+
+
+          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+          @attr name com.handmark.pulltorefresh.library:ptrDrawableBottom
+        */
+        public static final int PullToRefresh_ptrDrawableBottom = 18;
+        /**
+          <p>This symbol is the offset where the {@link com.handmark.pulltorefresh.library.R.attr#ptrDrawableEnd}
+          attribute's value can be found in the {@link #PullToRefresh} array.
+
+
+          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+          @attr name com.handmark.pulltorefresh.library:ptrDrawableEnd
+        */
+        public static final int PullToRefresh_ptrDrawableEnd = 8;
+        /**
+          <p>This symbol is the offset where the {@link com.handmark.pulltorefresh.library.R.attr#ptrDrawableStart}
+          attribute's value can be found in the {@link #PullToRefresh} array.
+
+
+          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+          @attr name com.handmark.pulltorefresh.library:ptrDrawableStart
+        */
+        public static final int PullToRefresh_ptrDrawableStart = 7;
+        /**
+          <p>This symbol is the offset where the {@link com.handmark.pulltorefresh.library.R.attr#ptrDrawableTop}
+          attribute's value can be found in the {@link #PullToRefresh} array.
+
+
+          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+          @attr name com.handmark.pulltorefresh.library:ptrDrawableTop
+        */
+        public static final int PullToRefresh_ptrDrawableTop = 17;
+        /**
+          <p>This symbol is the offset where the {@link com.handmark.pulltorefresh.library.R.attr#ptrHeaderBackground}
+          attribute's value can be found in the {@link #PullToRefresh} array.
+
+
+          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+          @attr name com.handmark.pulltorefresh.library:ptrHeaderBackground
+        */
+        public static final int PullToRefresh_ptrHeaderBackground = 1;
+        /**
+          <p>This symbol is the offset where the {@link com.handmark.pulltorefresh.library.R.attr#ptrHeaderSubTextColor}
+          attribute's value can be found in the {@link #PullToRefresh} array.
+
+
+          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+          @attr name com.handmark.pulltorefresh.library:ptrHeaderSubTextColor
+        */
+        public static final int PullToRefresh_ptrHeaderSubTextColor = 3;
+        /**
+          <p>This symbol is the offset where the {@link com.handmark.pulltorefresh.library.R.attr#ptrHeaderTextAppearance}
+          attribute's value can be found in the {@link #PullToRefresh} array.
+
+
+          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+          @attr name com.handmark.pulltorefresh.library:ptrHeaderTextAppearance
+        */
+        public static final int PullToRefresh_ptrHeaderTextAppearance = 10;
+        /**
+          <p>This symbol is the offset where the {@link com.handmark.pulltorefresh.library.R.attr#ptrHeaderTextColor}
+          attribute's value can be found in the {@link #PullToRefresh} array.
+
+
+          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+          @attr name com.handmark.pulltorefresh.library:ptrHeaderTextColor
+        */
+        public static final int PullToRefresh_ptrHeaderTextColor = 2;
+        /**
+          <p>This symbol is the offset where the {@link com.handmark.pulltorefresh.library.R.attr#ptrListViewExtrasEnabled}
+          attribute's value can be found in the {@link #PullToRefresh} array.
+
+
+          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
+          @attr name com.handmark.pulltorefresh.library:ptrListViewExtrasEnabled
+        */
+        public static final int PullToRefresh_ptrListViewExtrasEnabled = 14;
+        /**
+          <p>This symbol is the offset where the {@link com.handmark.pulltorefresh.library.R.attr#ptrMode}
+          attribute's value can be found in the {@link #PullToRefresh} array.
+
+
+          <p>Must be one or more (separated by '|') of the following constant values.</p>
+<table>
+<colgroup align="left" />
+<colgroup align="left" />
+<colgroup align="left" />
+<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
+<tr><td><code>disabled</code></td><td>0x0</td><td></td></tr>
+<tr><td><code>pullFromStart</code></td><td>0x1</td><td></td></tr>
+<tr><td><code>pullFromEnd</code></td><td>0x2</td><td></td></tr>
+<tr><td><code>both</code></td><td>0x3</td><td></td></tr>
+<tr><td><code>manualOnly</code></td><td>0x4</td><td></td></tr>
+<tr><td><code>pullDownFromTop</code></td><td>0x1</td><td></td></tr>
+<tr><td><code>pullUpFromBottom</code></td><td>0x2</td><td></td></tr>
+</table>
+          @attr name com.handmark.pulltorefresh.library:ptrMode
+        */
+        public static final int PullToRefresh_ptrMode = 4;
+        /**
+          <p>This symbol is the offset where the {@link com.handmark.pulltorefresh.library.R.attr#ptrOverScroll}
+          attribute's value can be found in the {@link #PullToRefresh} array.
+
+
+          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
+          @attr name com.handmark.pulltorefresh.library:ptrOverScroll
+        */
+        public static final int PullToRefresh_ptrOverScroll = 9;
+        /**
+          <p>This symbol is the offset where the {@link com.handmark.pulltorefresh.library.R.attr#ptrRefreshableViewBackground}
+          attribute's value can be found in the {@link #PullToRefresh} array.
+
+
+          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+          @attr name com.handmark.pulltorefresh.library:ptrRefreshableViewBackground
+        */
+        public static final int PullToRefresh_ptrRefreshableViewBackground = 0;
+        /**
+          <p>This symbol is the offset where the {@link com.handmark.pulltorefresh.library.R.attr#ptrRotateDrawableWhilePulling}
+          attribute's value can be found in the {@link #PullToRefresh} array.
+
+
+          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
+          @attr name com.handmark.pulltorefresh.library:ptrRotateDrawableWhilePulling
+        */
+        public static final int PullToRefresh_ptrRotateDrawableWhilePulling = 15;
+        /**
+          <p>This symbol is the offset where the {@link com.handmark.pulltorefresh.library.R.attr#ptrScrollingWhileRefreshingEnabled}
+          attribute's value can be found in the {@link #PullToRefresh} array.
+
+
+          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
+          @attr name com.handmark.pulltorefresh.library:ptrScrollingWhileRefreshingEnabled
+        */
+        public static final int PullToRefresh_ptrScrollingWhileRefreshingEnabled = 13;
+        /**
+          <p>This symbol is the offset where the {@link com.handmark.pulltorefresh.library.R.attr#ptrShowIndicator}
+          attribute's value can be found in the {@link #PullToRefresh} array.
+
+
+          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
+          @attr name com.handmark.pulltorefresh.library:ptrShowIndicator
+        */
+        public static final int PullToRefresh_ptrShowIndicator = 5;
+        /**
+          <p>This symbol is the offset where the {@link com.handmark.pulltorefresh.library.R.attr#ptrSubHeaderTextAppearance}
+          attribute's value can be found in the {@link #PullToRefresh} array.
+
+
+          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+          @attr name com.handmark.pulltorefresh.library:ptrSubHeaderTextAppearance
+        */
+        public static final int PullToRefresh_ptrSubHeaderTextAppearance = 11;
+    };
+}
Index: PullToRefresh/build/intermediates/res/merged/androidTest/debug/values-pt-rBR/values-pt-rBR.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/res/merged/androidTest/debug/values-pt-rBR/values-pt-rBR.xml	(revision )
+++ PullToRefresh/build/intermediates/res/merged/androidTest/debug/values-pt-rBR/values-pt-rBR.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="pull_to_refresh_pull_label">Puxe para atualizar…</string>
+    <string name="pull_to_refresh_refreshing_label">Carregando…</string>
+    <string name="pull_to_refresh_release_label">Libere para atualizar…</string>
+</resources>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/bundles/debug/res/values-ja/values-ja.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/bundles/debug/res/values-ja/values-ja.xml	(revision )
+++ PullToRefresh/build/intermediates/bundles/debug/res/values-ja/values-ja.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="pull_to_refresh_pull_label">画面を引っ張って…</string>
+    <string name="pull_to_refresh_refreshing_label">読み込み中…</string>
+    <string name="pull_to_refresh_release_label">指を離して更新…</string>
+</resources>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/bundles/release/res/values-ar/values-ar.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/bundles/release/res/values-ar/values-ar.xml	(revision )
+++ PullToRefresh/build/intermediates/bundles/release/res/values-ar/values-ar.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="pull_to_refresh_pull_label">اسحب للتحديث…</string>
+    <string name="pull_to_refresh_refreshing_label">تحميل…</string>
+    <string name="pull_to_refresh_release_label">اترك للتحديث…</string>
+</resources>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/blame/res/androidTest/debug/single/drawable-hdpi-v4.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/blame/res/androidTest/debug/single/drawable-hdpi-v4.json	(revision )
+++ PullToRefresh/build/intermediates/blame/res/androidTest/debug/single/drawable-hdpi-v4.json	(revision )
@@ -0,0 +1,14 @@
+[
+    {
+        "merged": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\res\\merged\\androidTest\\debug\\drawable-hdpi-v4\\default_ptr_flip.png",
+        "source": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\drawable-hdpi-v4\\default_ptr_flip.png"
+    },
+    {
+        "merged": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\res\\merged\\androidTest\\debug\\drawable-hdpi-v4\\indicator_arrow.png",
+        "source": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\drawable-hdpi-v4\\indicator_arrow.png"
+    },
+    {
+        "merged": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\res\\merged\\androidTest\\debug\\drawable-hdpi-v4\\default_ptr_rotate.png",
+        "source": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\drawable-hdpi-v4\\default_ptr_rotate.png"
+    }
+]
\ No newline at end of file
Index: PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/PullToRefreshAdapterViewBase.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/PullToRefreshAdapterViewBase.java	(revision )
+++ PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/PullToRefreshAdapterViewBase.java	(revision )
@@ -0,0 +1,475 @@
+/*******************************************************************************
+ * Copyright 2011, 2012 Chris Banes.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ *******************************************************************************/
+package com.handmark.pulltorefresh.library;
+
+import android.content.Context;
+import android.content.res.TypedArray;
+import android.util.AttributeSet;
+import android.util.Log;
+import android.view.Gravity;
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.ViewParent;
+import android.widget.AbsListView;
+import android.widget.AbsListView.OnScrollListener;
+import android.widget.Adapter;
+import android.widget.AdapterView;
+import android.widget.AdapterView.OnItemClickListener;
+import android.widget.FrameLayout;
+import android.widget.LinearLayout;
+import android.widget.ListAdapter;
+
+import com.handmark.pulltorefresh.library.internal.EmptyViewMethodAccessor;
+import com.handmark.pulltorefresh.library.internal.IndicatorLayout;
+
+public abstract class PullToRefreshAdapterViewBase<T extends AbsListView> extends PullToRefreshBase<T> implements
+		OnScrollListener {
+
+	private static FrameLayout.LayoutParams convertEmptyViewLayoutParams(ViewGroup.LayoutParams lp) {
+		FrameLayout.LayoutParams newLp = null;
+
+		if (null != lp) {
+			newLp = new FrameLayout.LayoutParams(lp);
+
+			if (lp instanceof LinearLayout.LayoutParams) {
+				newLp.gravity = ((LinearLayout.LayoutParams) lp).gravity;
+			} else {
+				newLp.gravity = Gravity.CENTER;
+			}
+		}
+
+		return newLp;
+	}
+
+	private boolean mLastItemVisible;
+	private OnScrollListener mOnScrollListener;
+	private OnLastItemVisibleListener mOnLastItemVisibleListener;
+	private View mEmptyView;
+
+	private IndicatorLayout mIndicatorIvTop;
+	private IndicatorLayout mIndicatorIvBottom;
+
+	private boolean mShowIndicator;
+	private boolean mScrollEmptyView = true;
+
+	public PullToRefreshAdapterViewBase(Context context) {
+		super(context);
+		mRefreshableView.setOnScrollListener(this);
+	}
+
+	public PullToRefreshAdapterViewBase(Context context, AttributeSet attrs) {
+		super(context, attrs);
+		mRefreshableView.setOnScrollListener(this);
+	}
+
+	public PullToRefreshAdapterViewBase(Context context, Mode mode) {
+		super(context, mode);
+		mRefreshableView.setOnScrollListener(this);
+	}
+
+	public PullToRefreshAdapterViewBase(Context context, Mode mode, AnimationStyle animStyle) {
+		super(context, mode, animStyle);
+		mRefreshableView.setOnScrollListener(this);
+	}
+
+	/**
+	 * Gets whether an indicator graphic should be displayed when the View is in
+	 * a state where a Pull-to-Refresh can happen. An example of this state is
+	 * when the Adapter View is scrolled to the top and the mode is set to
+	 * {@link Mode#PULL_FROM_START}. The default value is <var>true</var> if
+	 * {@link PullToRefreshBase#isPullToRefreshOverScrollEnabled()
+	 * isPullToRefreshOverScrollEnabled()} returns false.
+	 * 
+	 * @return true if the indicators will be shown
+	 */
+	public boolean getShowIndicator() {
+		return mShowIndicator;
+	}
+
+	public final void onScroll(final AbsListView view, final int firstVisibleItem, final int visibleItemCount,
+			final int totalItemCount) {
+
+		if (DEBUG) {
+			Log.d(LOG_TAG, "First Visible: " + firstVisibleItem + ". Visible Count: " + visibleItemCount
+					+ ". Total Items:" + totalItemCount);
+		}
+
+		/**
+		 * Set whether the Last Item is Visible. lastVisibleItemIndex is a
+		 * zero-based index, so we minus one totalItemCount to check
+		 */
+		if (null != mOnLastItemVisibleListener) {
+			mLastItemVisible = (totalItemCount > 0) && (firstVisibleItem + visibleItemCount >= totalItemCount - 1);
+		}
+
+		// If we're showing the indicator, check positions...
+		if (getShowIndicatorInternal()) {
+			updateIndicatorViewsVisibility();
+		}
+
+		// Finally call OnScrollListener if we have one
+		if (null != mOnScrollListener) {
+			mOnScrollListener.onScroll(view, firstVisibleItem, visibleItemCount, totalItemCount);
+		}
+	}
+
+	public final void onScrollStateChanged(final AbsListView view, final int state) {
+		/**
+		 * Check that the scrolling has stopped, and that the last item is
+		 * visible.
+		 */
+		if (state == OnScrollListener.SCROLL_STATE_IDLE && null != mOnLastItemVisibleListener && mLastItemVisible) {
+			mOnLastItemVisibleListener.onLastItemVisible();
+		}
+
+		if (null != mOnScrollListener) {
+			mOnScrollListener.onScrollStateChanged(view, state);
+		}
+	}
+
+	/**
+	 * Pass-through method for {@link PullToRefreshBase#getRefreshableView()
+	 * getRefreshableView()}.
+	 * {@link AdapterView#setAdapter(android.widget.Adapter)}
+	 * setAdapter(adapter)}. This is just for convenience!
+	 * 
+	 * @param adapter - Adapter to set
+	 */
+	public void setAdapter(ListAdapter adapter) {
+		((AdapterView<ListAdapter>) mRefreshableView).setAdapter(adapter);
+	}
+
+	/**
+	 * Sets the Empty View to be used by the Adapter View.
+	 * <p/>
+	 * We need it handle it ourselves so that we can Pull-to-Refresh when the
+	 * Empty View is shown.
+	 * <p/>
+	 * Please note, you do <strong>not</strong> usually need to call this method
+	 * yourself. Calling setEmptyView on the AdapterView will automatically call
+	 * this method and set everything up. This includes when the Android
+	 * Framework automatically sets the Empty View based on it's ID.
+	 * 
+	 * @param newEmptyView - Empty View to be used
+	 */
+	public final void setEmptyView(View newEmptyView) {
+		FrameLayout refreshableViewWrapper = getRefreshableViewWrapper();
+
+		if (null != newEmptyView) {
+			// New view needs to be clickable so that Android recognizes it as a
+			// target for Touch Events
+			newEmptyView.setClickable(true);
+
+			ViewParent newEmptyViewParent = newEmptyView.getParent();
+			if (null != newEmptyViewParent && newEmptyViewParent instanceof ViewGroup) {
+				((ViewGroup) newEmptyViewParent).removeView(newEmptyView);
+			}
+
+			// We need to convert any LayoutParams so that it works in our
+			// FrameLayout
+			FrameLayout.LayoutParams lp = convertEmptyViewLayoutParams(newEmptyView.getLayoutParams());
+			if (null != lp) {
+				refreshableViewWrapper.addView(newEmptyView, lp);
+			} else {
+				refreshableViewWrapper.addView(newEmptyView);
+			}
+		}
+
+		if (mRefreshableView instanceof EmptyViewMethodAccessor) {
+			((EmptyViewMethodAccessor) mRefreshableView).setEmptyViewInternal(newEmptyView);
+		} else {
+			mRefreshableView.setEmptyView(newEmptyView);
+		}
+		mEmptyView = newEmptyView;
+	}
+
+	/**
+	 * Pass-through method for {@link PullToRefreshBase#getRefreshableView()
+	 * getRefreshableView()}.
+	 * {@link AdapterView#setOnItemClickListener(OnItemClickListener)
+	 * setOnItemClickListener(listener)}. This is just for convenience!
+	 * 
+	 * @param listener - OnItemClickListener to use
+	 */
+	public void setOnItemClickListener(OnItemClickListener listener) {
+		mRefreshableView.setOnItemClickListener(listener);
+	}
+
+	public final void setOnLastItemVisibleListener(OnLastItemVisibleListener listener) {
+		mOnLastItemVisibleListener = listener;
+	}
+
+	public final void setOnScrollListener(OnScrollListener listener) {
+		mOnScrollListener = listener;
+	}
+
+	public final void setScrollEmptyView(boolean doScroll) {
+		mScrollEmptyView = doScroll;
+	}
+
+	/**
+	 * Sets whether an indicator graphic should be displayed when the View is in
+	 * a state where a Pull-to-Refresh can happen. An example of this state is
+	 * when the Adapter View is scrolled to the top and the mode is set to
+	 * {@link Mode#PULL_FROM_START}
+	 * 
+	 * @param showIndicator - true if the indicators should be shown.
+	 */
+	public void setShowIndicator(boolean showIndicator) {
+		mShowIndicator = showIndicator;
+
+		if (getShowIndicatorInternal()) {
+			// If we're set to Show Indicator, add/update them
+			addIndicatorViews();
+		} else {
+			// If not, then remove then
+			removeIndicatorViews();
+		}
+	}
+
+	;
+
+	@Override
+	protected void onPullToRefresh() {
+		super.onPullToRefresh();
+
+		if (getShowIndicatorInternal()) {
+			switch (getCurrentMode()) {
+				case PULL_FROM_END:
+					mIndicatorIvBottom.pullToRefresh();
+					break;
+				case PULL_FROM_START:
+					mIndicatorIvTop.pullToRefresh();
+					break;
+				default:
+					// NO-OP
+					break;
+			}
+		}
+	}
+
+	protected void onRefreshing(boolean doScroll) {
+		super.onRefreshing(doScroll);
+
+		if (getShowIndicatorInternal()) {
+			updateIndicatorViewsVisibility();
+		}
+	}
+
+	@Override
+	protected void onReleaseToRefresh() {
+		super.onReleaseToRefresh();
+
+		if (getShowIndicatorInternal()) {
+			switch (getCurrentMode()) {
+				case PULL_FROM_END:
+					mIndicatorIvBottom.releaseToRefresh();
+					break;
+				case PULL_FROM_START:
+					mIndicatorIvTop.releaseToRefresh();
+					break;
+				default:
+					// NO-OP
+					break;
+			}
+		}
+	}
+
+	@Override
+	protected void onReset() {
+		super.onReset();
+
+		if (getShowIndicatorInternal()) {
+			updateIndicatorViewsVisibility();
+		}
+	}
+
+	@Override
+	protected void handleStyledAttributes(TypedArray a) {
+		// Set Show Indicator to the XML value, or default value
+		mShowIndicator = a.getBoolean(R.styleable.PullToRefresh_ptrShowIndicator, !isPullToRefreshOverScrollEnabled());
+	}
+
+	protected boolean isReadyForPullStart() {
+		return isFirstItemVisible();
+	}
+
+	protected boolean isReadyForPullEnd() {
+		return isLastItemVisible();
+	}
+
+	@Override
+	protected void onScrollChanged(int l, int t, int oldl, int oldt) {
+		super.onScrollChanged(l, t, oldl, oldt);
+		if (null != mEmptyView && !mScrollEmptyView) {
+			mEmptyView.scrollTo(-l, -t);
+		}
+	}
+
+	@Override
+	protected void updateUIForMode() {
+		super.updateUIForMode();
+
+		// Check Indicator Views consistent with new Mode
+		if (getShowIndicatorInternal()) {
+			addIndicatorViews();
+		} else {
+			removeIndicatorViews();
+		}
+	}
+
+	private void addIndicatorViews() {
+		Mode mode = getMode();
+		FrameLayout refreshableViewWrapper = getRefreshableViewWrapper();
+
+		if (mode.showHeaderLoadingLayout() && null == mIndicatorIvTop) {
+			// If the mode can pull down, and we don't have one set already
+			mIndicatorIvTop = new IndicatorLayout(getContext(), Mode.PULL_FROM_START);
+			FrameLayout.LayoutParams params = new FrameLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT,
+					ViewGroup.LayoutParams.WRAP_CONTENT);
+			params.rightMargin = getResources().getDimensionPixelSize(R.dimen.indicator_right_padding);
+			params.gravity = Gravity.TOP | Gravity.RIGHT;
+			refreshableViewWrapper.addView(mIndicatorIvTop, params);
+
+		} else if (!mode.showHeaderLoadingLayout() && null != mIndicatorIvTop) {
+			// If we can't pull down, but have a View then remove it
+			refreshableViewWrapper.removeView(mIndicatorIvTop);
+			mIndicatorIvTop = null;
+		}
+
+		if (mode.showFooterLoadingLayout() && null == mIndicatorIvBottom) {
+			// If the mode can pull down, and we don't have one set already
+			mIndicatorIvBottom = new IndicatorLayout(getContext(), Mode.PULL_FROM_END);
+			FrameLayout.LayoutParams params = new FrameLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT,
+					ViewGroup.LayoutParams.WRAP_CONTENT);
+			params.rightMargin = getResources().getDimensionPixelSize(R.dimen.indicator_right_padding);
+			params.gravity = Gravity.BOTTOM | Gravity.RIGHT;
+			refreshableViewWrapper.addView(mIndicatorIvBottom, params);
+
+		} else if (!mode.showFooterLoadingLayout() && null != mIndicatorIvBottom) {
+			// If we can't pull down, but have a View then remove it
+			refreshableViewWrapper.removeView(mIndicatorIvBottom);
+			mIndicatorIvBottom = null;
+		}
+	}
+
+	private boolean getShowIndicatorInternal() {
+		return mShowIndicator && isPullToRefreshEnabled();
+	}
+
+	private boolean isFirstItemVisible() {
+		final Adapter adapter = mRefreshableView.getAdapter();
+
+		if (null == adapter || adapter.isEmpty()) {
+			if (DEBUG) {
+				Log.d(LOG_TAG, "isFirstItemVisible. Empty View.");
+			}
+			return true;
+
+		} else {
+
+			/**
+			 * This check should really just be:
+			 * mRefreshableView.getFirstVisiblePosition() == 0, but PtRListView
+			 * internally use a HeaderView which messes the positions up. For
+			 * now we'll just add one to account for it and rely on the inner
+			 * condition which checks getTop().
+			 */
+			if (mRefreshableView.getFirstVisiblePosition() <= 1) {
+				final View firstVisibleChild = mRefreshableView.getChildAt(0);
+				if (firstVisibleChild != null) {
+					return firstVisibleChild.getTop() >= mRefreshableView.getTop();
+				}
+			}
+		}
+
+		return false;
+	}
+
+	private boolean isLastItemVisible() {
+		final Adapter adapter = mRefreshableView.getAdapter();
+
+		if (null == adapter || adapter.isEmpty()) {
+			if (DEBUG) {
+				Log.d(LOG_TAG, "isLastItemVisible. Empty View.");
+			}
+			return true;
+		} else {
+			final int lastItemPosition = mRefreshableView.getCount() - 1;
+			final int lastVisiblePosition = mRefreshableView.getLastVisiblePosition();
+
+			if (DEBUG) {
+				Log.d(LOG_TAG, "isLastItemVisible. Last Item Position: " + lastItemPosition + " Last Visible Pos: "
+						+ lastVisiblePosition);
+			}
+
+			/**
+			 * This check should really just be: lastVisiblePosition ==
+			 * lastItemPosition, but PtRListView internally uses a FooterView
+			 * which messes the positions up. For me we'll just subtract one to
+			 * account for it and rely on the inner condition which checks
+			 * getBottom().
+			 */
+			if (lastVisiblePosition >= lastItemPosition - 1) {
+				final int childIndex = lastVisiblePosition - mRefreshableView.getFirstVisiblePosition();
+				final View lastVisibleChild = mRefreshableView.getChildAt(childIndex);
+				if (lastVisibleChild != null) {
+					return lastVisibleChild.getBottom() <= mRefreshableView.getBottom();
+				}
+			}
+		}
+
+		return false;
+	}
+
+	private void removeIndicatorViews() {
+		if (null != mIndicatorIvTop) {
+			getRefreshableViewWrapper().removeView(mIndicatorIvTop);
+			mIndicatorIvTop = null;
+		}
+
+		if (null != mIndicatorIvBottom) {
+			getRefreshableViewWrapper().removeView(mIndicatorIvBottom);
+			mIndicatorIvBottom = null;
+		}
+	}
+
+	private void updateIndicatorViewsVisibility() {
+		if (null != mIndicatorIvTop) {
+			if (!isRefreshing() && isReadyForPullStart()) {
+				if (!mIndicatorIvTop.isVisible()) {
+					mIndicatorIvTop.show();
+				}
+			} else {
+				if (mIndicatorIvTop.isVisible()) {
+					mIndicatorIvTop.hide();
+				}
+			}
+		}
+
+		if (null != mIndicatorIvBottom) {
+			if (!isRefreshing() && isReadyForPullEnd()) {
+				if (!mIndicatorIvBottom.isVisible()) {
+					mIndicatorIvBottom.show();
+				}
+			} else {
+				if (mIndicatorIvBottom.isVisible()) {
+					mIndicatorIvBottom.hide();
+				}
+			}
+		}
+	}
+}
Index: app/src/main/java/com/example/victor/weathertest3/adapter/CityListAdatper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/victor/weathertest3/adapter/CityListAdatper.java	(revision )
+++ app/src/main/java/com/example/victor/weathertest3/adapter/CityListAdatper.java	(revision )
@@ -0,0 +1,58 @@
+package com.example.victor.weathertest3.adapter;
+
+import android.content.Context;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.BaseAdapter;
+import android.widget.TextView;
+
+import com.example.victor.weathertest3.R;
+
+import java.util.List;
+
+public class CityListAdatper extends BaseAdapter{
+	
+	
+	private List<String> list;
+	private LayoutInflater mInflater;
+	
+	
+	public CityListAdatper(Context context,List<String> list) {
+		this.list = list;
+		//动态加载布局
+		mInflater = LayoutInflater.from(context);
+	}
+
+	@Override
+	public int getCount() {
+		return list.size();
+	}
+
+	@Override
+	public String getItem(int position) {
+		return list.get(position);
+	}
+
+	@Override
+	public long getItemId(int position) {
+		return position;
+	}
+
+	@Override
+	public View getView(int position, View convertView, ViewGroup parent) {
+		View rowView = null;
+		if(convertView == null){
+            //新建，加载布局
+			rowView = mInflater.inflate(R.layout.item_city_list, null);
+		}else{
+			rowView = convertView;
+		}
+
+		TextView tv_city = (TextView) rowView.findViewById(R.id.tv_city);
+		tv_city.setText(getItem(position));
+
+		return rowView;
+	}
+
+}
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/compiler.xml	(revision )
+++ .idea/compiler.xml	(revision )
@@ -0,0 +1,22 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CompilerConfiguration">
+    <resourceExtensions />
+    <wildcardResourcePatterns>
+      <entry name="!?*.java" />
+      <entry name="!?*.form" />
+      <entry name="!?*.class" />
+      <entry name="!?*.groovy" />
+      <entry name="!?*.scala" />
+      <entry name="!?*.flex" />
+      <entry name="!?*.kt" />
+      <entry name="!?*.clj" />
+      <entry name="!?*.aj" />
+    </wildcardResourcePatterns>
+    <annotationProcessing>
+      <profile default="true" name="Default" enabled="false">
+        <processorPath useClasspath="true" />
+      </profile>
+    </annotationProcessing>
+  </component>
+</project>
\ No newline at end of file
Index: PullToRefresh/src/main/res/values-ja/pull_refresh_strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/src/main/res/values-ja/pull_refresh_strings.xml	(revision )
+++ PullToRefresh/src/main/res/values-ja/pull_refresh_strings.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+  <string name="pull_to_refresh_pull_label">画面を引っ張って…</string>
+  <string name="pull_to_refresh_release_label">指を離して更新…</string>
+  <string name="pull_to_refresh_refreshing_label">読み込み中…</string>
+</resources>
Index: PullToRefresh/build/intermediates/res/merged/androidTest/debug/values-ro/values-ro.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/res/merged/androidTest/debug/values-ro/values-ro.xml	(revision )
+++ PullToRefresh/build/intermediates/res/merged/androidTest/debug/values-ro/values-ro.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="pull_to_refresh_pull_label">Trage pentru a reîmprospăta…</string>
+    <string name="pull_to_refresh_refreshing_label">Încărcare…</string>
+    <string name="pull_to_refresh_release_label">Eliberează pentru a reîmprospăta…</string>
+</resources>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/res/merged/androidTest/debug/anim/slide_out_to_top.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/res/merged/androidTest/debug/anim/slide_out_to_top.xml	(revision )
+++ PullToRefresh/build/intermediates/res/merged/androidTest/debug/anim/slide_out_to_top.xml	(revision )
@@ -0,0 +1,21 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+     Copyright (C) 2009 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+
+<translate xmlns:android="http://schemas.android.com/apk/res/android"
+    android:duration="@android:integer/config_longAnimTime"
+    android:fromYDelta="0"
+    android:toYDelta="-100%p" />
Index: PullToRefresh/build/intermediates/incremental/mergeDebugAndroidTestResources/merger.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/incremental/mergeDebugAndroidTestResources/merger.xml	(revision )
+++ PullToRefresh/build/intermediates/incremental/mergeDebugAndroidTestResources/merger.xml	(revision )
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="utf-8"?>
+<merger version="3"><dataSet config="debug$Generated" generated="true"><source path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\build\intermediates\bundles\debug\res"/></dataSet><dataSet config="main$Generated" generated="true"><source path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\androidTest\res"/><source path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\build\generated\res\rs\androidTest\debug"/><source path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\build\generated\res\resValues\androidTest\debug"/></dataSet><dataSet config="debug" generated-set="debug$Generated"><source path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\build\intermediates\bundles\debug\res"><file name="slide_in_from_bottom" path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\build\intermediates\bundles\debug\res\anim\slide_in_from_bottom.xml" qualifiers="" type="anim"/><file name="slide_in_from_top" path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\build\intermediates\bundles\debug\res\anim\slide_in_from_top.xml" qualifiers="" type="anim"/><file name="slide_out_to_bottom" path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\build\intermediates\bundles\debug\res\anim\slide_out_to_bottom.xml" qualifiers="" type="anim"/><file name="slide_out_to_top" path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\build\intermediates\bundles\debug\res\anim\slide_out_to_top.xml" qualifiers="" type="anim"/><file name="indicator_bg_bottom" path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\build\intermediates\bundles\debug\res\drawable\indicator_bg_bottom.xml" qualifiers="" type="drawable"/><file name="indicator_bg_top" path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\build\intermediates\bundles\debug\res\drawable\indicator_bg_top.xml" qualifiers="" type="drawable"/><file name="default_ptr_flip" path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\build\intermediates\bundles\debug\res\drawable-hdpi-v4\default_ptr_flip.png" qualifiers="hdpi-v4" type="drawable"/><file name="default_ptr_rotate" path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\build\intermediates\bundles\debug\res\drawable-hdpi-v4\default_ptr_rotate.png" qualifiers="hdpi-v4" type="drawable"/><file name="indicator_arrow" path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\build\intermediates\bundles\debug\res\drawable-hdpi-v4\indicator_arrow.png" qualifiers="hdpi-v4" type="drawable"/><file name="default_ptr_flip" path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\build\intermediates\bundles\debug\res\drawable-mdpi-v4\default_ptr_flip.png" qualifiers="mdpi-v4" type="drawable"/><file name="default_ptr_rotate" path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\build\intermediates\bundles\debug\res\drawable-mdpi-v4\default_ptr_rotate.png" qualifiers="mdpi-v4" type="drawable"/><file name="indicator_arrow" path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\build\intermediates\bundles\debug\res\drawable-mdpi-v4\indicator_arrow.png" qualifiers="mdpi-v4" type="drawable"/><file name="default_ptr_flip" path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\build\intermediates\bundles\debug\res\drawable-xhdpi-v4\default_ptr_flip.png" qualifiers="xhdpi-v4" type="drawable"/><file name="default_ptr_rotate" path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\build\intermediates\bundles\debug\res\drawable-xhdpi-v4\default_ptr_rotate.png" qualifiers="xhdpi-v4" type="drawable"/><file name="indicator_arrow" path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\build\intermediates\bundles\debug\res\drawable-xhdpi-v4\indicator_arrow.png" qualifiers="xhdpi-v4" type="drawable"/><file name="pull_to_refresh_header_horizontal" path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\build\intermediates\bundles\debug\res\layout\pull_to_refresh_header_horizontal.xml" qualifiers="" type="layout"/><file name="pull_to_refresh_header_vertical" path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\build\intermediates\bundles\debug\res\layout\pull_to_refresh_header_vertical.xml" qualifiers="" type="layout"/><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\build\intermediates\bundles\debug\res\values\values.xml" qualifiers=""><dimen name="indicator_corner_radius">12dp</dimen><string name="pull_to_refresh_from_bottom_pull_label">@string/pull_to_refresh_pull_label</string><dimen name="indicator_right_padding">10dp</dimen><item name="scrollview" type="id"/><declare-styleable name="PullToRefresh"><attr format="reference|color" name="ptrRefreshableViewBackground"/><attr format="reference|color" name="ptrHeaderBackground"/><attr format="reference|color" name="ptrHeaderTextColor"/><attr format="reference|color" name="ptrHeaderSubTextColor"/><attr name="ptrMode"><flag name="disabled" value="0x0"/><flag name="pullFromStart" value="0x1"/><flag name="pullFromEnd" value="0x2"/><flag name="both" value="0x3"/><flag name="manualOnly" value="0x4"/><flag name="pullDownFromTop" value="0x1"/><flag name="pullUpFromBottom" value="0x2"/></attr><attr format="reference|boolean" name="ptrShowIndicator"/><attr format="reference" name="ptrDrawable"/><attr format="reference" name="ptrDrawableStart"/><attr format="reference" name="ptrDrawableEnd"/><attr format="reference|boolean" name="ptrOverScroll"/><attr format="reference" name="ptrHeaderTextAppearance"/><attr format="reference" name="ptrSubHeaderTextAppearance"/><attr name="ptrAnimationStyle"><flag name="rotate" value="0x0"/><flag name="flip" value="0x1"/></attr><attr format="reference|boolean" name="ptrScrollingWhileRefreshingEnabled"/><attr format="reference|boolean" name="ptrListViewExtrasEnabled"/><attr format="reference|boolean" name="ptrRotateDrawableWhilePulling"/><attr format="reference|color" name="ptrAdapterViewBackground"/><attr format="reference" name="ptrDrawableTop"/><attr format="reference" name="ptrDrawableBottom"/></declare-styleable><item name="gridview" type="id"/><string name="pull_to_refresh_release_label">Release to refresh…</string><string name="pull_to_refresh_from_bottom_release_label">@string/pull_to_refresh_release_label</string><string name="pull_to_refresh_from_bottom_refreshing_label">@string/pull_to_refresh_refreshing_label</string><dimen name="header_footer_top_bottom_padding">12dp</dimen><item name="webview" type="id"/><dimen name="indicator_internal_padding">4dp</dimen><string name="pull_to_refresh_refreshing_label">Loading…</string><string name="pull_to_refresh_pull_label">Pull to refresh…</string><dimen name="header_footer_left_right_padding">24dp</dimen></file><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\build\intermediates\bundles\debug\res\values-ar\values-ar.xml" qualifiers="ar"><string name="pull_to_refresh_release_label">اترك للتحديث…</string><string name="pull_to_refresh_refreshing_label">تحميل…</string><string name="pull_to_refresh_pull_label">اسحب للتحديث…</string></file><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\build\intermediates\bundles\debug\res\values-cs\values-cs.xml" qualifiers="cs"><string name="pull_to_refresh_refreshing_label">Načítání…</string><string name="pull_to_refresh_pull_label">Tažením aktualizujete…</string><string name="pull_to_refresh_release_label">Uvolněním aktualizujete…</string></file><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\build\intermediates\bundles\debug\res\values-de\values-de.xml" qualifiers="de"><string name="pull_to_refresh_release_label">Loslassen zum Aktualisieren…</string><string name="pull_to_refresh_refreshing_label">Laden…</string><string name="pull_to_refresh_pull_label">Ziehen zum Aktualisieren…</string></file><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\build\intermediates\bundles\debug\res\values-es\values-es.xml" qualifiers="es"><string name="pull_to_refresh_refreshing_label">Cargando…</string><string name="pull_to_refresh_pull_label">Tirar para actualizar…</string><string name="pull_to_refresh_release_label">Soltar para actualizar…</string></file><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\build\intermediates\bundles\debug\res\values-fi\values-fi.xml" qualifiers="fi"><string name="pull_to_refresh_release_label">Päivitä vapauttamalla…</string><string name="pull_to_refresh_from_bottom_release_label">@string/pull_to_refresh_release_label</string><string name="pull_to_refresh_pull_label">Päivitä vetämällä alas…</string><string name="pull_to_refresh_from_bottom_pull_label">Päivitä vetämällä ylös…</string><string name="pull_to_refresh_refreshing_label">Päivitetään…</string><string name="pull_to_refresh_from_bottom_refreshing_label">@string/pull_to_refresh_refreshing_label</string></file><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\build\intermediates\bundles\debug\res\values-fr\values-fr.xml" qualifiers="fr"><string name="pull_to_refresh_refreshing_label">Chargement…</string><string name="pull_to_refresh_release_label">Relâcher pour rafraîchir…</string><string name="pull_to_refresh_pull_label">Tirez pour rafraîchir…</string></file><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\build\intermediates\bundles\debug\res\values-he\values-he.xml" qualifiers="he"><string name="pull_to_refresh_release_label">שחרר לרענון…</string><string name="pull_to_refresh_pull_label">משוך לרענון…</string><string name="pull_to_refresh_refreshing_label">טוען…</string></file><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\build\intermediates\bundles\debug\res\values-it\values-it.xml" qualifiers="it"><string name="pull_to_refresh_pull_label">Tira per aggiornare…</string><string name="pull_to_refresh_release_label">Rilascia per aggionare…</string><string name="pull_to_refresh_refreshing_label">Caricamento…</string></file><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\build\intermediates\bundles\debug\res\values-iw\values-iw.xml" qualifiers="iw"><string name="pull_to_refresh_refreshing_label">טוען…</string><string name="pull_to_refresh_release_label">שחרר לרענון…</string><string name="pull_to_refresh_pull_label">משוך לרענון…</string></file><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\build\intermediates\bundles\debug\res\values-ja\values-ja.xml" qualifiers="ja"><string name="pull_to_refresh_pull_label">画面を引っ張って…</string><string name="pull_to_refresh_refreshing_label">読み込み中…</string><string name="pull_to_refresh_release_label">指を離して更新…</string></file><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\build\intermediates\bundles\debug\res\values-ko\values-ko.xml" qualifiers="ko"><string name="pull_to_refresh_pull_label">당겨서 새로 고침…</string><string name="pull_to_refresh_refreshing_label">로드 중…</string><string name="pull_to_refresh_release_label">놓아서 새로 고침…</string></file><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\build\intermediates\bundles\debug\res\values-nl\values-nl.xml" qualifiers="nl"><string name="pull_to_refresh_pull_label">Sleep om te vernieuwen…</string><string name="pull_to_refresh_release_label">Loslaten om te vernieuwen…</string><string name="pull_to_refresh_refreshing_label">Laden…</string></file><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\build\intermediates\bundles\debug\res\values-pl\values-pl.xml" qualifiers="pl"><string name="pull_to_refresh_pull_label">Pociągnij, aby odświeżyć…</string><string name="pull_to_refresh_release_label">Puść, aby odświeżyć…</string><string name="pull_to_refresh_refreshing_label">Wczytywanie…</string></file><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\build\intermediates\bundles\debug\res\values-pt\values-pt.xml" qualifiers="pt"><string name="pull_to_refresh_pull_label">Puxe para atualizar…</string><string name="pull_to_refresh_refreshing_label">A carregar…</string><string name="pull_to_refresh_release_label">Liberação para atualizar…</string></file><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\build\intermediates\bundles\debug\res\values-pt-rBR\values-pt-rBR.xml" qualifiers="pt-rBR"><string name="pull_to_refresh_pull_label">Puxe para atualizar…</string><string name="pull_to_refresh_release_label">Libere para atualizar…</string><string name="pull_to_refresh_refreshing_label">Carregando…</string></file><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\build\intermediates\bundles\debug\res\values-ro\values-ro.xml" qualifiers="ro"><string name="pull_to_refresh_pull_label">Trage pentru a reîmprospăta…</string><string name="pull_to_refresh_refreshing_label">Încărcare…</string><string name="pull_to_refresh_release_label">Eliberează pentru a reîmprospăta…</string></file><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\build\intermediates\bundles\debug\res\values-ru\values-ru.xml" qualifiers="ru"><string name="pull_to_refresh_release_label">Отпустите для обновления…</string><string name="pull_to_refresh_refreshing_label">Загрузка…</string><string name="pull_to_refresh_pull_label">Потяните для обновления…</string></file><file path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\build\intermediates\bundles\debug\res\values-zh\values-zh.xml" qualifiers="zh"><string name="pull_to_refresh_release_label">放开以刷新…</string><string name="pull_to_refresh_pull_label">下拉刷新…</string><string name="pull_to_refresh_refreshing_label">正在载入…</string></file></source></dataSet><dataSet config="main" generated-set="main$Generated"><source path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\androidTest\res"/><source path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\build\generated\res\rs\androidTest\debug"/><source path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\build\generated\res\resValues\androidTest\debug"/></dataSet><mergedItems><configuration qualifiers=""><declare-styleable name="PullToRefresh"><attr format="reference|color" name="ptrRefreshableViewBackground"/><attr format="reference|color" name="ptrHeaderBackground"/><attr format="reference|color" name="ptrHeaderTextColor"/><attr format="reference|color" name="ptrHeaderSubTextColor"/><attr name="ptrMode"><flag name="disabled" value="0x0"/><flag name="pullFromStart" value="0x1"/><flag name="pullFromEnd" value="0x2"/><flag name="both" value="0x3"/><flag name="manualOnly" value="0x4"/><flag name="pullDownFromTop" value="0x1"/><flag name="pullUpFromBottom" value="0x2"/></attr><attr format="reference|boolean" name="ptrShowIndicator"/><attr format="reference" name="ptrDrawable"/><attr format="reference" name="ptrDrawableStart"/><attr format="reference" name="ptrDrawableEnd"/><attr format="reference|boolean" name="ptrOverScroll"/><attr format="reference" name="ptrHeaderTextAppearance"/><attr format="reference" name="ptrSubHeaderTextAppearance"/><attr name="ptrAnimationStyle"><flag name="rotate" value="0x0"/><flag name="flip" value="0x1"/></attr><attr format="reference|boolean" name="ptrScrollingWhileRefreshingEnabled"/><attr format="reference|boolean" name="ptrListViewExtrasEnabled"/><attr format="reference|boolean" name="ptrRotateDrawableWhilePulling"/><attr format="reference|color" name="ptrAdapterViewBackground"/><attr format="reference" name="ptrDrawableTop"/><attr format="reference" name="ptrDrawableBottom"/></declare-styleable></configuration></mergedItems></merger>
\ No newline at end of file
Index: .gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .gitignore	(revision )
+++ .gitignore	(revision )
@@ -0,0 +1,8 @@
+*.iml
+.gradle
+/local.properties
+/.idea/workspace.xml
+/.idea/libraries
+.DS_Store
+/build
+/captures
Index: PullToRefresh/build/intermediates/bundles/debug/res/values-he/values-he.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/bundles/debug/res/values-he/values-he.xml	(revision )
+++ PullToRefresh/build/intermediates/bundles/debug/res/values-he/values-he.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="pull_to_refresh_pull_label">משוך לרענון…</string>
+    <string name="pull_to_refresh_refreshing_label">טוען…</string>
+    <string name="pull_to_refresh_release_label">שחרר לרענון…</string>
+</resources>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/blame/res/androidTest/debug/multi/values-ar.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/blame/res/androidTest/debug/multi/values-ar.json	(revision )
+++ PullToRefresh/build/intermediates/blame/res/androidTest/debug/multi/values-ar.json	(revision )
@@ -0,0 +1,64 @@
+[
+    {
+        "outputFile": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\res\\merged\\androidTest\\debug\\values-ar\\values-ar.xml",
+        "map": [
+            {
+                "to": {
+                    "startLine": 2,
+                    "startColumn": 4,
+                    "startOffset": 55,
+                    "endColumn": 68,
+                    "endOffset": 119
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values-ar\\values-ar.xml",
+                    "position": {
+                        "startLine": 2,
+                        "startColumn": 4,
+                        "startOffset": 55,
+                        "endColumn": 68,
+                        "endOffset": 119
+                    }
+                }
+            },
+            {
+                "to": {
+                    "startLine": 3,
+                    "startColumn": 4,
+                    "startOffset": 124,
+                    "endColumn": 67,
+                    "endOffset": 187
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values-ar\\values-ar.xml",
+                    "position": {
+                        "startLine": 3,
+                        "startColumn": 4,
+                        "startOffset": 124,
+                        "endColumn": 67,
+                        "endOffset": 187
+                    }
+                }
+            },
+            {
+                "to": {
+                    "startLine": 4,
+                    "startColumn": 4,
+                    "startOffset": 192,
+                    "endColumn": 71,
+                    "endOffset": 259
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values-ar\\values-ar.xml",
+                    "position": {
+                        "startLine": 4,
+                        "startColumn": 4,
+                        "startOffset": 192,
+                        "endColumn": 71,
+                        "endOffset": 259
+                    }
+                }
+            }
+        ]
+    }
+]
\ No newline at end of file
Index: PullToRefresh/build/intermediates/res/merged/androidTest/debug/drawable/indicator_bg_top.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/res/merged/androidTest/debug/drawable/indicator_bg_top.xml	(revision )
+++ PullToRefresh/build/intermediates/res/merged/androidTest/debug/drawable/indicator_bg_top.xml	(revision )
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="rectangle" >
+
+    <solid android:color="#40000000" />
+
+    <!--
+    I know the android:radius is useless here but it's needed to fix an old bug:
+    http://code.google.com/p/android/issues/detail?id=939
+    -->
+    <corners
+        android:bottomLeftRadius="@dimen/indicator_corner_radius"
+        android:bottomRightRadius="@dimen/indicator_corner_radius"
+        android:radius="1dp"
+        android:topLeftRadius="0dp"
+        android:topRightRadius="0dp" />
+
+</shape>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/bundles/debug/res/layout/pull_to_refresh_header_horizontal.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/bundles/debug/res/layout/pull_to_refresh_header_horizontal.xml	(revision )
+++ PullToRefresh/build/intermediates/bundles/debug/res/layout/pull_to_refresh_header_horizontal.xml	(revision )
@@ -0,0 +1,29 @@
+<?xml version="1.0" encoding="utf-8"?>
+<merge xmlns:android="http://schemas.android.com/apk/res/android" >
+
+    <FrameLayout
+        android:id="@+id/fl_inner"
+        android:layout_width="wrap_content"
+        android:layout_height="fill_parent"
+        android:paddingBottom="@dimen/header_footer_top_bottom_padding"
+        android:paddingLeft="@dimen/header_footer_left_right_padding"
+        android:paddingRight="@dimen/header_footer_left_right_padding"
+        android:paddingTop="@dimen/header_footer_top_bottom_padding" >
+
+        <ImageView
+            android:id="@+id/pull_to_refresh_image"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="center" />
+
+        <ProgressBar
+            android:id="@+id/pull_to_refresh_progress"
+            style="?android:attr/progressBarStyleSmall"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="center"
+            android:indeterminate="true"
+            android:visibility="gone" />
+    </FrameLayout>
+
+</merge>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/bundles/debug/res/values-ko/values-ko.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/bundles/debug/res/values-ko/values-ko.xml	(revision )
+++ PullToRefresh/build/intermediates/bundles/debug/res/values-ko/values-ko.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="pull_to_refresh_pull_label">당겨서 새로 고침…</string>
+    <string name="pull_to_refresh_refreshing_label">로드 중…</string>
+    <string name="pull_to_refresh_release_label">놓아서 새로 고침…</string>
+</resources>
\ No newline at end of file
Index: PullToRefresh/src/main/res/values-zh/pull_refresh_strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/src/main/res/values-zh/pull_refresh_strings.xml	(revision )
+++ PullToRefresh/src/main/res/values-zh/pull_refresh_strings.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+  <string name="pull_to_refresh_pull_label">下拉刷新…</string>
+  <string name="pull_to_refresh_release_label">放开以刷新…</string>
+  <string name="pull_to_refresh_refreshing_label">正在载入…</string>
+</resources>
Index: app/src/main/res/drawable/wireframe_light.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/wireframe_light.xml	(revision )
+++ app/src/main/res/drawable/wireframe_light.xml	(revision )
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android" >
+    <stroke android:width="1px"
+        android:color="@color/light_grey"
+        />
+    
+    <padding android:left="8dp"
+        android:right="8dp"
+        android:top="8dp"
+        android:bottom="8dp"
+        />
+
+</shape>
Index: PullToRefresh/build/generated/source/r/debug/com/handmark/pulltorefresh/library/R.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/generated/source/r/debug/com/handmark/pulltorefresh/library/R.java	(revision )
+++ PullToRefresh/build/generated/source/r/debug/com/handmark/pulltorefresh/library/R.java	(revision )
@@ -0,0 +1,453 @@
+/* AUTO-GENERATED FILE.  DO NOT MODIFY.
+ *
+ * This class was automatically generated by the
+ * aapt tool from the resource data it found.  It
+ * should not be modified by hand.
+ */
+
+package com.handmark.pulltorefresh.library;
+
+public final class R {
+    public static final class anim {
+        public static int slide_in_from_bottom=0x7f040000;
+        public static int slide_in_from_top=0x7f040001;
+        public static int slide_out_to_bottom=0x7f040002;
+        public static int slide_out_to_top=0x7f040003;
+    }
+    public static final class attr {
+        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+         */
+        public static int ptrAdapterViewBackground=0x7f010010;
+        /** <p>Must be one or more (separated by '|') of the following constant values.</p>
+<table>
+<colgroup align="left" />
+<colgroup align="left" />
+<colgroup align="left" />
+<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
+<tr><td><code>rotate</code></td><td>0x0</td><td></td></tr>
+<tr><td><code>flip</code></td><td>0x1</td><td></td></tr>
+</table>
+         */
+        public static int ptrAnimationStyle=0x7f01000c;
+        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+         */
+        public static int ptrDrawable=0x7f010006;
+        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+         */
+        public static int ptrDrawableBottom=0x7f010012;
+        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+         */
+        public static int ptrDrawableEnd=0x7f010008;
+        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+         */
+        public static int ptrDrawableStart=0x7f010007;
+        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+         */
+        public static int ptrDrawableTop=0x7f010011;
+        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+         */
+        public static int ptrHeaderBackground=0x7f010001;
+        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+         */
+        public static int ptrHeaderSubTextColor=0x7f010003;
+        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+         */
+        public static int ptrHeaderTextAppearance=0x7f01000a;
+        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+         */
+        public static int ptrHeaderTextColor=0x7f010002;
+        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
+         */
+        public static int ptrListViewExtrasEnabled=0x7f01000e;
+        /** <p>Must be one or more (separated by '|') of the following constant values.</p>
+<table>
+<colgroup align="left" />
+<colgroup align="left" />
+<colgroup align="left" />
+<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
+<tr><td><code>disabled</code></td><td>0x0</td><td></td></tr>
+<tr><td><code>pullFromStart</code></td><td>0x1</td><td></td></tr>
+<tr><td><code>pullFromEnd</code></td><td>0x2</td><td></td></tr>
+<tr><td><code>both</code></td><td>0x3</td><td></td></tr>
+<tr><td><code>manualOnly</code></td><td>0x4</td><td></td></tr>
+<tr><td><code>pullDownFromTop</code></td><td>0x1</td><td></td></tr>
+<tr><td><code>pullUpFromBottom</code></td><td>0x2</td><td></td></tr>
+</table>
+         */
+        public static int ptrMode=0x7f010004;
+        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
+         */
+        public static int ptrOverScroll=0x7f010009;
+        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+         */
+        public static int ptrRefreshableViewBackground=0x7f010000;
+        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
+         */
+        public static int ptrRotateDrawableWhilePulling=0x7f01000f;
+        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
+         */
+        public static int ptrScrollingWhileRefreshingEnabled=0x7f01000d;
+        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
+         */
+        public static int ptrShowIndicator=0x7f010005;
+        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+         */
+        public static int ptrSubHeaderTextAppearance=0x7f01000b;
+    }
+    public static final class dimen {
+        public static int header_footer_left_right_padding=0x7f070000;
+        public static int header_footer_top_bottom_padding=0x7f070001;
+        public static int indicator_corner_radius=0x7f070002;
+        public static int indicator_internal_padding=0x7f070003;
+        public static int indicator_right_padding=0x7f070004;
+    }
+    public static final class drawable {
+        public static int default_ptr_flip=0x7f020000;
+        public static int default_ptr_rotate=0x7f020001;
+        public static int indicator_arrow=0x7f020002;
+        public static int indicator_bg_bottom=0x7f020003;
+        public static int indicator_bg_top=0x7f020004;
+    }
+    public static final class id {
+        public static int both=0x7f060003;
+        public static int disabled=0x7f060000;
+        public static int fl_inner=0x7f06000c;
+        public static int flip=0x7f060008;
+        public static int gridview=0x7f060009;
+        public static int manualOnly=0x7f060004;
+        public static int pullDownFromTop=0x7f060005;
+        public static int pullFromEnd=0x7f060002;
+        public static int pullFromStart=0x7f060001;
+        public static int pullUpFromBottom=0x7f060006;
+        public static int pull_to_refresh_image=0x7f06000d;
+        public static int pull_to_refresh_progress=0x7f06000e;
+        public static int pull_to_refresh_sub_text=0x7f060010;
+        public static int pull_to_refresh_text=0x7f06000f;
+        public static int rotate=0x7f060007;
+        public static int scrollview=0x7f06000a;
+        public static int webview=0x7f06000b;
+    }
+    public static final class layout {
+        public static int pull_to_refresh_header_horizontal=0x7f030000;
+        public static int pull_to_refresh_header_vertical=0x7f030001;
+    }
+    public static final class string {
+        public static int pull_to_refresh_from_bottom_pull_label=0x7f050003;
+        public static int pull_to_refresh_from_bottom_refreshing_label=0x7f050004;
+        public static int pull_to_refresh_from_bottom_release_label=0x7f050005;
+        public static int pull_to_refresh_pull_label=0x7f050000;
+        public static int pull_to_refresh_refreshing_label=0x7f050001;
+        public static int pull_to_refresh_release_label=0x7f050002;
+    }
+    public static final class styleable {
+        /** Attributes that can be used with a PullToRefresh.
+           <p>Includes the following attributes:</p>
+           <table>
+           <colgroup align="left" />
+           <colgroup align="left" />
+           <tr><th>Attribute</th><th>Description</th></tr>
+           <tr><td><code>{@link #PullToRefresh_ptrAdapterViewBackground com.handmark.pulltorefresh.library:ptrAdapterViewBackground}</code></td><td></td></tr>
+           <tr><td><code>{@link #PullToRefresh_ptrAnimationStyle com.handmark.pulltorefresh.library:ptrAnimationStyle}</code></td><td></td></tr>
+           <tr><td><code>{@link #PullToRefresh_ptrDrawable com.handmark.pulltorefresh.library:ptrDrawable}</code></td><td></td></tr>
+           <tr><td><code>{@link #PullToRefresh_ptrDrawableBottom com.handmark.pulltorefresh.library:ptrDrawableBottom}</code></td><td></td></tr>
+           <tr><td><code>{@link #PullToRefresh_ptrDrawableEnd com.handmark.pulltorefresh.library:ptrDrawableEnd}</code></td><td></td></tr>
+           <tr><td><code>{@link #PullToRefresh_ptrDrawableStart com.handmark.pulltorefresh.library:ptrDrawableStart}</code></td><td></td></tr>
+           <tr><td><code>{@link #PullToRefresh_ptrDrawableTop com.handmark.pulltorefresh.library:ptrDrawableTop}</code></td><td></td></tr>
+           <tr><td><code>{@link #PullToRefresh_ptrHeaderBackground com.handmark.pulltorefresh.library:ptrHeaderBackground}</code></td><td></td></tr>
+           <tr><td><code>{@link #PullToRefresh_ptrHeaderSubTextColor com.handmark.pulltorefresh.library:ptrHeaderSubTextColor}</code></td><td></td></tr>
+           <tr><td><code>{@link #PullToRefresh_ptrHeaderTextAppearance com.handmark.pulltorefresh.library:ptrHeaderTextAppearance}</code></td><td></td></tr>
+           <tr><td><code>{@link #PullToRefresh_ptrHeaderTextColor com.handmark.pulltorefresh.library:ptrHeaderTextColor}</code></td><td></td></tr>
+           <tr><td><code>{@link #PullToRefresh_ptrListViewExtrasEnabled com.handmark.pulltorefresh.library:ptrListViewExtrasEnabled}</code></td><td></td></tr>
+           <tr><td><code>{@link #PullToRefresh_ptrMode com.handmark.pulltorefresh.library:ptrMode}</code></td><td></td></tr>
+           <tr><td><code>{@link #PullToRefresh_ptrOverScroll com.handmark.pulltorefresh.library:ptrOverScroll}</code></td><td></td></tr>
+           <tr><td><code>{@link #PullToRefresh_ptrRefreshableViewBackground com.handmark.pulltorefresh.library:ptrRefreshableViewBackground}</code></td><td></td></tr>
+           <tr><td><code>{@link #PullToRefresh_ptrRotateDrawableWhilePulling com.handmark.pulltorefresh.library:ptrRotateDrawableWhilePulling}</code></td><td></td></tr>
+           <tr><td><code>{@link #PullToRefresh_ptrScrollingWhileRefreshingEnabled com.handmark.pulltorefresh.library:ptrScrollingWhileRefreshingEnabled}</code></td><td></td></tr>
+           <tr><td><code>{@link #PullToRefresh_ptrShowIndicator com.handmark.pulltorefresh.library:ptrShowIndicator}</code></td><td></td></tr>
+           <tr><td><code>{@link #PullToRefresh_ptrSubHeaderTextAppearance com.handmark.pulltorefresh.library:ptrSubHeaderTextAppearance}</code></td><td></td></tr>
+           </table>
+           @see #PullToRefresh_ptrAdapterViewBackground
+           @see #PullToRefresh_ptrAnimationStyle
+           @see #PullToRefresh_ptrDrawable
+           @see #PullToRefresh_ptrDrawableBottom
+           @see #PullToRefresh_ptrDrawableEnd
+           @see #PullToRefresh_ptrDrawableStart
+           @see #PullToRefresh_ptrDrawableTop
+           @see #PullToRefresh_ptrHeaderBackground
+           @see #PullToRefresh_ptrHeaderSubTextColor
+           @see #PullToRefresh_ptrHeaderTextAppearance
+           @see #PullToRefresh_ptrHeaderTextColor
+           @see #PullToRefresh_ptrListViewExtrasEnabled
+           @see #PullToRefresh_ptrMode
+           @see #PullToRefresh_ptrOverScroll
+           @see #PullToRefresh_ptrRefreshableViewBackground
+           @see #PullToRefresh_ptrRotateDrawableWhilePulling
+           @see #PullToRefresh_ptrScrollingWhileRefreshingEnabled
+           @see #PullToRefresh_ptrShowIndicator
+           @see #PullToRefresh_ptrSubHeaderTextAppearance
+         */
+        public static final int[] PullToRefresh = {
+            0x7f010000, 0x7f010001, 0x7f010002, 0x7f010003,
+            0x7f010004, 0x7f010005, 0x7f010006, 0x7f010007,
+            0x7f010008, 0x7f010009, 0x7f01000a, 0x7f01000b,
+            0x7f01000c, 0x7f01000d, 0x7f01000e, 0x7f01000f,
+            0x7f010010, 0x7f010011, 0x7f010012
+        };
+        /**
+          <p>This symbol is the offset where the {@link com.handmark.pulltorefresh.library.R.attr#ptrAdapterViewBackground}
+          attribute's value can be found in the {@link #PullToRefresh} array.
+
+
+          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+          @attr name com.handmark.pulltorefresh.library:ptrAdapterViewBackground
+        */
+        public static final int PullToRefresh_ptrAdapterViewBackground = 16;
+        /**
+          <p>This symbol is the offset where the {@link com.handmark.pulltorefresh.library.R.attr#ptrAnimationStyle}
+          attribute's value can be found in the {@link #PullToRefresh} array.
+
+
+          <p>Must be one or more (separated by '|') of the following constant values.</p>
+<table>
+<colgroup align="left" />
+<colgroup align="left" />
+<colgroup align="left" />
+<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
+<tr><td><code>rotate</code></td><td>0x0</td><td></td></tr>
+<tr><td><code>flip</code></td><td>0x1</td><td></td></tr>
+</table>
+          @attr name com.handmark.pulltorefresh.library:ptrAnimationStyle
+        */
+        public static final int PullToRefresh_ptrAnimationStyle = 12;
+        /**
+          <p>This symbol is the offset where the {@link com.handmark.pulltorefresh.library.R.attr#ptrDrawable}
+          attribute's value can be found in the {@link #PullToRefresh} array.
+
+
+          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+          @attr name com.handmark.pulltorefresh.library:ptrDrawable
+        */
+        public static final int PullToRefresh_ptrDrawable = 6;
+        /**
+          <p>This symbol is the offset where the {@link com.handmark.pulltorefresh.library.R.attr#ptrDrawableBottom}
+          attribute's value can be found in the {@link #PullToRefresh} array.
+
+
+          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+          @attr name com.handmark.pulltorefresh.library:ptrDrawableBottom
+        */
+        public static final int PullToRefresh_ptrDrawableBottom = 18;
+        /**
+          <p>This symbol is the offset where the {@link com.handmark.pulltorefresh.library.R.attr#ptrDrawableEnd}
+          attribute's value can be found in the {@link #PullToRefresh} array.
+
+
+          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+          @attr name com.handmark.pulltorefresh.library:ptrDrawableEnd
+        */
+        public static final int PullToRefresh_ptrDrawableEnd = 8;
+        /**
+          <p>This symbol is the offset where the {@link com.handmark.pulltorefresh.library.R.attr#ptrDrawableStart}
+          attribute's value can be found in the {@link #PullToRefresh} array.
+
+
+          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+          @attr name com.handmark.pulltorefresh.library:ptrDrawableStart
+        */
+        public static final int PullToRefresh_ptrDrawableStart = 7;
+        /**
+          <p>This symbol is the offset where the {@link com.handmark.pulltorefresh.library.R.attr#ptrDrawableTop}
+          attribute's value can be found in the {@link #PullToRefresh} array.
+
+
+          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+          @attr name com.handmark.pulltorefresh.library:ptrDrawableTop
+        */
+        public static final int PullToRefresh_ptrDrawableTop = 17;
+        /**
+          <p>This symbol is the offset where the {@link com.handmark.pulltorefresh.library.R.attr#ptrHeaderBackground}
+          attribute's value can be found in the {@link #PullToRefresh} array.
+
+
+          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+          @attr name com.handmark.pulltorefresh.library:ptrHeaderBackground
+        */
+        public static final int PullToRefresh_ptrHeaderBackground = 1;
+        /**
+          <p>This symbol is the offset where the {@link com.handmark.pulltorefresh.library.R.attr#ptrHeaderSubTextColor}
+          attribute's value can be found in the {@link #PullToRefresh} array.
+
+
+          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+          @attr name com.handmark.pulltorefresh.library:ptrHeaderSubTextColor
+        */
+        public static final int PullToRefresh_ptrHeaderSubTextColor = 3;
+        /**
+          <p>This symbol is the offset where the {@link com.handmark.pulltorefresh.library.R.attr#ptrHeaderTextAppearance}
+          attribute's value can be found in the {@link #PullToRefresh} array.
+
+
+          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+          @attr name com.handmark.pulltorefresh.library:ptrHeaderTextAppearance
+        */
+        public static final int PullToRefresh_ptrHeaderTextAppearance = 10;
+        /**
+          <p>This symbol is the offset where the {@link com.handmark.pulltorefresh.library.R.attr#ptrHeaderTextColor}
+          attribute's value can be found in the {@link #PullToRefresh} array.
+
+
+          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+          @attr name com.handmark.pulltorefresh.library:ptrHeaderTextColor
+        */
+        public static final int PullToRefresh_ptrHeaderTextColor = 2;
+        /**
+          <p>This symbol is the offset where the {@link com.handmark.pulltorefresh.library.R.attr#ptrListViewExtrasEnabled}
+          attribute's value can be found in the {@link #PullToRefresh} array.
+
+
+          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
+          @attr name com.handmark.pulltorefresh.library:ptrListViewExtrasEnabled
+        */
+        public static final int PullToRefresh_ptrListViewExtrasEnabled = 14;
+        /**
+          <p>This symbol is the offset where the {@link com.handmark.pulltorefresh.library.R.attr#ptrMode}
+          attribute's value can be found in the {@link #PullToRefresh} array.
+
+
+          <p>Must be one or more (separated by '|') of the following constant values.</p>
+<table>
+<colgroup align="left" />
+<colgroup align="left" />
+<colgroup align="left" />
+<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
+<tr><td><code>disabled</code></td><td>0x0</td><td></td></tr>
+<tr><td><code>pullFromStart</code></td><td>0x1</td><td></td></tr>
+<tr><td><code>pullFromEnd</code></td><td>0x2</td><td></td></tr>
+<tr><td><code>both</code></td><td>0x3</td><td></td></tr>
+<tr><td><code>manualOnly</code></td><td>0x4</td><td></td></tr>
+<tr><td><code>pullDownFromTop</code></td><td>0x1</td><td></td></tr>
+<tr><td><code>pullUpFromBottom</code></td><td>0x2</td><td></td></tr>
+</table>
+          @attr name com.handmark.pulltorefresh.library:ptrMode
+        */
+        public static final int PullToRefresh_ptrMode = 4;
+        /**
+          <p>This symbol is the offset where the {@link com.handmark.pulltorefresh.library.R.attr#ptrOverScroll}
+          attribute's value can be found in the {@link #PullToRefresh} array.
+
+
+          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
+          @attr name com.handmark.pulltorefresh.library:ptrOverScroll
+        */
+        public static final int PullToRefresh_ptrOverScroll = 9;
+        /**
+          <p>This symbol is the offset where the {@link com.handmark.pulltorefresh.library.R.attr#ptrRefreshableViewBackground}
+          attribute's value can be found in the {@link #PullToRefresh} array.
+
+
+          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+          @attr name com.handmark.pulltorefresh.library:ptrRefreshableViewBackground
+        */
+        public static final int PullToRefresh_ptrRefreshableViewBackground = 0;
+        /**
+          <p>This symbol is the offset where the {@link com.handmark.pulltorefresh.library.R.attr#ptrRotateDrawableWhilePulling}
+          attribute's value can be found in the {@link #PullToRefresh} array.
+
+
+          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
+          @attr name com.handmark.pulltorefresh.library:ptrRotateDrawableWhilePulling
+        */
+        public static final int PullToRefresh_ptrRotateDrawableWhilePulling = 15;
+        /**
+          <p>This symbol is the offset where the {@link com.handmark.pulltorefresh.library.R.attr#ptrScrollingWhileRefreshingEnabled}
+          attribute's value can be found in the {@link #PullToRefresh} array.
+
+
+          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
+          @attr name com.handmark.pulltorefresh.library:ptrScrollingWhileRefreshingEnabled
+        */
+        public static final int PullToRefresh_ptrScrollingWhileRefreshingEnabled = 13;
+        /**
+          <p>This symbol is the offset where the {@link com.handmark.pulltorefresh.library.R.attr#ptrShowIndicator}
+          attribute's value can be found in the {@link #PullToRefresh} array.
+
+
+          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
+          @attr name com.handmark.pulltorefresh.library:ptrShowIndicator
+        */
+        public static final int PullToRefresh_ptrShowIndicator = 5;
+        /**
+          <p>This symbol is the offset where the {@link com.handmark.pulltorefresh.library.R.attr#ptrSubHeaderTextAppearance}
+          attribute's value can be found in the {@link #PullToRefresh} array.
+
+
+          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+          @attr name com.handmark.pulltorefresh.library:ptrSubHeaderTextAppearance
+        */
+        public static final int PullToRefresh_ptrSubHeaderTextAppearance = 11;
+    };
+}
Index: PullToRefresh/build/intermediates/blame/res/androidTest/debug/multi/values-ja.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/blame/res/androidTest/debug/multi/values-ja.json	(revision )
+++ PullToRefresh/build/intermediates/blame/res/androidTest/debug/multi/values-ja.json	(revision )
@@ -0,0 +1,64 @@
+[
+    {
+        "outputFile": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\res\\merged\\androidTest\\debug\\values-ja\\values-ja.xml",
+        "map": [
+            {
+                "to": {
+                    "startLine": 2,
+                    "startColumn": 4,
+                    "startOffset": 55,
+                    "endColumn": 64,
+                    "endOffset": 115
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values-ja\\values-ja.xml",
+                    "position": {
+                        "startLine": 2,
+                        "startColumn": 4,
+                        "startOffset": 55,
+                        "endColumn": 64,
+                        "endOffset": 115
+                    }
+                }
+            },
+            {
+                "to": {
+                    "startLine": 3,
+                    "startColumn": 4,
+                    "startOffset": 120,
+                    "endColumn": 67,
+                    "endOffset": 183
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values-ja\\values-ja.xml",
+                    "position": {
+                        "startLine": 3,
+                        "startColumn": 4,
+                        "startOffset": 120,
+                        "endColumn": 67,
+                        "endOffset": 183
+                    }
+                }
+            },
+            {
+                "to": {
+                    "startLine": 4,
+                    "startColumn": 4,
+                    "startOffset": 188,
+                    "endColumn": 66,
+                    "endOffset": 250
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values-ja\\values-ja.xml",
+                    "position": {
+                        "startLine": 4,
+                        "startColumn": 4,
+                        "startOffset": 188,
+                        "endColumn": 66,
+                        "endOffset": 250
+                    }
+                }
+            }
+        ]
+    }
+]
\ No newline at end of file
Index: PullToRefresh/build/generated/source/r/androidTest/debug/com/handmark/pulltorefresh/library/R.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/generated/source/r/androidTest/debug/com/handmark/pulltorefresh/library/R.java	(revision )
+++ PullToRefresh/build/generated/source/r/androidTest/debug/com/handmark/pulltorefresh/library/R.java	(revision )
@@ -0,0 +1,104 @@
+/* AUTO-GENERATED FILE.  DO NOT MODIFY.
+ *
+ * This class was automatically generated by the
+ * aapt tool from the resource data it found.  It
+ * should not be modified by hand.
+ */
+package com.handmark.pulltorefresh.library;
+
+public final class R {
+	public static final class anim {
+		public static final int slide_in_from_bottom = 0x7f040000;
+		public static final int slide_in_from_top = 0x7f040001;
+		public static final int slide_out_to_bottom = 0x7f040002;
+		public static final int slide_out_to_top = 0x7f040003;
+	}
+	public static final class attr {
+		public static final int ptrAdapterViewBackground = 0x7f010010;
+		public static final int ptrAnimationStyle = 0x7f01000c;
+		public static final int ptrDrawable = 0x7f010006;
+		public static final int ptrDrawableBottom = 0x7f010012;
+		public static final int ptrDrawableEnd = 0x7f010008;
+		public static final int ptrDrawableStart = 0x7f010007;
+		public static final int ptrDrawableTop = 0x7f010011;
+		public static final int ptrHeaderBackground = 0x7f010001;
+		public static final int ptrHeaderSubTextColor = 0x7f010003;
+		public static final int ptrHeaderTextAppearance = 0x7f01000a;
+		public static final int ptrHeaderTextColor = 0x7f010002;
+		public static final int ptrListViewExtrasEnabled = 0x7f01000e;
+		public static final int ptrMode = 0x7f010004;
+		public static final int ptrOverScroll = 0x7f010009;
+		public static final int ptrRefreshableViewBackground = 0x7f010000;
+		public static final int ptrRotateDrawableWhilePulling = 0x7f01000f;
+		public static final int ptrScrollingWhileRefreshingEnabled = 0x7f01000d;
+		public static final int ptrShowIndicator = 0x7f010005;
+		public static final int ptrSubHeaderTextAppearance = 0x7f01000b;
+	}
+	public static final class dimen {
+		public static final int header_footer_left_right_padding = 0x7f070000;
+		public static final int header_footer_top_bottom_padding = 0x7f070001;
+		public static final int indicator_corner_radius = 0x7f070002;
+		public static final int indicator_internal_padding = 0x7f070003;
+		public static final int indicator_right_padding = 0x7f070004;
+	}
+	public static final class drawable {
+		public static final int default_ptr_flip = 0x7f020000;
+		public static final int default_ptr_rotate = 0x7f020001;
+		public static final int indicator_arrow = 0x7f020002;
+		public static final int indicator_bg_bottom = 0x7f020003;
+		public static final int indicator_bg_top = 0x7f020004;
+	}
+	public static final class id {
+		public static final int both = 0x7f060003;
+		public static final int disabled = 0x7f060000;
+		public static final int fl_inner = 0x7f06000c;
+		public static final int flip = 0x7f060008;
+		public static final int gridview = 0x7f060009;
+		public static final int manualOnly = 0x7f060004;
+		public static final int pullDownFromTop = 0x7f060005;
+		public static final int pullFromEnd = 0x7f060002;
+		public static final int pullFromStart = 0x7f060001;
+		public static final int pullUpFromBottom = 0x7f060006;
+		public static final int pull_to_refresh_image = 0x7f06000d;
+		public static final int pull_to_refresh_progress = 0x7f06000e;
+		public static final int pull_to_refresh_sub_text = 0x7f060010;
+		public static final int pull_to_refresh_text = 0x7f06000f;
+		public static final int rotate = 0x7f060007;
+		public static final int scrollview = 0x7f06000a;
+		public static final int webview = 0x7f06000b;
+	}
+	public static final class layout {
+		public static final int pull_to_refresh_header_horizontal = 0x7f030000;
+		public static final int pull_to_refresh_header_vertical = 0x7f030001;
+	}
+	public static final class string {
+		public static final int pull_to_refresh_from_bottom_pull_label = 0x7f050003;
+		public static final int pull_to_refresh_from_bottom_refreshing_label = 0x7f050004;
+		public static final int pull_to_refresh_from_bottom_release_label = 0x7f050005;
+		public static final int pull_to_refresh_pull_label = 0x7f050000;
+		public static final int pull_to_refresh_refreshing_label = 0x7f050001;
+		public static final int pull_to_refresh_release_label = 0x7f050002;
+	}
+	public static final class styleable {
+		public static final int[] PullToRefresh = { 0x7f010000, 0x7f010001, 0x7f010002, 0x7f010003, 0x7f010004, 0x7f010005, 0x7f010006, 0x7f010007, 0x7f010008, 0x7f010009, 0x7f01000a, 0x7f01000b, 0x7f01000c, 0x7f01000d, 0x7f01000e, 0x7f01000f, 0x7f010010, 0x7f010011, 0x7f010012 };
+		public static final int PullToRefresh_ptrAdapterViewBackground = 16;
+		public static final int PullToRefresh_ptrAnimationStyle = 12;
+		public static final int PullToRefresh_ptrDrawable = 6;
+		public static final int PullToRefresh_ptrDrawableBottom = 18;
+		public static final int PullToRefresh_ptrDrawableEnd = 8;
+		public static final int PullToRefresh_ptrDrawableStart = 7;
+		public static final int PullToRefresh_ptrDrawableTop = 17;
+		public static final int PullToRefresh_ptrHeaderBackground = 1;
+		public static final int PullToRefresh_ptrHeaderSubTextColor = 3;
+		public static final int PullToRefresh_ptrHeaderTextAppearance = 10;
+		public static final int PullToRefresh_ptrHeaderTextColor = 2;
+		public static final int PullToRefresh_ptrListViewExtrasEnabled = 14;
+		public static final int PullToRefresh_ptrMode = 4;
+		public static final int PullToRefresh_ptrOverScroll = 9;
+		public static final int PullToRefresh_ptrRefreshableViewBackground = 0;
+		public static final int PullToRefresh_ptrRotateDrawableWhilePulling = 15;
+		public static final int PullToRefresh_ptrScrollingWhileRefreshingEnabled = 13;
+		public static final int PullToRefresh_ptrShowIndicator = 5;
+		public static final int PullToRefresh_ptrSubHeaderTextAppearance = 11;
+	}
+}
Index: PullToRefresh/build/intermediates/blame/res/androidTest/debug/multi/values-cs.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/blame/res/androidTest/debug/multi/values-cs.json	(revision )
+++ PullToRefresh/build/intermediates/blame/res/androidTest/debug/multi/values-cs.json	(revision )
@@ -0,0 +1,64 @@
+[
+    {
+        "outputFile": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\res\\merged\\androidTest\\debug\\values-cs\\values-cs.xml",
+        "map": [
+            {
+                "to": {
+                    "startLine": 2,
+                    "startColumn": 4,
+                    "startOffset": 55,
+                    "endColumn": 77,
+                    "endOffset": 128
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values-cs\\values-cs.xml",
+                    "position": {
+                        "startLine": 2,
+                        "startColumn": 4,
+                        "startOffset": 55,
+                        "endColumn": 77,
+                        "endOffset": 128
+                    }
+                }
+            },
+            {
+                "to": {
+                    "startLine": 3,
+                    "startColumn": 4,
+                    "startOffset": 133,
+                    "endColumn": 70,
+                    "endOffset": 199
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values-cs\\values-cs.xml",
+                    "position": {
+                        "startLine": 3,
+                        "startColumn": 4,
+                        "startOffset": 133,
+                        "endColumn": 70,
+                        "endOffset": 199
+                    }
+                }
+            },
+            {
+                "to": {
+                    "startLine": 4,
+                    "startColumn": 4,
+                    "startOffset": 204,
+                    "endColumn": 82,
+                    "endOffset": 282
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values-cs\\values-cs.xml",
+                    "position": {
+                        "startLine": 4,
+                        "startColumn": 4,
+                        "startOffset": 204,
+                        "endColumn": 82,
+                        "endOffset": 282
+                    }
+                }
+            }
+        ]
+    }
+]
\ No newline at end of file
Index: PullToRefresh/build/intermediates/bundles/debug/res/values-es/values-es.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/bundles/debug/res/values-es/values-es.xml	(revision )
+++ PullToRefresh/build/intermediates/bundles/debug/res/values-es/values-es.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="pull_to_refresh_pull_label">Tirar para actualizar…</string>
+    <string name="pull_to_refresh_refreshing_label">Cargando…</string>
+    <string name="pull_to_refresh_release_label">Soltar para actualizar…</string>
+</resources>
\ No newline at end of file
Index: app/src/main/res/drawable/progressbar.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/progressbar.xml	(revision )
+++ app/src/main/res/drawable/progressbar.xml	(revision )
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8"?> 
+<animated-rotate
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:drawable="@drawable/loading"
+    android:pivotX="50%"
+    android:pivotY="50%"
+    />
Index: app/src/main/res/drawable/wireframe_dark.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/wireframe_dark.xml	(revision )
+++ app/src/main/res/drawable/wireframe_dark.xml	(revision )
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android" >
+    <stroke android:width="1px"
+        android:color="@color/dark_grey"
+        />
+    
+    <padding android:left="8dp"
+        android:right="8dp"
+        android:top="8dp"
+        android:bottom="8dp"
+        />
+
+</shape>
Index: PullToRefresh/build/intermediates/bundles/debug/res/anim/slide_out_to_top.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/bundles/debug/res/anim/slide_out_to_top.xml	(revision )
+++ PullToRefresh/build/intermediates/bundles/debug/res/anim/slide_out_to_top.xml	(revision )
@@ -0,0 +1,21 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+     Copyright (C) 2009 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+
+<translate xmlns:android="http://schemas.android.com/apk/res/android"
+    android:duration="@android:integer/config_longAnimTime"
+    android:fromYDelta="0"
+    android:toYDelta="-100%p" />
Index: PullToRefresh/build/intermediates/blame/res/androidTest/debug/multi/values-fr.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/blame/res/androidTest/debug/multi/values-fr.json	(revision )
+++ PullToRefresh/build/intermediates/blame/res/androidTest/debug/multi/values-fr.json	(revision )
@@ -0,0 +1,64 @@
+[
+    {
+        "outputFile": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\res\\merged\\androidTest\\debug\\values-fr\\values-fr.xml",
+        "map": [
+            {
+                "to": {
+                    "startLine": 2,
+                    "startColumn": 4,
+                    "startOffset": 55,
+                    "endColumn": 77,
+                    "endOffset": 128
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values-fr\\values-fr.xml",
+                    "position": {
+                        "startLine": 2,
+                        "startColumn": 4,
+                        "startOffset": 55,
+                        "endColumn": 77,
+                        "endOffset": 128
+                    }
+                }
+            },
+            {
+                "to": {
+                    "startLine": 3,
+                    "startColumn": 4,
+                    "startOffset": 133,
+                    "endColumn": 72,
+                    "endOffset": 201
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values-fr\\values-fr.xml",
+                    "position": {
+                        "startLine": 3,
+                        "startColumn": 4,
+                        "startOffset": 133,
+                        "endColumn": 72,
+                        "endOffset": 201
+                    }
+                }
+            },
+            {
+                "to": {
+                    "startLine": 4,
+                    "startColumn": 4,
+                    "startOffset": 206,
+                    "endColumn": 83,
+                    "endOffset": 285
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values-fr\\values-fr.xml",
+                    "position": {
+                        "startLine": 4,
+                        "startColumn": 4,
+                        "startOffset": 206,
+                        "endColumn": 83,
+                        "endOffset": 285
+                    }
+                }
+            }
+        ]
+    }
+]
\ No newline at end of file
Index: PullToRefresh/build/intermediates/bundles/debug/res/values-ar/values-ar.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/bundles/debug/res/values-ar/values-ar.xml	(revision )
+++ PullToRefresh/build/intermediates/bundles/debug/res/values-ar/values-ar.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="pull_to_refresh_pull_label">اسحب للتحديث…</string>
+    <string name="pull_to_refresh_refreshing_label">تحميل…</string>
+    <string name="pull_to_refresh_release_label">اترك للتحديث…</string>
+</resources>
\ No newline at end of file
Index: PullToRefresh/src/main/res/drawable/indicator_bg_bottom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/src/main/res/drawable/indicator_bg_bottom.xml	(revision )
+++ PullToRefresh/src/main/res/drawable/indicator_bg_bottom.xml	(revision )
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="rectangle" >
+
+    <solid android:color="#40000000" />
+
+    <!--
+    I know the android:radius is useless here but it's needed to fix an old bug:
+    http://code.google.com/p/android/issues/detail?id=939
+    -->
+    <corners
+        android:bottomLeftRadius="0dp"
+        android:bottomRightRadius="0dp"
+        android:radius="1dp"
+        android:topLeftRadius="@dimen/indicator_corner_radius"
+        android:topRightRadius="@dimen/indicator_corner_radius" />
+
+</shape>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/bundles/debug/res/values-fr/values-fr.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/bundles/debug/res/values-fr/values-fr.xml	(revision )
+++ PullToRefresh/build/intermediates/bundles/debug/res/values-fr/values-fr.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="pull_to_refresh_pull_label">Tirez pour rafraîchir…</string>
+    <string name="pull_to_refresh_refreshing_label">Chargement…</string>
+    <string name="pull_to_refresh_release_label">Relâcher pour rafraîchir…</string>
+</resources>
\ No newline at end of file
Index: PullToRefresh/src/main/res/anim/slide_out_to_top.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/src/main/res/anim/slide_out_to_top.xml	(revision )
+++ PullToRefresh/src/main/res/anim/slide_out_to_top.xml	(revision )
@@ -0,0 +1,21 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+     Copyright (C) 2009 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+
+<translate xmlns:android="http://schemas.android.com/apk/res/android"
+    android:duration="@android:integer/config_longAnimTime"
+    android:fromYDelta="0"
+    android:toYDelta="-100%p" />
Index: PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/internal/IndicatorLayout.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/internal/IndicatorLayout.java	(revision )
+++ PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/internal/IndicatorLayout.java	(revision )
@@ -0,0 +1,147 @@
+/*******************************************************************************
+ * Copyright 2011, 2012 Chris Banes.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ *******************************************************************************/
+package com.handmark.pulltorefresh.library.internal;
+
+import android.annotation.SuppressLint;
+import android.content.Context;
+import android.graphics.Matrix;
+import android.graphics.drawable.Drawable;
+import android.view.View;
+import android.view.animation.Animation;
+import android.view.animation.Animation.AnimationListener;
+import android.view.animation.AnimationUtils;
+import android.view.animation.Interpolator;
+import android.view.animation.LinearInterpolator;
+import android.view.animation.RotateAnimation;
+import android.widget.FrameLayout;
+import android.widget.ImageView;
+import android.widget.ImageView.ScaleType;
+
+import com.handmark.pulltorefresh.library.PullToRefreshBase;
+import com.handmark.pulltorefresh.library.R;
+
+@SuppressLint("ViewConstructor")
+public class IndicatorLayout extends FrameLayout implements AnimationListener {
+
+	static final int DEFAULT_ROTATION_ANIMATION_DURATION = 150;
+
+	private Animation mInAnim, mOutAnim;
+	private ImageView mArrowImageView;
+
+	private final Animation mRotateAnimation, mResetRotateAnimation;
+
+	public IndicatorLayout(Context context, PullToRefreshBase.Mode mode) {
+		super(context);
+		mArrowImageView = new ImageView(context);
+
+		Drawable arrowD = getResources().getDrawable(R.drawable.indicator_arrow);
+		mArrowImageView.setImageDrawable(arrowD);
+
+		final int padding = getResources().getDimensionPixelSize(R.dimen.indicator_internal_padding);
+		mArrowImageView.setPadding(padding, padding, padding, padding);
+		addView(mArrowImageView);
+
+		int inAnimResId, outAnimResId;
+		switch (mode) {
+			case PULL_FROM_END:
+				inAnimResId = R.anim.slide_in_from_bottom;
+				outAnimResId = R.anim.slide_out_to_bottom;
+				setBackgroundResource(R.drawable.indicator_bg_bottom);
+
+				// Rotate Arrow so it's pointing the correct way
+				mArrowImageView.setScaleType(ScaleType.MATRIX);
+				Matrix matrix = new Matrix();
+				matrix.setRotate(180f, arrowD.getIntrinsicWidth() / 2f, arrowD.getIntrinsicHeight() / 2f);
+				mArrowImageView.setImageMatrix(matrix);
+				break;
+			default:
+			case PULL_FROM_START:
+				inAnimResId = R.anim.slide_in_from_top;
+				outAnimResId = R.anim.slide_out_to_top;
+				setBackgroundResource(R.drawable.indicator_bg_top);
+				break;
+		}
+
+		mInAnim = AnimationUtils.loadAnimation(context, inAnimResId);
+		mInAnim.setAnimationListener(this);
+
+		mOutAnim = AnimationUtils.loadAnimation(context, outAnimResId);
+		mOutAnim.setAnimationListener(this);
+
+		final Interpolator interpolator = new LinearInterpolator();
+		mRotateAnimation = new RotateAnimation(0, -180, Animation.RELATIVE_TO_SELF, 0.5f, Animation.RELATIVE_TO_SELF,
+				0.5f);
+		mRotateAnimation.setInterpolator(interpolator);
+		mRotateAnimation.setDuration(DEFAULT_ROTATION_ANIMATION_DURATION);
+		mRotateAnimation.setFillAfter(true);
+
+		mResetRotateAnimation = new RotateAnimation(-180, 0, Animation.RELATIVE_TO_SELF, 0.5f,
+				Animation.RELATIVE_TO_SELF, 0.5f);
+		mResetRotateAnimation.setInterpolator(interpolator);
+		mResetRotateAnimation.setDuration(DEFAULT_ROTATION_ANIMATION_DURATION);
+		mResetRotateAnimation.setFillAfter(true);
+
+	}
+
+	public final boolean isVisible() {
+		Animation currentAnim = getAnimation();
+		if (null != currentAnim) {
+			return mInAnim == currentAnim;
+		}
+
+		return getVisibility() == View.VISIBLE;
+	}
+
+	public void hide() {
+		startAnimation(mOutAnim);
+	}
+
+	public void show() {
+		mArrowImageView.clearAnimation();
+		startAnimation(mInAnim);
+	}
+
+	@Override
+	public void onAnimationEnd(Animation animation) {
+		if (animation == mOutAnim) {
+			mArrowImageView.clearAnimation();
+			setVisibility(View.GONE);
+		} else if (animation == mInAnim) {
+			setVisibility(View.VISIBLE);
+		}
+
+		clearAnimation();
+	}
+
+	@Override
+	public void onAnimationRepeat(Animation animation) {
+		// NO-OP
+	}
+
+	@Override
+	public void onAnimationStart(Animation animation) {
+		setVisibility(View.VISIBLE);
+	}
+
+	public void releaseToRefresh() {
+		mArrowImageView.startAnimation(mRotateAnimation);
+	}
+
+	public void pullToRefresh() {
+		mArrowImageView.startAnimation(mResetRotateAnimation);
+	}
+
+}
Index: PullToRefresh/src/main/res/values-fr/pull_refresh_strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/src/main/res/values-fr/pull_refresh_strings.xml	(revision )
+++ PullToRefresh/src/main/res/values-fr/pull_refresh_strings.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+  <string name="pull_to_refresh_pull_label">Tirez pour rafraîchir…</string>
+  <string name="pull_to_refresh_release_label">Relâcher pour rafraîchir…</string>
+  <string name="pull_to_refresh_refreshing_label">Chargement…</string>
+</resources>
Index: PullToRefresh/build/intermediates/bundles/debug/res/drawable/indicator_bg_top.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/bundles/debug/res/drawable/indicator_bg_top.xml	(revision )
+++ PullToRefresh/build/intermediates/bundles/debug/res/drawable/indicator_bg_top.xml	(revision )
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="rectangle" >
+
+    <solid android:color="#40000000" />
+
+    <!--
+    I know the android:radius is useless here but it's needed to fix an old bug:
+    http://code.google.com/p/android/issues/detail?id=939
+    -->
+    <corners
+        android:bottomLeftRadius="@dimen/indicator_corner_radius"
+        android:bottomRightRadius="@dimen/indicator_corner_radius"
+        android:radius="1dp"
+        android:topLeftRadius="0dp"
+        android:topRightRadius="0dp" />
+
+</shape>
\ No newline at end of file
Index: PullToRefresh/src/main/res/values/dimens.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/src/main/res/values/dimens.xml	(revision )
+++ PullToRefresh/src/main/res/values/dimens.xml	(revision )
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+
+    <dimen name="indicator_right_padding">10dp</dimen>
+    <dimen name="indicator_corner_radius">12dp</dimen>
+    <dimen name="indicator_internal_padding">4dp</dimen>
+    <dimen name="header_footer_left_right_padding">24dp</dimen>
+    <dimen name="header_footer_top_bottom_padding">12dp</dimen>
+
+</resources>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/bundles/debug/res/anim/slide_out_to_bottom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/bundles/debug/res/anim/slide_out_to_bottom.xml	(revision )
+++ PullToRefresh/build/intermediates/bundles/debug/res/anim/slide_out_to_bottom.xml	(revision )
@@ -0,0 +1,21 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+     Copyright (C) 2009 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+
+<translate xmlns:android="http://schemas.android.com/apk/res/android"
+    android:duration="@android:integer/config_longAnimTime"
+    android:fromYDelta="0"
+    android:toYDelta="100%p" />
Index: PullToRefresh/build/intermediates/bundles/debug/res/values-iw/values-iw.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/bundles/debug/res/values-iw/values-iw.xml	(revision )
+++ PullToRefresh/build/intermediates/bundles/debug/res/values-iw/values-iw.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="pull_to_refresh_pull_label">משוך לרענון…</string>
+    <string name="pull_to_refresh_refreshing_label">טוען…</string>
+    <string name="pull_to_refresh_release_label">שחרר לרענון…</string>
+</resources>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/incremental/mergeReleaseJniLibFolders/merger.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/incremental/mergeReleaseJniLibFolders/merger.xml	(revision )
+++ PullToRefresh/build/intermediates/incremental/mergeReleaseJniLibFolders/merger.xml	(revision )
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="utf-8"?>
+<merger version="3"><dataSet config="main"><source path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\jniLibs"/></dataSet><dataSet config="release"><source path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\release\jniLibs"/></dataSet></merger>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/res/merged/androidTest/debug/values-de/values-de.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/res/merged/androidTest/debug/values-de/values-de.xml	(revision )
+++ PullToRefresh/build/intermediates/res/merged/androidTest/debug/values-de/values-de.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="pull_to_refresh_pull_label">Ziehen zum Aktualisieren…</string>
+    <string name="pull_to_refresh_refreshing_label">Laden…</string>
+    <string name="pull_to_refresh_release_label">Loslassen zum Aktualisieren…</string>
+</resources>
\ No newline at end of file
Index: PullToRefresh/src/main/res/values/attrs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/src/main/res/values/attrs.xml	(revision )
+++ PullToRefresh/src/main/res/values/attrs.xml	(revision )
@@ -0,0 +1,80 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+
+    <declare-styleable name="PullToRefresh">
+
+        <!-- A drawable to use as the background of the Refreshable View -->
+        <attr name="ptrRefreshableViewBackground" format="reference|color" />
+
+        <!-- A drawable to use as the background of the Header and Footer Loading Views -->
+        <attr name="ptrHeaderBackground" format="reference|color" />
+
+        <!-- Text Color of the Header and Footer Loading Views -->
+        <attr name="ptrHeaderTextColor" format="reference|color" />
+
+        <!-- Text Color of the Header and Footer Loading Views Sub Header -->
+        <attr name="ptrHeaderSubTextColor" format="reference|color" />
+
+        <!-- Mode of Pull-to-Refresh that should be used -->
+        <attr name="ptrMode">
+            <flag name="disabled" value="0x0" />
+            <flag name="pullFromStart" value="0x1" />
+            <flag name="pullFromEnd" value="0x2" />
+            <flag name="both" value="0x3" />
+            <flag name="manualOnly" value="0x4" />
+
+            <!-- These last two are depreacted -->
+            <flag name="pullDownFromTop" value="0x1" />
+            <flag name="pullUpFromBottom" value="0x2" />
+        </attr>
+
+        <!-- Whether the Indicator overlay(s) should be used -->
+        <attr name="ptrShowIndicator" format="reference|boolean" />
+
+        <!-- Drawable to use as Loading Indicator. Changes both Header and Footer. -->
+        <attr name="ptrDrawable" format="reference" />
+
+        <!-- Drawable to use as Loading Indicator in the Header View. Overrides value set in ptrDrawable. -->
+        <attr name="ptrDrawableStart" format="reference" />
+
+        <!-- Drawable to use as Loading Indicator in the Footer View. Overrides value set in ptrDrawable. -->
+        <attr name="ptrDrawableEnd" format="reference" />
+
+        <!-- Whether Android's built-in Over Scroll should be utilised for Pull-to-Refresh. -->
+        <attr name="ptrOverScroll" format="reference|boolean" />
+
+        <!-- Base text color, typeface, size, and style for Header and Footer Loading Views -->
+        <attr name="ptrHeaderTextAppearance" format="reference" />
+
+        <!-- Base text color, typeface, size, and style for Header and Footer Loading Views Sub Header -->
+        <attr name="ptrSubHeaderTextAppearance" format="reference" />
+
+        <!-- Style of Animation should be used displayed when pulling. -->
+        <attr name="ptrAnimationStyle">
+            <flag name="rotate" value="0x0" />
+            <flag name="flip" value="0x1" />
+        </attr>
+
+        <!-- Whether the user can scroll while the View is Refreshing -->
+        <attr name="ptrScrollingWhileRefreshingEnabled" format="reference|boolean" />
+
+        <!--
+        	Whether PullToRefreshListView has it's extras enabled. This allows the user to be 
+        	able to scroll while refreshing, and behaves better. It acheives this by adding
+        	Header and/or Footer Views to the ListView.
+        -->
+        <attr name="ptrListViewExtrasEnabled" format="reference|boolean" />
+
+        <!--
+        	Whether the Drawable should be continually rotated as you pull. This only
+        	takes effect when using the 'Rotate' Animation Style.
+        -->
+        <attr name="ptrRotateDrawableWhilePulling" format="reference|boolean" />
+
+        <!-- BELOW HERE ARE DEPRECEATED. DO NOT USE. -->
+        <attr name="ptrAdapterViewBackground" format="reference|color" />
+        <attr name="ptrDrawableTop" format="reference" />
+        <attr name="ptrDrawableBottom" format="reference" />
+    </declare-styleable>
+
+</resources>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/res/merged/androidTest/debug/values-ja/values-ja.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/res/merged/androidTest/debug/values-ja/values-ja.xml	(revision )
+++ PullToRefresh/build/intermediates/res/merged/androidTest/debug/values-ja/values-ja.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="pull_to_refresh_pull_label">画面を引っ張って…</string>
+    <string name="pull_to_refresh_refreshing_label">読み込み中…</string>
+    <string name="pull_to_refresh_release_label">指を離して更新…</string>
+</resources>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/bundles/release/res/values-pt-rBR/values-pt-rBR.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/bundles/release/res/values-pt-rBR/values-pt-rBR.xml	(revision )
+++ PullToRefresh/build/intermediates/bundles/release/res/values-pt-rBR/values-pt-rBR.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="pull_to_refresh_pull_label">Puxe para atualizar…</string>
+    <string name="pull_to_refresh_refreshing_label">Carregando…</string>
+    <string name="pull_to_refresh_release_label">Libere para atualizar…</string>
+</resources>
\ No newline at end of file
Index: app/src/main/java/com/example/victor/weathertest3/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/victor/weathertest3/MainActivity.java	(revision )
+++ app/src/main/java/com/example/victor/weathertest3/MainActivity.java	(revision )
@@ -0,0 +1,240 @@
+package com.example.victor.weathertest3;
+
+import android.app.Activity;
+import android.content.ComponentName;
+import android.content.Context;
+import android.content.Intent;
+import android.content.ServiceConnection;
+import android.os.Bundle;
+import android.os.IBinder;
+import android.util.Log;
+import android.view.View;
+import android.widget.ImageView;
+import android.widget.RelativeLayout;
+import android.widget.ScrollView;
+import android.widget.TextView;
+
+import com.example.victor.weathertest3.bean.SixDayWeatherBean;
+import com.example.victor.weathertest3.bean.WeatherBean;
+import com.example.victor.weathertest3.service.WeatherService;
+import com.handmark.pulltorefresh.library.PullToRefreshBase;
+import com.handmark.pulltorefresh.library.PullToRefreshScrollView;
+
+import java.util.List;
+
+
+public class MainActivity extends Activity {
+
+    private Context mContext;
+    private PullToRefreshScrollView pullToRefreshScrollView;
+    private ScrollView scrollView;
+    private WeatherService mService;
+
+    private RelativeLayout rl_city;
+
+    private TextView tv_city,// 城市
+            tv_release,// 发布时间
+            tv_now_weather,// 天气
+            tv_today_maxTemp,// 最高温度
+            tv_today_minTemp,// 最低温度
+            tv_now_temp,// 当前温度
+            tv_aqi,// 空气质量指数
+            tv_quality,// 空气质量
+            tv_today,// 预报今天
+            tv_tomorrow,// 明天
+            tv_thirdDay,// 第三天
+            tv_fourthDay,// 第四天
+            tv_fifthDay,// 第五天
+            tv_sixthDay,// 第六天
+            tv_today_temp,// 今天温度
+            tv_tomorrow_temp,// 明天温度
+            tv_thirdDay_temp,// 第三天温度
+            tv_fourthDay_temp,// 第四天温度
+            tv_fifthDay_temp,// 第五天温度
+            tv_sixthDay_temp,// 第六天温度
+            tv_wind_direction,// 风向
+            tv_wind_power,// 风力
+            tv_sunrise,// 日出
+            tv_sunset,// 日落
+            tv_humidity,// 湿度
+            tv_sendible_temperature,// 体感温度
+            tv_exercise_index,// 运动指数
+            tv_carWash_index,// 洗车指数
+            tv_uv_index,// 紫外线指数
+            tv_dressing_index,// 穿衣指数
+            tv_travel_index,// 旅行指数
+            tv_sunscreen_index,// 防晒指数
+            tv_cold_index,// 感冒指数
+            tv_comfort_index;//舒适指数
+
+    private ImageView iv_now_weather,// 现在
+            iv_today,// 预报今天
+            iv_tomorrow,// 明天
+            iv_thirdDay,// 第三天
+            iv_fourthDay,// 第四天
+            iv_fifthDay,// 第五天
+            iv_sixthDay;// 第六天
+
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_main);
+        mContext = this;
+        init();
+        initService();
+    }
+
+    private void initService(){
+        Intent inter = new Intent(mContext, WeatherService.class);
+        startService(inter);
+        bindService(inter,conn,Context.BIND_AUTO_CREATE);
+    }
+
+    ServiceConnection conn=new ServiceConnection() {
+        @Override
+        public void onServiceConnected(ComponentName name, IBinder service) {
+            mService = ((WeatherService.WeatherServiceBinder)service).getService();
+            mService.setCallBack(new WeatherService.OnParserCallBack() {
+                @Override
+                public void OnParserComplete(WeatherBean bean) {
+                    pullToRefreshScrollView.onRefreshComplete();
+                    if(bean != null){
+                        setWeatherViews(bean);
+                    }
+                }
+            });
+            mService.getCityWeather();
+        }
+
+        @Override
+        public void onServiceDisconnected(ComponentName name) {
+            mService.removeCallBack();
+        }
+    };
+
+    private void init(){
+        pullToRefreshScrollView = (PullToRefreshScrollView) findViewById(R.id.my_list);
+        pullToRefreshScrollView.setOnRefreshListener(new PullToRefreshBase.OnRefreshListener<ScrollView>() {
+            @Override
+            public void onRefresh(PullToRefreshBase<ScrollView> refreshView) {
+                mService.getCityWeather();
+            }
+        });
+        scrollView = pullToRefreshScrollView.getRefreshableView();
+
+        rl_city = (RelativeLayout) findViewById(R.id.rl_city);
+        rl_city.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                startActivityForResult(new Intent(mContext,CityActivity.class),1);
+            }
+        });
+
+
+        tv_city = (TextView) findViewById(R.id.tv_city);
+        tv_release = (TextView) findViewById(R.id.tv_release);
+        tv_now_weather = (TextView) findViewById(R.id.tv_now_weather);
+        tv_today_maxTemp = (TextView) findViewById(R.id.tv_today_maxTemp);
+        tv_today_minTemp = (TextView) findViewById(R.id.tv_today_minTemp);
+        tv_now_temp = (TextView) findViewById(R.id.tv_now_temp);
+        tv_aqi = (TextView) findViewById(R.id.tv_aqi);
+        tv_quality = (TextView) findViewById(R.id.tv_quality);
+        tv_today = (TextView) findViewById(R.id.tv_today);
+        tv_tomorrow = (TextView) findViewById(R.id.tv_tomorrow);
+        tv_thirdDay = (TextView) findViewById(R.id.tv_thirdDay);
+        tv_fourthDay = (TextView) findViewById(R.id.tv_fourthDay);
+        tv_fifthDay = (TextView) findViewById(R.id.tv_fifthDay);
+        tv_sixthDay = (TextView) findViewById(R.id.tv_sixthDay);
+        tv_today_temp = (TextView) findViewById(R.id.tv_today_temp);
+        tv_tomorrow_temp = (TextView) findViewById(R.id.tv_tomorrow_temp);
+        tv_thirdDay_temp = (TextView) findViewById(R.id.tv_thirdDay_temp);
+        tv_fourthDay_temp = (TextView) findViewById(R.id.tv_fourthDay_temp);
+        tv_fifthDay_temp = (TextView) findViewById(R.id.tv_fifthDay_temp);
+        tv_sixthDay_temp = (TextView) findViewById(R.id.tv_sixthDay_temp);
+        tv_wind_direction = (TextView) findViewById(R.id.tv_windDirection);
+        tv_wind_power = (TextView) findViewById(R.id.tv_windPower);
+        tv_sunrise = (TextView) findViewById(R.id.tv_sunrise);
+        tv_sunset = (TextView) findViewById(R.id.tv_sunset);
+        tv_humidity = (TextView) findViewById(R.id.tv_humidity);
+        tv_sendible_temperature = (TextView) findViewById(R.id.tv_sendibleTemperature);
+        tv_exercise_index = (TextView) findViewById(R.id.tv_exercise_index);
+        tv_carWash_index = (TextView) findViewById(R.id.tv_carWash_index);
+        tv_dressing_index = (TextView) findViewById(R.id.tv_dressing_index);
+        tv_travel_index = (TextView) findViewById(R.id.tv_travel_index);
+        tv_sunscreen_index = (TextView) findViewById(R.id.tv_sunscreen_index);
+        tv_cold_index = (TextView) findViewById(R.id.tv_cold_index);
+        tv_comfort_index = (TextView) findViewById(R.id.tv_comfort_index);
+        tv_uv_index = (TextView) findViewById(R.id.tv_uv_index);
+
+        iv_now_weather = (ImageView) findViewById(R.id.iv_now_weather);
+        iv_today = (ImageView) findViewById(R.id.iv_today);
+        iv_tomorrow = (ImageView) findViewById(R.id.iv_tomorrow);
+        iv_thirdDay = (ImageView) findViewById(R.id.iv_thirdDay);
+        iv_fourthDay = (ImageView) findViewById(R.id.iv_fourthDay);
+        iv_fifthDay = (ImageView) findViewById(R.id.iv_fifthDay);
+        iv_sixthDay = (ImageView) findViewById(R.id.iv_sixthDay);
+    }
+
+    @Override
+    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
+        if(requestCode == 1 && resultCode == 1){
+            String city = data.getStringExtra("city");
+            mService.getCityWeather(city);
+        }
+    }
+
+    private void setWeatherViews(WeatherBean bean) {
+        tv_city.setText(bean.getCity());
+        tv_release.setText(bean.getRelease());
+        tv_now_weather.setText(bean.getWeather_str());
+        tv_today_maxTemp.setText(bean.getMax_temp()+"°");
+        tv_today_minTemp.setText(bean.getMin_temp()+"°");
+        tv_now_temp.setText(bean.getNow_temp() + "°");
+        if(bean.getPmBean() != null){
+            tv_aqi.setText(bean.getPmBean().getAqi());
+            tv_quality.setText(bean.getPmBean().getQuality());
+        }else{
+            tv_aqi.setText(R.string.default_text);
+            tv_quality.setText(R.string.default_text);
+        }
+        tv_wind_direction.setText(bean.getWind_direction());
+        tv_wind_power.setText(bean.getWind_power()+"级");
+        tv_sunrise.setText(bean.getSunrise());
+        tv_sunset.setText(bean.getSunset());
+        tv_humidity.setText(bean.getHumidity()+"%");
+        tv_sendible_temperature.setText(bean.getSendible_temperature()+"°");
+        tv_exercise_index.setText(bean.getExercise_index());
+        tv_carWash_index.setText(bean.getCarWash_index());
+        tv_dressing_index.setText(bean.getDressing_index());
+        tv_uv_index.setText(bean.getUv_index());
+        tv_travel_index.setText(bean.getTravel_index());
+        tv_sunscreen_index.setText(bean.getSunscreen_index());
+        tv_cold_index.setText(bean.getCold_index());
+        tv_comfort_index.setText(bean.getComfort_index());
+        iv_now_weather.setImageResource(getResources().getIdentifier("d" + bean.getWeather_id(), "drawable", mContext.getPackageName()));
+        Log.e("err",bean.getWeather_id());
+        setSixDayWeatherViews(bean.getSixDayList());
+    }
+
+    private void setSixDayWeatherViews(List<SixDayWeatherBean> list) {
+        setSixDayWeather(tv_today, iv_today, tv_today_temp, list.get(0));
+        setSixDayWeather(tv_tomorrow, iv_tomorrow, tv_tomorrow_temp, list.get(1));
+        setSixDayWeather(tv_thirdDay, iv_thirdDay, tv_thirdDay_temp, list.get(2));
+        setSixDayWeather(tv_fourthDay, iv_fourthDay, tv_fourthDay_temp, list.get(3));
+        setSixDayWeather(tv_fifthDay, iv_fifthDay, tv_fifthDay_temp, list.get(4));
+        setSixDayWeather(tv_sixthDay, iv_sixthDay, tv_sixthDay_temp, list.get(5));
+    }
+
+    private void setSixDayWeather(TextView tv_day, ImageView iv_weather, TextView tv_temp, SixDayWeatherBean bean) {
+        tv_day.setText(bean.getDate());
+        iv_weather.setImageResource(getResources().getIdentifier("d" + bean.getWeather_id(), "drawable", mContext.getPackageName()));
+        tv_temp.setText(bean.getMaxTemp() + "°/"+bean.getMinTemp() + "°");
+    }
+
+    @Override
+    protected void onDestroy() {
+        unbindService(conn);
+        super.onDestroy();
+    }
+}
Index: PullToRefresh/build/intermediates/bundles/release/res/values-cs/values-cs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/bundles/release/res/values-cs/values-cs.xml	(revision )
+++ PullToRefresh/build/intermediates/bundles/release/res/values-cs/values-cs.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="pull_to_refresh_pull_label">Tažením aktualizujete…</string>
+    <string name="pull_to_refresh_refreshing_label">Načítání…</string>
+    <string name="pull_to_refresh_release_label">Uvolněním aktualizujete…</string>
+</resources>
\ No newline at end of file
Index: PullToRefresh/src/main/res/values-nl/pull_refresh_strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/src/main/res/values-nl/pull_refresh_strings.xml	(revision )
+++ PullToRefresh/src/main/res/values-nl/pull_refresh_strings.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+  <string name="pull_to_refresh_pull_label">Sleep om te vernieuwen…</string>
+  <string name="pull_to_refresh_release_label">Loslaten om te vernieuwen…</string>
+  <string name="pull_to_refresh_refreshing_label">Laden…</string>
+</resources>
Index: PullToRefresh/build/intermediates/res/merged/androidTest/debug/values-nl/values-nl.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/res/merged/androidTest/debug/values-nl/values-nl.xml	(revision )
+++ PullToRefresh/build/intermediates/res/merged/androidTest/debug/values-nl/values-nl.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="pull_to_refresh_pull_label">Sleep om te vernieuwen…</string>
+    <string name="pull_to_refresh_refreshing_label">Laden…</string>
+    <string name="pull_to_refresh_release_label">Loslaten om te vernieuwen…</string>
+</resources>
\ No newline at end of file
Index: app/src/main/res/values/dimens.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/dimens.xml	(revision )
+++ app/src/main/res/values/dimens.xml	(revision )
@@ -0,0 +1,5 @@
+<resources>
+    <!-- Default screen margins, per the Android Design guidelines. -->
+    <dimen name="activity_horizontal_margin">16dp</dimen>
+    <dimen name="activity_vertical_margin">16dp</dimen>
+</resources>
Index: PullToRefresh/src/main/res/values-pt/pull_refresh_strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/src/main/res/values-pt/pull_refresh_strings.xml	(revision )
+++ PullToRefresh/src/main/res/values-pt/pull_refresh_strings.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+  <string name="pull_to_refresh_pull_label">Puxe para atualizar…</string>
+  <string name="pull_to_refresh_release_label">Liberação para atualizar…</string>
+  <string name="pull_to_refresh_refreshing_label">A carregar…</string>
+</resources>
Index: PullToRefresh/build/intermediates/bundles/debug/res/values-pl/values-pl.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/bundles/debug/res/values-pl/values-pl.xml	(revision )
+++ PullToRefresh/build/intermediates/bundles/debug/res/values-pl/values-pl.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="pull_to_refresh_pull_label">Pociągnij, aby odświeżyć…</string>
+    <string name="pull_to_refresh_refreshing_label">Wczytywanie…</string>
+    <string name="pull_to_refresh_release_label">Puść, aby odświeżyć…</string>
+</resources>
\ No newline at end of file
Index: import-summary.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- import-summary.txt	(revision )
+++ import-summary.txt	(revision )
@@ -0,0 +1,35 @@
+ECLIPSE ANDROID PROJECT IMPORT SUMMARY
+======================================
+
+Ignored Files:
+--------------
+The following files were *not* copied into the new Gradle project; you
+should evaluate whether these are still needed in your project and if
+so manually move them:
+
+* LICENSE
+* pom.xml
+
+Moved Files:
+------------
+Android Gradle projects use a different directory structure than ADT
+Eclipse projects. Here's how the projects were restructured:
+
+* AndroidManifest.xml => PullToRefresh\src\main\AndroidManifest.xml
+* res\ => PullToRefresh\src\main\res\
+* src\ => PullToRefresh\src\main\java\
+
+Next Steps:
+-----------
+You can now build the project. The Gradle project needs network
+connectivity to download dependencies.
+
+Bugs:
+-----
+If for some reason your project does not build, and you determine that
+it is due to a bug or limitation of the Eclipse to Gradle importer,
+please file a bug at http://b.android.com with category
+Component-Tools.
+
+(This import summary is for your information only, and can be deleted
+after import once you are satisfied with the results.)
Index: PullToRefresh/build/intermediates/bundles/release/res/values-ro/values-ro.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/bundles/release/res/values-ro/values-ro.xml	(revision )
+++ PullToRefresh/build/intermediates/bundles/release/res/values-ro/values-ro.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="pull_to_refresh_pull_label">Trage pentru a reîmprospăta…</string>
+    <string name="pull_to_refresh_refreshing_label">Încărcare…</string>
+    <string name="pull_to_refresh_release_label">Eliberează pentru a reîmprospăta…</string>
+</resources>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/res/merged/androidTest/debug/drawable/indicator_bg_bottom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/res/merged/androidTest/debug/drawable/indicator_bg_bottom.xml	(revision )
+++ PullToRefresh/build/intermediates/res/merged/androidTest/debug/drawable/indicator_bg_bottom.xml	(revision )
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="rectangle" >
+
+    <solid android:color="#40000000" />
+
+    <!--
+    I know the android:radius is useless here but it's needed to fix an old bug:
+    http://code.google.com/p/android/issues/detail?id=939
+    -->
+    <corners
+        android:bottomLeftRadius="0dp"
+        android:bottomRightRadius="0dp"
+        android:radius="1dp"
+        android:topLeftRadius="@dimen/indicator_corner_radius"
+        android:topRightRadius="@dimen/indicator_corner_radius" />
+
+</shape>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/bundles/debug/res/anim/slide_in_from_top.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/bundles/debug/res/anim/slide_in_from_top.xml	(revision )
+++ PullToRefresh/build/intermediates/bundles/debug/res/anim/slide_in_from_top.xml	(revision )
@@ -0,0 +1,21 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+     Copyright (C) 2009 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+
+<translate xmlns:android="http://schemas.android.com/apk/res/android"
+    android:duration="@android:integer/config_longAnimTime"
+    android:fromYDelta="-100%p"
+    android:toYDelta="0" />
Index: PullToRefresh/build/generated/source/buildConfig/release/com/handmark/pulltorefresh/library/BuildConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/generated/source/buildConfig/release/com/handmark/pulltorefresh/library/BuildConfig.java	(revision )
+++ PullToRefresh/build/generated/source/buildConfig/release/com/handmark/pulltorefresh/library/BuildConfig.java	(revision )
@@ -0,0 +1,13 @@
+/**
+ * Automatically generated file. DO NOT MODIFY
+ */
+package com.handmark.pulltorefresh.library;
+
+public final class BuildConfig {
+  public static final boolean DEBUG = false;
+  public static final String APPLICATION_ID = "com.handmark.pulltorefresh.library";
+  public static final String BUILD_TYPE = "release";
+  public static final String FLAVOR = "";
+  public static final int VERSION_CODE = 2110;
+  public static final String VERSION_NAME = "2.1.1";
+}
Index: PullToRefresh/build/intermediates/bundles/release/res/values-nl/values-nl.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/bundles/release/res/values-nl/values-nl.xml	(revision )
+++ PullToRefresh/build/intermediates/bundles/release/res/values-nl/values-nl.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="pull_to_refresh_pull_label">Sleep om te vernieuwen…</string>
+    <string name="pull_to_refresh_refreshing_label">Laden…</string>
+    <string name="pull_to_refresh_release_label">Loslaten om te vernieuwen…</string>
+</resources>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/bundles/release/res/values-ru/values-ru.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/bundles/release/res/values-ru/values-ru.xml	(revision )
+++ PullToRefresh/build/intermediates/bundles/release/res/values-ru/values-ru.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="pull_to_refresh_pull_label">Потяните для обновления…</string>
+    <string name="pull_to_refresh_refreshing_label">Загрузка…</string>
+    <string name="pull_to_refresh_release_label">Отпустите для обновления…</string>
+</resources>
\ No newline at end of file
Index: .idea/runConfigurations.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/runConfigurations.xml	(revision )
+++ .idea/runConfigurations.xml	(revision )
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="RunConfigurationProducerService">
+    <option name="ignoredProducers">
+      <set>
+        <option value="org.jetbrains.plugins.gradle.execution.test.runner.AllInPackageGradleConfigurationProducer" />
+        <option value="org.jetbrains.plugins.gradle.execution.test.runner.TestClassGradleConfigurationProducer" />
+        <option value="org.jetbrains.plugins.gradle.execution.test.runner.TestMethodGradleConfigurationProducer" />
+      </set>
+    </option>
+  </component>
+</project>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/incremental/mergeReleaseAssets/merger.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/incremental/mergeReleaseAssets/merger.xml	(revision )
+++ PullToRefresh/build/intermediates/incremental/mergeReleaseAssets/merger.xml	(revision )
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="utf-8"?>
+<merger version="3"><dataSet config="main"><source path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\assets"/></dataSet><dataSet config="release"><source path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\release\assets"/></dataSet></merger>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/bundles/release/res/anim/slide_out_to_bottom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/bundles/release/res/anim/slide_out_to_bottom.xml	(revision )
+++ PullToRefresh/build/intermediates/bundles/release/res/anim/slide_out_to_bottom.xml	(revision )
@@ -0,0 +1,21 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+     Copyright (C) 2009 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+
+<translate xmlns:android="http://schemas.android.com/apk/res/android"
+    android:duration="@android:integer/config_longAnimTime"
+    android:fromYDelta="0"
+    android:toYDelta="100%p" />
Index: PullToRefresh/build/intermediates/res/merged/androidTest/debug/values-cs/values-cs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/res/merged/androidTest/debug/values-cs/values-cs.xml	(revision )
+++ PullToRefresh/build/intermediates/res/merged/androidTest/debug/values-cs/values-cs.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="pull_to_refresh_pull_label">Tažením aktualizujete…</string>
+    <string name="pull_to_refresh_refreshing_label">Načítání…</string>
+    <string name="pull_to_refresh_release_label">Uvolněním aktualizujete…</string>
+</resources>
\ No newline at end of file
Index: app/src/main/java/com/example/victor/weathertest3/bean/PMBean.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/victor/weathertest3/bean/PMBean.java	(revision )
+++ app/src/main/java/com/example/victor/weathertest3/bean/PMBean.java	(revision )
@@ -0,0 +1,24 @@
+package com.example.victor.weathertest3.bean;
+
+public class PMBean {
+
+	private String aqi;// 空气质量指数
+	private String quality;
+
+	public String getAqi() {
+		return aqi;
+	}
+
+	public void setAqi(String aqi) {
+		this.aqi = aqi;
+	}
+
+	public String getQuality() {
+		return quality;
+	}
+
+	public void setQuality(String quality) {
+		this.quality = quality;
+	}
+
+}
Index: PullToRefresh/build/intermediates/blame/res/androidTest/debug/multi/values.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/blame/res/androidTest/debug/multi/values.json	(revision )
+++ PullToRefresh/build/intermediates/blame/res/androidTest/debug/multi/values.json	(revision )
@@ -0,0 +1,273 @@
+[
+    {
+        "outputFile": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\res\\merged\\androidTest\\debug\\values\\values.xml",
+        "map": [
+            {
+                "to": {
+                    "startLine": 3,
+                    "startColumn": 4,
+                    "startOffset": 1511,
+                    "endColumn": 63,
+                    "endOffset": 1570
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values\\values.xml",
+                    "position": {
+                        "startLine": 3,
+                        "startColumn": 4,
+                        "startOffset": 1511,
+                        "endColumn": 63,
+                        "endOffset": 1570
+                    }
+                }
+            },
+            {
+                "to": {
+                    "startLine": 4,
+                    "startColumn": 4,
+                    "startOffset": 1575,
+                    "endColumn": 63,
+                    "endOffset": 1634
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values\\values.xml",
+                    "position": {
+                        "startLine": 4,
+                        "startColumn": 4,
+                        "startOffset": 1575,
+                        "endColumn": 63,
+                        "endOffset": 1634
+                    }
+                }
+            },
+            {
+                "to": {
+                    "startLine": 5,
+                    "startColumn": 4,
+                    "startOffset": 1639,
+                    "endColumn": 54,
+                    "endOffset": 1689
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values\\values.xml",
+                    "position": {
+                        "startLine": 5,
+                        "startColumn": 4,
+                        "startOffset": 1639,
+                        "endColumn": 54,
+                        "endOffset": 1689
+                    }
+                }
+            },
+            {
+                "to": {
+                    "startLine": 6,
+                    "startColumn": 4,
+                    "startOffset": 1694,
+                    "endColumn": 56,
+                    "endOffset": 1746
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values\\values.xml",
+                    "position": {
+                        "startLine": 6,
+                        "startColumn": 4,
+                        "startOffset": 1694,
+                        "endColumn": 56,
+                        "endOffset": 1746
+                    }
+                }
+            },
+            {
+                "to": {
+                    "startLine": 7,
+                    "startColumn": 4,
+                    "startOffset": 1751,
+                    "endColumn": 54,
+                    "endOffset": 1801
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values\\values.xml",
+                    "position": {
+                        "startLine": 7,
+                        "startColumn": 4,
+                        "startOffset": 1751,
+                        "endColumn": 54,
+                        "endOffset": 1801
+                    }
+                }
+            },
+            {
+                "to": {
+                    "startLine": 8,
+                    "startColumn": 4,
+                    "startOffset": 1806,
+                    "endColumn": 37,
+                    "endOffset": 1839
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values\\values.xml",
+                    "position": {
+                        "startLine": 8,
+                        "startColumn": 4,
+                        "startOffset": 1806,
+                        "endColumn": 37,
+                        "endOffset": 1839
+                    }
+                }
+            },
+            {
+                "to": {
+                    "startLine": 9,
+                    "startColumn": 4,
+                    "startOffset": 1844,
+                    "endColumn": 39,
+                    "endOffset": 1879
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values\\values.xml",
+                    "position": {
+                        "startLine": 9,
+                        "startColumn": 4,
+                        "startOffset": 1844,
+                        "endColumn": 39,
+                        "endOffset": 1879
+                    }
+                }
+            },
+            {
+                "to": {
+                    "startLine": 10,
+                    "startColumn": 4,
+                    "startOffset": 1884,
+                    "endColumn": 36,
+                    "endOffset": 1916
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values\\values.xml",
+                    "position": {
+                        "startLine": 10,
+                        "startColumn": 4,
+                        "startOffset": 1884,
+                        "endColumn": 36,
+                        "endOffset": 1916
+                    }
+                }
+            },
+            {
+                "to": {
+                    "startLine": 11,
+                    "startColumn": 4,
+                    "startOffset": 1921,
+                    "endColumn": 101,
+                    "endOffset": 2018
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values\\values.xml",
+                    "position": {
+                        "startLine": 11,
+                        "startColumn": 4,
+                        "startOffset": 1921,
+                        "endColumn": 101,
+                        "endOffset": 2018
+                    }
+                }
+            },
+            {
+                "to": {
+                    "startLine": 12,
+                    "startColumn": 4,
+                    "startOffset": 2023,
+                    "endColumn": 113,
+                    "endOffset": 2132
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values\\values.xml",
+                    "position": {
+                        "startLine": 12,
+                        "startColumn": 4,
+                        "startOffset": 2023,
+                        "endColumn": 113,
+                        "endOffset": 2132
+                    }
+                }
+            },
+            {
+                "to": {
+                    "startLine": 13,
+                    "startColumn": 4,
+                    "startOffset": 2137,
+                    "endColumn": 107,
+                    "endOffset": 2240
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values\\values.xml",
+                    "position": {
+                        "startLine": 13,
+                        "startColumn": 4,
+                        "startOffset": 2137,
+                        "endColumn": 107,
+                        "endOffset": 2240
+                    }
+                }
+            },
+            {
+                "to": {
+                    "startLine": 14,
+                    "startColumn": 4,
+                    "startOffset": 2245,
+                    "endColumn": 71,
+                    "endOffset": 2312
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values\\values.xml",
+                    "position": {
+                        "startLine": 14,
+                        "startColumn": 4,
+                        "startOffset": 2245,
+                        "endColumn": 71,
+                        "endOffset": 2312
+                    }
+                }
+            },
+            {
+                "to": {
+                    "startLine": 15,
+                    "startColumn": 4,
+                    "startOffset": 2317,
+                    "endColumn": 69,
+                    "endOffset": 2382
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values\\values.xml",
+                    "position": {
+                        "startLine": 15,
+                        "startColumn": 4,
+                        "startOffset": 2317,
+                        "endColumn": 69,
+                        "endOffset": 2382
+                    }
+                }
+            },
+            {
+                "to": {
+                    "startLine": 16,
+                    "startColumn": 4,
+                    "startOffset": 2387,
+                    "endColumn": 77,
+                    "endOffset": 2460
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values\\values.xml",
+                    "position": {
+                        "startLine": 16,
+                        "startColumn": 4,
+                        "startOffset": 2387,
+                        "endColumn": 77,
+                        "endOffset": 2460
+                    }
+                }
+            }
+        ]
+    }
+]
\ No newline at end of file
Index: app/src/main/res/values/styles.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/styles.xml	(revision )
+++ app/src/main/res/values/styles.xml	(revision )
@@ -0,0 +1,50 @@
+<resources xmlns:android="http://schemas.android.com/apk/res/android">
+
+    <!--
+        Base application theme, dependent on API level. This theme is replaced
+        by AppBaseTheme from res/values-vXX/styles.xml on newer devices.
+    -->
+    <style name="AppBaseTheme" parent="android:Theme.Light">
+        <!--
+            Theme customizations available in newer API levels can go in
+            res/values-vXX/styles.xml, while customizations related to
+            backward-compatibility can go here.
+        -->
+    </style>
+
+    <!-- Application theme. -->
+    <style name="AppTheme" parent="AppBaseTheme">
+        <!-- All customizations that are NOT specific to a particular API-level can go here. -->
+    </style>
+    
+    <style name="ViewStyle">
+        <item name="android:layout_width">match_parent</item>
+        <item name="android:layout_height">wrap_content</item>
+        <item name="android:layout_weight">1</item>
+        <item name="android:gravity">center</item>
+    </style>
+
+    <style name="TextViewStyle" parent="ViewStyle">
+        <item name="android:textSize">12sp</item>
+        <item name="android:textColor">@color/text_color</item>
+        <item name="android:text">@string/default_text</item>
+    </style>
+
+    <style name="indexStyle">
+        <item name="android:textSize">12sp</item>
+        <item name="android:layout_width">wrap_content</item>
+        <item name="android:layout_height">wrap_content</item>
+        <item name="android:layout_gravity">center_horizontal</item>
+        <item name="android:textColor">@color/text_color</item>
+        <item name="android:text">@string/default_text</item>
+    </style>
+
+    <style name="indexValueStyle">
+        <item name="android:textSize">12sp</item>
+        <item name="android:layout_width">wrap_content</item>
+        <item name="android:layout_height">wrap_content</item>
+        <item name="android:layout_gravity">center_horizontal</item>
+        <item name="android:textColor">@android:color/black</item>
+    </style>
+
+</resources>
Index: PullToRefresh/build/intermediates/res/merged/androidTest/debug/values-ru/values-ru.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/res/merged/androidTest/debug/values-ru/values-ru.xml	(revision )
+++ PullToRefresh/build/intermediates/res/merged/androidTest/debug/values-ru/values-ru.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="pull_to_refresh_pull_label">Потяните для обновления…</string>
+    <string name="pull_to_refresh_refreshing_label">Загрузка…</string>
+    <string name="pull_to_refresh_release_label">Отпустите для обновления…</string>
+</resources>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/blame/res/androidTest/debug/single/drawable-mdpi-v4.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/blame/res/androidTest/debug/single/drawable-mdpi-v4.json	(revision )
+++ PullToRefresh/build/intermediates/blame/res/androidTest/debug/single/drawable-mdpi-v4.json	(revision )
@@ -0,0 +1,14 @@
+[
+    {
+        "merged": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\res\\merged\\androidTest\\debug\\drawable-mdpi-v4\\default_ptr_rotate.png",
+        "source": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\drawable-mdpi-v4\\default_ptr_rotate.png"
+    },
+    {
+        "merged": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\res\\merged\\androidTest\\debug\\drawable-mdpi-v4\\default_ptr_flip.png",
+        "source": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\drawable-mdpi-v4\\default_ptr_flip.png"
+    },
+    {
+        "merged": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\res\\merged\\androidTest\\debug\\drawable-mdpi-v4\\indicator_arrow.png",
+        "source": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\drawable-mdpi-v4\\indicator_arrow.png"
+    }
+]
\ No newline at end of file
Index: PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/internal/RotateLoadingLayout.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/internal/RotateLoadingLayout.java	(revision )
+++ PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/internal/RotateLoadingLayout.java	(revision )
@@ -0,0 +1,110 @@
+/*******************************************************************************
+ * Copyright 2011, 2012 Chris Banes.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ *******************************************************************************/
+package com.handmark.pulltorefresh.library.internal;
+
+import android.content.Context;
+import android.content.res.TypedArray;
+import android.graphics.Matrix;
+import android.graphics.drawable.Drawable;
+import android.view.animation.Animation;
+import android.view.animation.RotateAnimation;
+import android.widget.ImageView.ScaleType;
+
+import com.handmark.pulltorefresh.library.PullToRefreshBase.Mode;
+import com.handmark.pulltorefresh.library.PullToRefreshBase.Orientation;
+import com.handmark.pulltorefresh.library.R;
+
+public class RotateLoadingLayout extends LoadingLayout {
+
+	static final int ROTATION_ANIMATION_DURATION = 1200;
+
+	private final Animation mRotateAnimation;
+	private final Matrix mHeaderImageMatrix;
+
+	private float mRotationPivotX, mRotationPivotY;
+
+	private final boolean mRotateDrawableWhilePulling;
+
+	public RotateLoadingLayout(Context context, Mode mode, Orientation scrollDirection, TypedArray attrs) {
+		super(context, mode, scrollDirection, attrs);
+
+		mRotateDrawableWhilePulling = attrs.getBoolean(R.styleable.PullToRefresh_ptrRotateDrawableWhilePulling, true);
+
+		mHeaderImage.setScaleType(ScaleType.MATRIX);
+		mHeaderImageMatrix = new Matrix();
+		mHeaderImage.setImageMatrix(mHeaderImageMatrix);
+
+		mRotateAnimation = new RotateAnimation(0, 720, Animation.RELATIVE_TO_SELF, 0.5f, Animation.RELATIVE_TO_SELF,
+				0.5f);
+		mRotateAnimation.setInterpolator(ANIMATION_INTERPOLATOR);
+		mRotateAnimation.setDuration(ROTATION_ANIMATION_DURATION);
+		mRotateAnimation.setRepeatCount(Animation.INFINITE);
+		mRotateAnimation.setRepeatMode(Animation.RESTART);
+	}
+
+	public void onLoadingDrawableSet(Drawable imageDrawable) {
+		if (null != imageDrawable) {
+			mRotationPivotX = Math.round(imageDrawable.getIntrinsicWidth() / 2f);
+			mRotationPivotY = Math.round(imageDrawable.getIntrinsicHeight() / 2f);
+		}
+	}
+
+	protected void onPullImpl(float scaleOfLayout) {
+		float angle;
+		if (mRotateDrawableWhilePulling) {
+			angle = scaleOfLayout * 90f;
+		} else {
+			angle = Math.max(0f, Math.min(180f, scaleOfLayout * 360f - 180f));
+		}
+
+		mHeaderImageMatrix.setRotate(angle, mRotationPivotX, mRotationPivotY);
+		mHeaderImage.setImageMatrix(mHeaderImageMatrix);
+	}
+
+	@Override
+	protected void refreshingImpl() {
+		mHeaderImage.startAnimation(mRotateAnimation);
+	}
+
+	@Override
+	protected void resetImpl() {
+		mHeaderImage.clearAnimation();
+		resetImageRotation();
+	}
+
+	private void resetImageRotation() {
+		if (null != mHeaderImageMatrix) {
+			mHeaderImageMatrix.reset();
+			mHeaderImage.setImageMatrix(mHeaderImageMatrix);
+		}
+	}
+
+	@Override
+	protected void pullToRefreshImpl() {
+		// NO-OP
+	}
+
+	@Override
+	protected void releaseToRefreshImpl() {
+		// NO-OP
+	}
+
+	@Override
+	protected int getDefaultDrawableResId() {
+		return R.drawable.default_ptr_rotate;
+	}
+
+}
Index: app/src/main/java/com/example/victor/weathertest3/bean/SixDayWeatherBean.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/victor/weathertest3/bean/SixDayWeatherBean.java	(revision )
+++ app/src/main/java/com/example/victor/weathertest3/bean/SixDayWeatherBean.java	(revision )
@@ -0,0 +1,44 @@
+package com.example.victor.weathertest3.bean;
+
+/**
+ * Created by victor on 2016/8/21.
+ */
+public class SixDayWeatherBean {
+
+    private String date;
+    private String Weather_id;
+    private String MaxTemp;
+    private String MinTemp;
+
+    public String getDate() {
+        return date;
+    }
+
+    public void setDate(String date) {
+        this.date = date;
+    }
+
+    public String getWeather_id() {
+        return Weather_id;
+    }
+
+    public void setWeather_id(String weather_id) {
+        Weather_id = weather_id;
+    }
+
+    public String getMaxTemp() {
+        return MaxTemp;
+    }
+
+    public void setMaxTemp(String maxTemp) {
+        MaxTemp = maxTemp;
+    }
+
+    public String getMinTemp() {
+        return MinTemp;
+    }
+
+    public void setMinTemp(String minTemp) {
+        MinTemp = minTemp;
+    }
+}
Index: PullToRefresh/build/intermediates/bundles/debug/res/values-fi/values-fi.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/bundles/debug/res/values-fi/values-fi.xml	(revision )
+++ PullToRefresh/build/intermediates/bundles/debug/res/values-fi/values-fi.xml	(revision )
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="pull_to_refresh_from_bottom_pull_label">Päivitä vetämällä ylös…</string>
+    <string name="pull_to_refresh_from_bottom_refreshing_label">@string/pull_to_refresh_refreshing_label</string>
+    <string name="pull_to_refresh_from_bottom_release_label">@string/pull_to_refresh_release_label</string>
+    <string name="pull_to_refresh_pull_label">Päivitä vetämällä alas…</string>
+    <string name="pull_to_refresh_refreshing_label">Päivitetään…</string>
+    <string name="pull_to_refresh_release_label">Päivitä vapauttamalla…</string>
+</resources>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/bundles/release/res/values-pt/values-pt.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/bundles/release/res/values-pt/values-pt.xml	(revision )
+++ PullToRefresh/build/intermediates/bundles/release/res/values-pt/values-pt.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="pull_to_refresh_pull_label">Puxe para atualizar…</string>
+    <string name="pull_to_refresh_refreshing_label">A carregar…</string>
+    <string name="pull_to_refresh_release_label">Liberação para atualizar…</string>
+</resources>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/blame/res/androidTest/debug/multi/values-pt-rBR.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/blame/res/androidTest/debug/multi/values-pt-rBR.json	(revision )
+++ PullToRefresh/build/intermediates/blame/res/androidTest/debug/multi/values-pt-rBR.json	(revision )
@@ -0,0 +1,64 @@
+[
+    {
+        "outputFile": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\res\\merged\\androidTest\\debug\\values-pt-rBR\\values-pt-rBR.xml",
+        "map": [
+            {
+                "to": {
+                    "startLine": 2,
+                    "startColumn": 4,
+                    "startOffset": 55,
+                    "endColumn": 75,
+                    "endOffset": 126
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values-pt-rBR\\values-pt-rBR.xml",
+                    "position": {
+                        "startLine": 2,
+                        "startColumn": 4,
+                        "startOffset": 55,
+                        "endColumn": 75,
+                        "endOffset": 126
+                    }
+                }
+            },
+            {
+                "to": {
+                    "startLine": 3,
+                    "startColumn": 4,
+                    "startOffset": 131,
+                    "endColumn": 72,
+                    "endOffset": 199
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values-pt-rBR\\values-pt-rBR.xml",
+                    "position": {
+                        "startLine": 3,
+                        "startColumn": 4,
+                        "startOffset": 131,
+                        "endColumn": 72,
+                        "endOffset": 199
+                    }
+                }
+            },
+            {
+                "to": {
+                    "startLine": 4,
+                    "startColumn": 4,
+                    "startOffset": 204,
+                    "endColumn": 80,
+                    "endOffset": 280
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values-pt-rBR\\values-pt-rBR.xml",
+                    "position": {
+                        "startLine": 4,
+                        "startColumn": 4,
+                        "startOffset": 204,
+                        "endColumn": 80,
+                        "endOffset": 280
+                    }
+                }
+            }
+        ]
+    }
+]
\ No newline at end of file
Index: PullToRefresh/build/intermediates/bundles/release/res/layout/pull_to_refresh_header_horizontal.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/bundles/release/res/layout/pull_to_refresh_header_horizontal.xml	(revision )
+++ PullToRefresh/build/intermediates/bundles/release/res/layout/pull_to_refresh_header_horizontal.xml	(revision )
@@ -0,0 +1,29 @@
+<?xml version="1.0" encoding="utf-8"?>
+<merge xmlns:android="http://schemas.android.com/apk/res/android" >
+
+    <FrameLayout
+        android:id="@+id/fl_inner"
+        android:layout_width="wrap_content"
+        android:layout_height="fill_parent"
+        android:paddingBottom="@dimen/header_footer_top_bottom_padding"
+        android:paddingLeft="@dimen/header_footer_left_right_padding"
+        android:paddingRight="@dimen/header_footer_left_right_padding"
+        android:paddingTop="@dimen/header_footer_top_bottom_padding" >
+
+        <ImageView
+            android:id="@+id/pull_to_refresh_image"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="center" />
+
+        <ProgressBar
+            android:id="@+id/pull_to_refresh_progress"
+            style="?android:attr/progressBarStyleSmall"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="center"
+            android:indeterminate="true"
+            android:visibility="gone" />
+    </FrameLayout>
+
+</merge>
\ No newline at end of file
Index: PullToRefresh/src/main/res/values-ru/pull_refresh_strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/src/main/res/values-ru/pull_refresh_strings.xml	(revision )
+++ PullToRefresh/src/main/res/values-ru/pull_refresh_strings.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+  <string name="pull_to_refresh_pull_label">Потяните для обновления…</string>
+  <string name="pull_to_refresh_release_label">Отпустите для обновления…</string>
+  <string name="pull_to_refresh_refreshing_label">Загрузка…</string>
+</resources>
Index: PullToRefresh/build/intermediates/incremental/mergeDebugJniLibFolders/merger.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/incremental/mergeDebugJniLibFolders/merger.xml	(revision )
+++ PullToRefresh/build/intermediates/incremental/mergeDebugJniLibFolders/merger.xml	(revision )
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="utf-8"?>
+<merger version="3"><dataSet config="main"><source path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\main\jniLibs"/></dataSet><dataSet config="debug"><source path="E:\AndroidStudioProjects\WeatherTest3\PullToRefresh\src\debug\jniLibs"/></dataSet></merger>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/res/merged/androidTest/debug/values-ar/values-ar.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/res/merged/androidTest/debug/values-ar/values-ar.xml	(revision )
+++ PullToRefresh/build/intermediates/res/merged/androidTest/debug/values-ar/values-ar.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="pull_to_refresh_pull_label">اسحب للتحديث…</string>
+    <string name="pull_to_refresh_refreshing_label">تحميل…</string>
+    <string name="pull_to_refresh_release_label">اترك للتحديث…</string>
+</resources>
\ No newline at end of file
Index: PullToRefresh/src/main/res/values-pt-rBR/pull_refresh_strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/src/main/res/values-pt-rBR/pull_refresh_strings.xml	(revision )
+++ PullToRefresh/src/main/res/values-pt-rBR/pull_refresh_strings.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+  <string name="pull_to_refresh_pull_label">Puxe para atualizar…</string>
+  <string name="pull_to_refresh_release_label">Libere para atualizar…</string>
+  <string name="pull_to_refresh_refreshing_label">Carregando…</string>
+</resources>
Index: PullToRefresh/src/main/res/values-cs/pull_refresh_strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/src/main/res/values-cs/pull_refresh_strings.xml	(revision )
+++ PullToRefresh/src/main/res/values-cs/pull_refresh_strings.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+  <string name="pull_to_refresh_pull_label">Tažením aktualizujete…</string>
+  <string name="pull_to_refresh_release_label">Uvolněním aktualizujete…</string>
+  <string name="pull_to_refresh_refreshing_label">Načítání…</string>
+</resources>
Index: PullToRefresh/build/intermediates/blame/res/androidTest/debug/multi/values-nl.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/blame/res/androidTest/debug/multi/values-nl.json	(revision )
+++ PullToRefresh/build/intermediates/blame/res/androidTest/debug/multi/values-nl.json	(revision )
@@ -0,0 +1,64 @@
+[
+    {
+        "outputFile": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\res\\merged\\androidTest\\debug\\values-nl\\values-nl.xml",
+        "map": [
+            {
+                "to": {
+                    "startLine": 2,
+                    "startColumn": 4,
+                    "startOffset": 55,
+                    "endColumn": 78,
+                    "endOffset": 129
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values-nl\\values-nl.xml",
+                    "position": {
+                        "startLine": 2,
+                        "startColumn": 4,
+                        "startOffset": 55,
+                        "endColumn": 78,
+                        "endOffset": 129
+                    }
+                }
+            },
+            {
+                "to": {
+                    "startLine": 3,
+                    "startColumn": 4,
+                    "startOffset": 134,
+                    "endColumn": 67,
+                    "endOffset": 197
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values-nl\\values-nl.xml",
+                    "position": {
+                        "startLine": 3,
+                        "startColumn": 4,
+                        "startOffset": 134,
+                        "endColumn": 67,
+                        "endOffset": 197
+                    }
+                }
+            },
+            {
+                "to": {
+                    "startLine": 4,
+                    "startColumn": 4,
+                    "startOffset": 202,
+                    "endColumn": 84,
+                    "endOffset": 282
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values-nl\\values-nl.xml",
+                    "position": {
+                        "startLine": 4,
+                        "startColumn": 4,
+                        "startOffset": 202,
+                        "endColumn": 84,
+                        "endOffset": 282
+                    }
+                }
+            }
+        ]
+    }
+]
\ No newline at end of file
Index: .idea/copyright/profiles_settings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/copyright/profiles_settings.xml	(revision )
+++ .idea/copyright/profiles_settings.xml	(revision )
@@ -0,0 +1,3 @@
+<component name="CopyrightManager">
+  <settings default="" />
+</component>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/blame/res/androidTest/debug/multi/values-ko.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/blame/res/androidTest/debug/multi/values-ko.json	(revision )
+++ PullToRefresh/build/intermediates/blame/res/androidTest/debug/multi/values-ko.json	(revision )
@@ -0,0 +1,64 @@
+[
+    {
+        "outputFile": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\res\\merged\\androidTest\\debug\\values-ko\\values-ko.xml",
+        "map": [
+            {
+                "to": {
+                    "startLine": 2,
+                    "startColumn": 4,
+                    "startOffset": 55,
+                    "endColumn": 65,
+                    "endOffset": 116
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values-ko\\values-ko.xml",
+                    "position": {
+                        "startLine": 2,
+                        "startColumn": 4,
+                        "startOffset": 55,
+                        "endColumn": 65,
+                        "endOffset": 116
+                    }
+                }
+            },
+            {
+                "to": {
+                    "startLine": 3,
+                    "startColumn": 4,
+                    "startOffset": 121,
+                    "endColumn": 66,
+                    "endOffset": 183
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values-ko\\values-ko.xml",
+                    "position": {
+                        "startLine": 3,
+                        "startColumn": 4,
+                        "startOffset": 121,
+                        "endColumn": 66,
+                        "endOffset": 183
+                    }
+                }
+            },
+            {
+                "to": {
+                    "startLine": 4,
+                    "startColumn": 4,
+                    "startOffset": 188,
+                    "endColumn": 68,
+                    "endOffset": 252
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values-ko\\values-ko.xml",
+                    "position": {
+                        "startLine": 4,
+                        "startColumn": 4,
+                        "startOffset": 188,
+                        "endColumn": 68,
+                        "endOffset": 252
+                    }
+                }
+            }
+        ]
+    }
+]
\ No newline at end of file
Index: PullToRefresh/build/intermediates/bundles/debug/res/layout/pull_to_refresh_header_vertical.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/bundles/debug/res/layout/pull_to_refresh_header_vertical.xml	(revision )
+++ PullToRefresh/build/intermediates/bundles/debug/res/layout/pull_to_refresh_header_vertical.xml	(revision )
@@ -0,0 +1,59 @@
+<?xml version="1.0" encoding="utf-8"?>
+<merge xmlns:android="http://schemas.android.com/apk/res/android" >
+
+    <FrameLayout
+        android:id="@+id/fl_inner"
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content"
+        android:paddingBottom="@dimen/header_footer_top_bottom_padding"
+        android:paddingLeft="@dimen/header_footer_left_right_padding"
+        android:paddingRight="@dimen/header_footer_left_right_padding"
+        android:paddingTop="@dimen/header_footer_top_bottom_padding" >
+
+        <FrameLayout
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="left|center_vertical" >
+
+            <ImageView
+                android:id="@+id/pull_to_refresh_image"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_gravity="center" />
+
+            <ProgressBar
+                android:id="@+id/pull_to_refresh_progress"
+                style="?android:attr/progressBarStyleSmall"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_gravity="center"
+                android:indeterminate="true"
+                android:visibility="gone" />
+        </FrameLayout>
+
+        <LinearLayout
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="center"
+            android:gravity="center_horizontal"
+            android:orientation="vertical" >
+
+            <TextView
+                android:id="@+id/pull_to_refresh_text"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:singleLine="true"
+                android:textAppearance="?android:attr/textAppearance"
+                android:textStyle="bold" />
+
+            <TextView
+                android:id="@+id/pull_to_refresh_sub_text"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:singleLine="true"
+                android:textAppearance="?android:attr/textAppearanceSmall"
+                android:visibility="gone" />
+        </LinearLayout>
+    </FrameLayout>
+
+</merge>
\ No newline at end of file
Index: PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/internal/EmptyViewMethodAccessor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/internal/EmptyViewMethodAccessor.java	(revision )
+++ PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/internal/EmptyViewMethodAccessor.java	(revision )
@@ -0,0 +1,43 @@
+/*******************************************************************************
+ * Copyright 2011, 2012 Chris Banes.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ *******************************************************************************/
+package com.handmark.pulltorefresh.library.internal;
+
+import android.view.View;
+
+/**
+ * Interface that allows PullToRefreshBase to hijack the call to
+ * AdapterView.setEmptyView()
+ * 
+ * @author chris
+ */
+public interface EmptyViewMethodAccessor {
+
+	/**
+	 * Calls upto AdapterView.setEmptyView()
+	 * 
+	 * @param emptyView - to set as Empty View
+	 */
+	public void setEmptyViewInternal(View emptyView);
+
+	/**
+	 * Should call PullToRefreshBase.setEmptyView() which will then
+	 * automatically call through to setEmptyViewInternal()
+	 * 
+	 * @param emptyView - to set as Empty View
+	 */
+	public void setEmptyView(View emptyView);
+
+}
Index: PullToRefresh/build/intermediates/bundles/debug/res/values-ro/values-ro.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/bundles/debug/res/values-ro/values-ro.xml	(revision )
+++ PullToRefresh/build/intermediates/bundles/debug/res/values-ro/values-ro.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="pull_to_refresh_pull_label">Trage pentru a reîmprospăta…</string>
+    <string name="pull_to_refresh_refreshing_label">Încărcare…</string>
+    <string name="pull_to_refresh_release_label">Eliberează pentru a reîmprospăta…</string>
+</resources>
\ No newline at end of file
Index: PullToRefresh/build/generated/source/buildConfig/androidTest/debug/com/handmark/pulltorefresh/library/test/BuildConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/generated/source/buildConfig/androidTest/debug/com/handmark/pulltorefresh/library/test/BuildConfig.java	(revision )
+++ PullToRefresh/build/generated/source/buildConfig/androidTest/debug/com/handmark/pulltorefresh/library/test/BuildConfig.java	(revision )
@@ -0,0 +1,13 @@
+/**
+ * Automatically generated file. DO NOT MODIFY
+ */
+package com.handmark.pulltorefresh.library.test;
+
+public final class BuildConfig {
+  public static final boolean DEBUG = Boolean.parseBoolean("true");
+  public static final String APPLICATION_ID = "com.handmark.pulltorefresh.library.test";
+  public static final String BUILD_TYPE = "debug";
+  public static final String FLAVOR = "";
+  public static final int VERSION_CODE = -1;
+  public static final String VERSION_NAME = "";
+}
Index: PullToRefresh/build/intermediates/blame/res/androidTest/debug/multi/values-pt.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/blame/res/androidTest/debug/multi/values-pt.json	(revision )
+++ PullToRefresh/build/intermediates/blame/res/androidTest/debug/multi/values-pt.json	(revision )
@@ -0,0 +1,64 @@
+[
+    {
+        "outputFile": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\res\\merged\\androidTest\\debug\\values-pt\\values-pt.xml",
+        "map": [
+            {
+                "to": {
+                    "startLine": 2,
+                    "startColumn": 4,
+                    "startOffset": 55,
+                    "endColumn": 75,
+                    "endOffset": 126
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values-pt\\values-pt.xml",
+                    "position": {
+                        "startLine": 2,
+                        "startColumn": 4,
+                        "startOffset": 55,
+                        "endColumn": 75,
+                        "endOffset": 126
+                    }
+                }
+            },
+            {
+                "to": {
+                    "startLine": 3,
+                    "startColumn": 4,
+                    "startOffset": 131,
+                    "endColumn": 72,
+                    "endOffset": 199
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values-pt\\values-pt.xml",
+                    "position": {
+                        "startLine": 3,
+                        "startColumn": 4,
+                        "startOffset": 131,
+                        "endColumn": 72,
+                        "endOffset": 199
+                    }
+                }
+            },
+            {
+                "to": {
+                    "startLine": 4,
+                    "startColumn": 4,
+                    "startOffset": 204,
+                    "endColumn": 83,
+                    "endOffset": 283
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values-pt\\values-pt.xml",
+                    "position": {
+                        "startLine": 4,
+                        "startColumn": 4,
+                        "startOffset": 204,
+                        "endColumn": 83,
+                        "endOffset": 283
+                    }
+                }
+            }
+        ]
+    }
+]
\ No newline at end of file
Index: PullToRefresh/build/intermediates/res/merged/androidTest/debug/values-zh/values-zh.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/res/merged/androidTest/debug/values-zh/values-zh.xml	(revision )
+++ PullToRefresh/build/intermediates/res/merged/androidTest/debug/values-zh/values-zh.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="pull_to_refresh_pull_label">下拉刷新…</string>
+    <string name="pull_to_refresh_refreshing_label">正在载入…</string>
+    <string name="pull_to_refresh_release_label">放开以刷新…</string>
+</resources>
\ No newline at end of file
Index: PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/internal/FlipLoadingLayout.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/internal/FlipLoadingLayout.java	(revision )
+++ PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/internal/FlipLoadingLayout.java	(revision )
@@ -0,0 +1,146 @@
+/*******************************************************************************
+ * Copyright 2011, 2012 Chris Banes.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ *******************************************************************************/
+package com.handmark.pulltorefresh.library.internal;
+
+import android.annotation.SuppressLint;
+import android.content.Context;
+import android.content.res.TypedArray;
+import android.graphics.Matrix;
+import android.graphics.drawable.Drawable;
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.animation.Animation;
+import android.view.animation.RotateAnimation;
+import android.widget.ImageView.ScaleType;
+
+import com.handmark.pulltorefresh.library.PullToRefreshBase.Mode;
+import com.handmark.pulltorefresh.library.PullToRefreshBase.Orientation;
+import com.handmark.pulltorefresh.library.R;
+
+@SuppressLint("ViewConstructor")
+public class FlipLoadingLayout extends LoadingLayout {
+
+	static final int FLIP_ANIMATION_DURATION = 150;
+
+	private final Animation mRotateAnimation, mResetRotateAnimation;
+
+	public FlipLoadingLayout(Context context, final Mode mode, final Orientation scrollDirection, TypedArray attrs) {
+		super(context, mode, scrollDirection, attrs);
+
+		final int rotateAngle = mode == Mode.PULL_FROM_START ? -180 : 180;
+
+		mRotateAnimation = new RotateAnimation(0, rotateAngle, Animation.RELATIVE_TO_SELF, 0.5f,
+				Animation.RELATIVE_TO_SELF, 0.5f);
+		mRotateAnimation.setInterpolator(ANIMATION_INTERPOLATOR);
+		mRotateAnimation.setDuration(FLIP_ANIMATION_DURATION);
+		mRotateAnimation.setFillAfter(true);
+
+		mResetRotateAnimation = new RotateAnimation(rotateAngle, 0, Animation.RELATIVE_TO_SELF, 0.5f,
+				Animation.RELATIVE_TO_SELF, 0.5f);
+		mResetRotateAnimation.setInterpolator(ANIMATION_INTERPOLATOR);
+		mResetRotateAnimation.setDuration(FLIP_ANIMATION_DURATION);
+		mResetRotateAnimation.setFillAfter(true);
+	}
+
+	@Override
+	protected void onLoadingDrawableSet(Drawable imageDrawable) {
+		if (null != imageDrawable) {
+			final int dHeight = imageDrawable.getIntrinsicHeight();
+			final int dWidth = imageDrawable.getIntrinsicWidth();
+
+			/**
+			 * We need to set the width/height of the ImageView so that it is
+			 * square with each side the size of the largest drawable dimension.
+			 * This is so that it doesn't clip when rotated.
+			 */
+			ViewGroup.LayoutParams lp = mHeaderImage.getLayoutParams();
+			lp.width = lp.height = Math.max(dHeight, dWidth);
+			mHeaderImage.requestLayout();
+
+			/**
+			 * We now rotate the Drawable so that is at the correct rotation,
+			 * and is centered.
+			 */
+			mHeaderImage.setScaleType(ScaleType.MATRIX);
+			Matrix matrix = new Matrix();
+			matrix.postTranslate((lp.width - dWidth) / 2f, (lp.height - dHeight) / 2f);
+			matrix.postRotate(getDrawableRotationAngle(), lp.width / 2f, lp.height / 2f);
+			mHeaderImage.setImageMatrix(matrix);
+		}
+	}
+
+	@Override
+	protected void onPullImpl(float scaleOfLayout) {
+		// NO-OP
+	}
+
+	@Override
+	protected void pullToRefreshImpl() {
+		// Only start reset Animation, we've previously show the rotate anim
+		if (mRotateAnimation == mHeaderImage.getAnimation()) {
+			mHeaderImage.startAnimation(mResetRotateAnimation);
+		}
+	}
+
+	@Override
+	protected void refreshingImpl() {
+		mHeaderImage.clearAnimation();
+		mHeaderImage.setVisibility(View.INVISIBLE);
+		mHeaderProgress.setVisibility(View.VISIBLE);
+	}
+
+	@Override
+	protected void releaseToRefreshImpl() {
+		mHeaderImage.startAnimation(mRotateAnimation);
+	}
+
+	@Override
+	protected void resetImpl() {
+		mHeaderImage.clearAnimation();
+		mHeaderProgress.setVisibility(View.GONE);
+		mHeaderImage.setVisibility(View.VISIBLE);
+	}
+
+	@Override
+	protected int getDefaultDrawableResId() {
+		return R.drawable.default_ptr_flip;
+	}
+
+	private float getDrawableRotationAngle() {
+		float angle = 0f;
+		switch (mMode) {
+			case PULL_FROM_END:
+				if (mScrollDirection == Orientation.HORIZONTAL) {
+					angle = 90f;
+				} else {
+					angle = 180f;
+				}
+				break;
+
+			case PULL_FROM_START:
+				if (mScrollDirection == Orientation.HORIZONTAL) {
+					angle = 270f;
+				}
+				break;
+
+			default:
+				break;
+		}
+
+		return angle;
+	}
+
+}
Index: PullToRefresh/build/intermediates/bundles/release/res/values-de/values-de.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/bundles/release/res/values-de/values-de.xml	(revision )
+++ PullToRefresh/build/intermediates/bundles/release/res/values-de/values-de.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="pull_to_refresh_pull_label">Ziehen zum Aktualisieren…</string>
+    <string name="pull_to_refresh_refreshing_label">Laden…</string>
+    <string name="pull_to_refresh_release_label">Loslassen zum Aktualisieren…</string>
+</resources>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/res/merged/androidTest/debug/anim/slide_in_from_bottom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/res/merged/androidTest/debug/anim/slide_in_from_bottom.xml	(revision )
+++ PullToRefresh/build/intermediates/res/merged/androidTest/debug/anim/slide_in_from_bottom.xml	(revision )
@@ -0,0 +1,21 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+     Copyright (C) 2009 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+
+<translate xmlns:android="http://schemas.android.com/apk/res/android"
+    android:duration="@android:integer/config_longAnimTime"
+    android:fromYDelta="100%p"
+    android:toYDelta="0" />
Index: PullToRefresh/src/main/res/values-it/pull_refresh_strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/src/main/res/values-it/pull_refresh_strings.xml	(revision )
+++ PullToRefresh/src/main/res/values-it/pull_refresh_strings.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+  <string name="pull_to_refresh_pull_label">Tira per aggiornare…</string>
+  <string name="pull_to_refresh_release_label">Rilascia per aggionare…</string>
+  <string name="pull_to_refresh_refreshing_label">Caricamento…</string>
+</resources>
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/vcs.xml	(revision )
+++ .idea/vcs.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$/.." vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: PullToRefresh/src/main/res/values/pull_refresh_strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/src/main/res/values/pull_refresh_strings.xml	(revision )
+++ PullToRefresh/src/main/res/values/pull_refresh_strings.xml	(revision )
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+
+    <string name="pull_to_refresh_pull_label">Pull to refresh…</string>
+    <string name="pull_to_refresh_release_label">Release to refresh…</string>
+    <string name="pull_to_refresh_refreshing_label">Loading…</string>
+
+    <!-- Just use standard Pull Down String when pulling up. These can be set for languages which require it -->
+    <string name="pull_to_refresh_from_bottom_pull_label">@string/pull_to_refresh_pull_label</string>
+    <string name="pull_to_refresh_from_bottom_release_label">@string/pull_to_refresh_release_label</string>
+    <string name="pull_to_refresh_from_bottom_refreshing_label">@string/pull_to_refresh_refreshing_label</string>
+
+</resources>
\ No newline at end of file
Index: app/src/test/java/com/example/victor/weathertest3/ExampleUnitTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/test/java/com/example/victor/weathertest3/ExampleUnitTest.java	(revision )
+++ app/src/test/java/com/example/victor/weathertest3/ExampleUnitTest.java	(revision )
@@ -0,0 +1,15 @@
+package com.example.victor.weathertest3;
+
+import org.junit.Test;
+
+import static org.junit.Assert.*;
+
+/**
+ * To work on unit tests, switch the Test Artifact in the Build Variants view.
+ */
+public class ExampleUnitTest {
+    @Test
+    public void addition_isCorrect() throws Exception {
+        assertEquals(4, 2 + 2);
+    }
+}
\ No newline at end of file
Index: PullToRefresh/build/intermediates/res/merged/androidTest/debug/values-fr/values-fr.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/res/merged/androidTest/debug/values-fr/values-fr.xml	(revision )
+++ PullToRefresh/build/intermediates/res/merged/androidTest/debug/values-fr/values-fr.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="pull_to_refresh_pull_label">Tirez pour rafraîchir…</string>
+    <string name="pull_to_refresh_refreshing_label">Chargement…</string>
+    <string name="pull_to_refresh_release_label">Relâcher pour rafraîchir…</string>
+</resources>
\ No newline at end of file
Index: PullToRefresh/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/src/main/AndroidManifest.xml	(revision )
+++ PullToRefresh/src/main/AndroidManifest.xml	(revision )
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.handmark.pulltorefresh.library"
+    android:versionCode="2110"
+    android:versionName="2.1.1" >
+
+    <uses-sdk android:minSdkVersion="4" />
+
+    <application />
+
+</manifest>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/res/merged/androidTest/debug/values-he/values-he.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/res/merged/androidTest/debug/values-he/values-he.xml	(revision )
+++ PullToRefresh/build/intermediates/res/merged/androidTest/debug/values-he/values-he.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="pull_to_refresh_pull_label">משוך לרענון…</string>
+    <string name="pull_to_refresh_refreshing_label">טוען…</string>
+    <string name="pull_to_refresh_release_label">שחרר לרענון…</string>
+</resources>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/blame/res/androidTest/debug/multi/values-he.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/blame/res/androidTest/debug/multi/values-he.json	(revision )
+++ PullToRefresh/build/intermediates/blame/res/androidTest/debug/multi/values-he.json	(revision )
@@ -0,0 +1,64 @@
+[
+    {
+        "outputFile": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\res\\merged\\androidTest\\debug\\values-he\\values-he.xml",
+        "map": [
+            {
+                "to": {
+                    "startLine": 2,
+                    "startColumn": 4,
+                    "startOffset": 55,
+                    "endColumn": 67,
+                    "endOffset": 118
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values-he\\values-he.xml",
+                    "position": {
+                        "startLine": 2,
+                        "startColumn": 4,
+                        "startOffset": 55,
+                        "endColumn": 67,
+                        "endOffset": 118
+                    }
+                }
+            },
+            {
+                "to": {
+                    "startLine": 3,
+                    "startColumn": 4,
+                    "startOffset": 123,
+                    "endColumn": 66,
+                    "endOffset": 185
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values-he\\values-he.xml",
+                    "position": {
+                        "startLine": 3,
+                        "startColumn": 4,
+                        "startOffset": 123,
+                        "endColumn": 66,
+                        "endOffset": 185
+                    }
+                }
+            },
+            {
+                "to": {
+                    "startLine": 4,
+                    "startColumn": 4,
+                    "startOffset": 190,
+                    "endColumn": 70,
+                    "endOffset": 256
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values-he\\values-he.xml",
+                    "position": {
+                        "startLine": 4,
+                        "startColumn": 4,
+                        "startOffset": 190,
+                        "endColumn": 70,
+                        "endOffset": 256
+                    }
+                }
+            }
+        ]
+    }
+]
\ No newline at end of file
Index: PullToRefresh/build/intermediates/bundles/release/res/values-ja/values-ja.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/bundles/release/res/values-ja/values-ja.xml	(revision )
+++ PullToRefresh/build/intermediates/bundles/release/res/values-ja/values-ja.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="pull_to_refresh_pull_label">画面を引っ張って…</string>
+    <string name="pull_to_refresh_refreshing_label">読み込み中…</string>
+    <string name="pull_to_refresh_release_label">指を離して更新…</string>
+</resources>
\ No newline at end of file
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/gradle.xml	(revision )
+++ .idea/gradle.xml	(revision )
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="GradleSettings">
+    <option name="linkedExternalProjectsSettings">
+      <GradleProjectSettings>
+        <option name="distributionType" value="LOCAL" />
+        <option name="externalProjectPath" value="$PROJECT_DIR$" />
+        <option name="gradleHome" value="D:\Program Files\Android\Android Studio\gradle\gradle-2.8" />
+        <option name="gradleJvm" value="1.8" />
+        <option name="modules">
+          <set>
+            <option value="$PROJECT_DIR$" />
+            <option value="$PROJECT_DIR$/PullToRefresh" />
+            <option value="$PROJECT_DIR$/app" />
+          </set>
+        </option>
+      </GradleProjectSettings>
+    </option>
+  </component>
+</project>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/bundles/release/res/values-it/values-it.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/bundles/release/res/values-it/values-it.xml	(revision )
+++ PullToRefresh/build/intermediates/bundles/release/res/values-it/values-it.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="pull_to_refresh_pull_label">Tira per aggiornare…</string>
+    <string name="pull_to_refresh_refreshing_label">Caricamento…</string>
+    <string name="pull_to_refresh_release_label">Rilascia per aggionare…</string>
+</resources>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/res/merged/androidTest/debug/values/values.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/res/merged/androidTest/debug/values/values.xml	(revision )
+++ PullToRefresh/build/intermediates/res/merged/androidTest/debug/values/values.xml	(revision )
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <declare-styleable name="PullToRefresh"><attr format="reference|color" name="ptrRefreshableViewBackground"/><attr format="reference|color" name="ptrHeaderBackground"/><attr format="reference|color" name="ptrHeaderTextColor"/><attr format="reference|color" name="ptrHeaderSubTextColor"/><attr name="ptrMode"><flag name="disabled" value="0x0"/><flag name="pullFromStart" value="0x1"/><flag name="pullFromEnd" value="0x2"/><flag name="both" value="0x3"/><flag name="manualOnly" value="0x4"/><flag name="pullDownFromTop" value="0x1"/><flag name="pullUpFromBottom" value="0x2"/></attr><attr format="reference|boolean" name="ptrShowIndicator"/><attr format="reference" name="ptrDrawable"/><attr format="reference" name="ptrDrawableStart"/><attr format="reference" name="ptrDrawableEnd"/><attr format="reference|boolean" name="ptrOverScroll"/><attr format="reference" name="ptrHeaderTextAppearance"/><attr format="reference" name="ptrSubHeaderTextAppearance"/><attr name="ptrAnimationStyle"><flag name="rotate" value="0x0"/><flag name="flip" value="0x1"/></attr><attr format="reference|boolean" name="ptrScrollingWhileRefreshingEnabled"/><attr format="reference|boolean" name="ptrListViewExtrasEnabled"/><attr format="reference|boolean" name="ptrRotateDrawableWhilePulling"/><attr format="reference|color" name="ptrAdapterViewBackground"/><attr format="reference" name="ptrDrawableTop"/><attr format="reference" name="ptrDrawableBottom"/></declare-styleable>
+    <dimen name="header_footer_left_right_padding">24dp</dimen>
+    <dimen name="header_footer_top_bottom_padding">12dp</dimen>
+    <dimen name="indicator_corner_radius">12dp</dimen>
+    <dimen name="indicator_internal_padding">4dp</dimen>
+    <dimen name="indicator_right_padding">10dp</dimen>
+    <item name="gridview" type="id"/>
+    <item name="scrollview" type="id"/>
+    <item name="webview" type="id"/>
+    <string name="pull_to_refresh_from_bottom_pull_label">@string/pull_to_refresh_pull_label</string>
+    <string name="pull_to_refresh_from_bottom_refreshing_label">@string/pull_to_refresh_refreshing_label</string>
+    <string name="pull_to_refresh_from_bottom_release_label">@string/pull_to_refresh_release_label</string>
+    <string name="pull_to_refresh_pull_label">Pull to refresh…</string>
+    <string name="pull_to_refresh_refreshing_label">Loading…</string>
+    <string name="pull_to_refresh_release_label">Release to refresh…</string>
+</resources>
\ No newline at end of file
Index: PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/internal/LoadingLayout.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/internal/LoadingLayout.java	(revision )
+++ PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/internal/LoadingLayout.java	(revision )
@@ -0,0 +1,393 @@
+/*******************************************************************************
+ * Copyright 2011, 2012 Chris Banes.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ *******************************************************************************/
+package com.handmark.pulltorefresh.library.internal;
+
+import android.annotation.SuppressLint;
+import android.content.Context;
+import android.content.res.ColorStateList;
+import android.content.res.TypedArray;
+import android.graphics.Typeface;
+import android.graphics.drawable.AnimationDrawable;
+import android.graphics.drawable.Drawable;
+import android.text.TextUtils;
+import android.util.TypedValue;
+import android.view.Gravity;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.animation.Interpolator;
+import android.view.animation.LinearInterpolator;
+import android.widget.FrameLayout;
+import android.widget.ImageView;
+import android.widget.ProgressBar;
+import android.widget.TextView;
+
+import com.handmark.pulltorefresh.library.ILoadingLayout;
+import com.handmark.pulltorefresh.library.PullToRefreshBase.Mode;
+import com.handmark.pulltorefresh.library.PullToRefreshBase.Orientation;
+import com.handmark.pulltorefresh.library.R;
+
+@SuppressLint("ViewConstructor")
+public abstract class LoadingLayout extends FrameLayout implements ILoadingLayout {
+
+	static final String LOG_TAG = "PullToRefresh-LoadingLayout";
+
+	static final Interpolator ANIMATION_INTERPOLATOR = new LinearInterpolator();
+
+	private FrameLayout mInnerLayout;
+
+	protected final ImageView mHeaderImage;
+	protected final ProgressBar mHeaderProgress;
+
+	private boolean mUseIntrinsicAnimation;
+
+	private final TextView mHeaderText;
+	private final TextView mSubHeaderText;
+
+	protected final Mode mMode;
+	protected final Orientation mScrollDirection;
+
+	private CharSequence mPullLabel;
+	private CharSequence mRefreshingLabel;
+	private CharSequence mReleaseLabel;
+
+	public LoadingLayout(Context context, final Mode mode, final Orientation scrollDirection, TypedArray attrs) {
+		super(context);
+		mMode = mode;
+		mScrollDirection = scrollDirection;
+
+		switch (scrollDirection) {
+			case HORIZONTAL:
+				LayoutInflater.from(context).inflate(R.layout.pull_to_refresh_header_horizontal, this);
+				break;
+			case VERTICAL:
+			default:
+				LayoutInflater.from(context).inflate(R.layout.pull_to_refresh_header_vertical, this);
+				break;
+		}
+
+		mInnerLayout = (FrameLayout) findViewById(R.id.fl_inner);
+		mHeaderText = (TextView) mInnerLayout.findViewById(R.id.pull_to_refresh_text);
+		mHeaderProgress = (ProgressBar) mInnerLayout.findViewById(R.id.pull_to_refresh_progress);
+		mSubHeaderText = (TextView) mInnerLayout.findViewById(R.id.pull_to_refresh_sub_text);
+		mHeaderImage = (ImageView) mInnerLayout.findViewById(R.id.pull_to_refresh_image);
+
+		FrameLayout.LayoutParams lp = (FrameLayout.LayoutParams) mInnerLayout.getLayoutParams();
+
+		switch (mode) {
+			case PULL_FROM_END:
+				lp.gravity = scrollDirection == Orientation.VERTICAL ? Gravity.TOP : Gravity.LEFT;
+
+				// Load in labels
+				mPullLabel = context.getString(R.string.pull_to_refresh_from_bottom_pull_label);
+				mRefreshingLabel = context.getString(R.string.pull_to_refresh_from_bottom_refreshing_label);
+				mReleaseLabel = context.getString(R.string.pull_to_refresh_from_bottom_release_label);
+				break;
+
+			case PULL_FROM_START:
+			default:
+				lp.gravity = scrollDirection == Orientation.VERTICAL ? Gravity.BOTTOM : Gravity.RIGHT;
+
+				// Load in labels
+				mPullLabel = context.getString(R.string.pull_to_refresh_pull_label);
+				mRefreshingLabel = context.getString(R.string.pull_to_refresh_refreshing_label);
+				mReleaseLabel = context.getString(R.string.pull_to_refresh_release_label);
+				break;
+		}
+
+		if (attrs.hasValue(R.styleable.PullToRefresh_ptrHeaderBackground)) {
+			Drawable background = attrs.getDrawable(R.styleable.PullToRefresh_ptrHeaderBackground);
+			if (null != background) {
+				ViewCompat.setBackground(this, background);
+			}
+		}
+
+		if (attrs.hasValue(R.styleable.PullToRefresh_ptrHeaderTextAppearance)) {
+			TypedValue styleID = new TypedValue();
+			attrs.getValue(R.styleable.PullToRefresh_ptrHeaderTextAppearance, styleID);
+			setTextAppearance(styleID.data);
+		}
+		if (attrs.hasValue(R.styleable.PullToRefresh_ptrSubHeaderTextAppearance)) {
+			TypedValue styleID = new TypedValue();
+			attrs.getValue(R.styleable.PullToRefresh_ptrSubHeaderTextAppearance, styleID);
+			setSubTextAppearance(styleID.data);
+		}
+
+		// Text Color attrs need to be set after TextAppearance attrs
+		if (attrs.hasValue(R.styleable.PullToRefresh_ptrHeaderTextColor)) {
+			ColorStateList colors = attrs.getColorStateList(R.styleable.PullToRefresh_ptrHeaderTextColor);
+			if (null != colors) {
+				setTextColor(colors);
+			}
+		}
+		if (attrs.hasValue(R.styleable.PullToRefresh_ptrHeaderSubTextColor)) {
+			ColorStateList colors = attrs.getColorStateList(R.styleable.PullToRefresh_ptrHeaderSubTextColor);
+			if (null != colors) {
+				setSubTextColor(colors);
+			}
+		}
+
+		// Try and get defined drawable from Attrs
+		Drawable imageDrawable = null;
+		if (attrs.hasValue(R.styleable.PullToRefresh_ptrDrawable)) {
+			imageDrawable = attrs.getDrawable(R.styleable.PullToRefresh_ptrDrawable);
+		}
+
+		// Check Specific Drawable from Attrs, these overrite the generic
+		// drawable attr above
+		switch (mode) {
+			case PULL_FROM_START:
+			default:
+				if (attrs.hasValue(R.styleable.PullToRefresh_ptrDrawableStart)) {
+					imageDrawable = attrs.getDrawable(R.styleable.PullToRefresh_ptrDrawableStart);
+				} else if (attrs.hasValue(R.styleable.PullToRefresh_ptrDrawableTop)) {
+					Utils.warnDeprecation("ptrDrawableTop", "ptrDrawableStart");
+					imageDrawable = attrs.getDrawable(R.styleable.PullToRefresh_ptrDrawableTop);
+				}
+				break;
+
+			case PULL_FROM_END:
+				if (attrs.hasValue(R.styleable.PullToRefresh_ptrDrawableEnd)) {
+					imageDrawable = attrs.getDrawable(R.styleable.PullToRefresh_ptrDrawableEnd);
+				} else if (attrs.hasValue(R.styleable.PullToRefresh_ptrDrawableBottom)) {
+					Utils.warnDeprecation("ptrDrawableBottom", "ptrDrawableEnd");
+					imageDrawable = attrs.getDrawable(R.styleable.PullToRefresh_ptrDrawableBottom);
+				}
+				break;
+		}
+
+		// If we don't have a user defined drawable, load the default
+		if (null == imageDrawable) {
+			imageDrawable = context.getResources().getDrawable(getDefaultDrawableResId());
+		}
+
+		// Set Drawable, and save width/height
+		setLoadingDrawable(imageDrawable);
+
+		reset();
+	}
+
+	public final void setHeight(int height) {
+		ViewGroup.LayoutParams lp = (ViewGroup.LayoutParams) getLayoutParams();
+		lp.height = height;
+		requestLayout();
+	}
+
+	public final void setWidth(int width) {
+		ViewGroup.LayoutParams lp = (ViewGroup.LayoutParams) getLayoutParams();
+		lp.width = width;
+		requestLayout();
+	}
+
+	public final int getContentSize() {
+		switch (mScrollDirection) {
+			case HORIZONTAL:
+				return mInnerLayout.getWidth();
+			case VERTICAL:
+			default:
+				return mInnerLayout.getHeight();
+		}
+	}
+
+	public final void hideAllViews() {
+		if (View.VISIBLE == mHeaderText.getVisibility()) {
+			mHeaderText.setVisibility(View.INVISIBLE);
+		}
+		if (View.VISIBLE == mHeaderProgress.getVisibility()) {
+			mHeaderProgress.setVisibility(View.INVISIBLE);
+		}
+		if (View.VISIBLE == mHeaderImage.getVisibility()) {
+			mHeaderImage.setVisibility(View.INVISIBLE);
+		}
+		if (View.VISIBLE == mSubHeaderText.getVisibility()) {
+			mSubHeaderText.setVisibility(View.INVISIBLE);
+		}
+	}
+
+	public final void onPull(float scaleOfLayout) {
+		if (!mUseIntrinsicAnimation) {
+			onPullImpl(scaleOfLayout);
+		}
+	}
+
+	public final void pullToRefresh() {
+		if (null != mHeaderText) {
+			mHeaderText.setText(mPullLabel);
+		}
+
+		// Now call the callback
+		pullToRefreshImpl();
+	}
+
+	public final void refreshing() {
+		if (null != mHeaderText) {
+			mHeaderText.setText(mRefreshingLabel);
+		}
+
+		if (mUseIntrinsicAnimation) {
+			((AnimationDrawable) mHeaderImage.getDrawable()).start();
+		} else {
+			// Now call the callback
+			refreshingImpl();
+		}
+
+		if (null != mSubHeaderText) {
+			mSubHeaderText.setVisibility(View.GONE);
+		}
+	}
+
+	public final void releaseToRefresh() {
+		if (null != mHeaderText) {
+			mHeaderText.setText(mReleaseLabel);
+		}
+
+		// Now call the callback
+		releaseToRefreshImpl();
+	}
+
+	public final void reset() {
+		if (null != mHeaderText) {
+			mHeaderText.setText(mPullLabel);
+		}
+		mHeaderImage.setVisibility(View.VISIBLE);
+
+		if (mUseIntrinsicAnimation) {
+			((AnimationDrawable) mHeaderImage.getDrawable()).stop();
+		} else {
+			// Now call the callback
+			resetImpl();
+		}
+
+		if (null != mSubHeaderText) {
+			if (TextUtils.isEmpty(mSubHeaderText.getText())) {
+				mSubHeaderText.setVisibility(View.GONE);
+			} else {
+				mSubHeaderText.setVisibility(View.VISIBLE);
+			}
+		}
+	}
+
+	@Override
+	public void setLastUpdatedLabel(CharSequence label) {
+		setSubHeaderText(label);
+	}
+
+	public final void setLoadingDrawable(Drawable imageDrawable) {
+		// Set Drawable
+		mHeaderImage.setImageDrawable(imageDrawable);
+		mUseIntrinsicAnimation = (imageDrawable instanceof AnimationDrawable);
+
+		// Now call the callback
+		onLoadingDrawableSet(imageDrawable);
+	}
+
+	public void setPullLabel(CharSequence pullLabel) {
+		mPullLabel = pullLabel;
+	}
+
+	public void setRefreshingLabel(CharSequence refreshingLabel) {
+		mRefreshingLabel = refreshingLabel;
+	}
+
+	public void setReleaseLabel(CharSequence releaseLabel) {
+		mReleaseLabel = releaseLabel;
+	}
+
+	@Override
+	public void setTextTypeface(Typeface tf) {
+		mHeaderText.setTypeface(tf);
+	}
+
+	public final void showInvisibleViews() {
+		if (View.INVISIBLE == mHeaderText.getVisibility()) {
+			mHeaderText.setVisibility(View.VISIBLE);
+		}
+		if (View.INVISIBLE == mHeaderProgress.getVisibility()) {
+			mHeaderProgress.setVisibility(View.VISIBLE);
+		}
+		if (View.INVISIBLE == mHeaderImage.getVisibility()) {
+			mHeaderImage.setVisibility(View.VISIBLE);
+		}
+		if (View.INVISIBLE == mSubHeaderText.getVisibility()) {
+			mSubHeaderText.setVisibility(View.VISIBLE);
+		}
+	}
+
+	/**
+	 * Callbacks for derivative Layouts
+	 */
+
+	protected abstract int getDefaultDrawableResId();
+
+	protected abstract void onLoadingDrawableSet(Drawable imageDrawable);
+
+	protected abstract void onPullImpl(float scaleOfLayout);
+
+	protected abstract void pullToRefreshImpl();
+
+	protected abstract void refreshingImpl();
+
+	protected abstract void releaseToRefreshImpl();
+
+	protected abstract void resetImpl();
+
+	private void setSubHeaderText(CharSequence label) {
+		if (null != mSubHeaderText) {
+			if (TextUtils.isEmpty(label)) {
+				mSubHeaderText.setVisibility(View.GONE);
+			} else {
+				mSubHeaderText.setText(label);
+
+				// Only set it to Visible if we're GONE, otherwise VISIBLE will
+				// be set soon
+				if (View.GONE == mSubHeaderText.getVisibility()) {
+					mSubHeaderText.setVisibility(View.VISIBLE);
+				}
+			}
+		}
+	}
+
+	private void setSubTextAppearance(int value) {
+		if (null != mSubHeaderText) {
+			mSubHeaderText.setTextAppearance(getContext(), value);
+		}
+	}
+
+	private void setSubTextColor(ColorStateList color) {
+		if (null != mSubHeaderText) {
+			mSubHeaderText.setTextColor(color);
+		}
+	}
+
+	private void setTextAppearance(int value) {
+		if (null != mHeaderText) {
+			mHeaderText.setTextAppearance(getContext(), value);
+		}
+		if (null != mSubHeaderText) {
+			mSubHeaderText.setTextAppearance(getContext(), value);
+		}
+	}
+
+	private void setTextColor(ColorStateList color) {
+		if (null != mHeaderText) {
+			mHeaderText.setTextColor(color);
+		}
+		if (null != mSubHeaderText) {
+			mSubHeaderText.setTextColor(color);
+		}
+	}
+
+}
Index: PullToRefresh/src/main/res/values-iw/pull_refresh_strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/src/main/res/values-iw/pull_refresh_strings.xml	(revision )
+++ PullToRefresh/src/main/res/values-iw/pull_refresh_strings.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+  <string name="pull_to_refresh_pull_label">משוך לרענון…</string>
+  <string name="pull_to_refresh_release_label">שחרר לרענון…</string>
+  <string name="pull_to_refresh_refreshing_label">טוען…</string>
+</resources>
Index: PullToRefresh/build/intermediates/symbols/androidTest/debug/R.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/symbols/androidTest/debug/R.txt	(revision )
+++ PullToRefresh/build/intermediates/symbols/androidTest/debug/R.txt	(revision )
@@ -0,0 +1,78 @@
+int anim slide_in_from_bottom 0x7f040000
+int anim slide_in_from_top 0x7f040001
+int anim slide_out_to_bottom 0x7f040002
+int anim slide_out_to_top 0x7f040003
+int attr ptrAdapterViewBackground 0x7f010010
+int attr ptrAnimationStyle 0x7f01000c
+int attr ptrDrawable 0x7f010006
+int attr ptrDrawableBottom 0x7f010012
+int attr ptrDrawableEnd 0x7f010008
+int attr ptrDrawableStart 0x7f010007
+int attr ptrDrawableTop 0x7f010011
+int attr ptrHeaderBackground 0x7f010001
+int attr ptrHeaderSubTextColor 0x7f010003
+int attr ptrHeaderTextAppearance 0x7f01000a
+int attr ptrHeaderTextColor 0x7f010002
+int attr ptrListViewExtrasEnabled 0x7f01000e
+int attr ptrMode 0x7f010004
+int attr ptrOverScroll 0x7f010009
+int attr ptrRefreshableViewBackground 0x7f010000
+int attr ptrRotateDrawableWhilePulling 0x7f01000f
+int attr ptrScrollingWhileRefreshingEnabled 0x7f01000d
+int attr ptrShowIndicator 0x7f010005
+int attr ptrSubHeaderTextAppearance 0x7f01000b
+int dimen header_footer_left_right_padding 0x7f070000
+int dimen header_footer_top_bottom_padding 0x7f070001
+int dimen indicator_corner_radius 0x7f070002
+int dimen indicator_internal_padding 0x7f070003
+int dimen indicator_right_padding 0x7f070004
+int drawable default_ptr_flip 0x7f020000
+int drawable default_ptr_rotate 0x7f020001
+int drawable indicator_arrow 0x7f020002
+int drawable indicator_bg_bottom 0x7f020003
+int drawable indicator_bg_top 0x7f020004
+int id both 0x7f060003
+int id disabled 0x7f060000
+int id fl_inner 0x7f06000c
+int id flip 0x7f060008
+int id gridview 0x7f060009
+int id manualOnly 0x7f060004
+int id pullDownFromTop 0x7f060005
+int id pullFromEnd 0x7f060002
+int id pullFromStart 0x7f060001
+int id pullUpFromBottom 0x7f060006
+int id pull_to_refresh_image 0x7f06000d
+int id pull_to_refresh_progress 0x7f06000e
+int id pull_to_refresh_sub_text 0x7f060010
+int id pull_to_refresh_text 0x7f06000f
+int id rotate 0x7f060007
+int id scrollview 0x7f06000a
+int id webview 0x7f06000b
+int layout pull_to_refresh_header_horizontal 0x7f030000
+int layout pull_to_refresh_header_vertical 0x7f030001
+int string pull_to_refresh_from_bottom_pull_label 0x7f050003
+int string pull_to_refresh_from_bottom_refreshing_label 0x7f050004
+int string pull_to_refresh_from_bottom_release_label 0x7f050005
+int string pull_to_refresh_pull_label 0x7f050000
+int string pull_to_refresh_refreshing_label 0x7f050001
+int string pull_to_refresh_release_label 0x7f050002
+int[] styleable PullToRefresh { 0x7f010000, 0x7f010001, 0x7f010002, 0x7f010003, 0x7f010004, 0x7f010005, 0x7f010006, 0x7f010007, 0x7f010008, 0x7f010009, 0x7f01000a, 0x7f01000b, 0x7f01000c, 0x7f01000d, 0x7f01000e, 0x7f01000f, 0x7f010010, 0x7f010011, 0x7f010012 }
+int styleable PullToRefresh_ptrAdapterViewBackground 16
+int styleable PullToRefresh_ptrAnimationStyle 12
+int styleable PullToRefresh_ptrDrawable 6
+int styleable PullToRefresh_ptrDrawableBottom 18
+int styleable PullToRefresh_ptrDrawableEnd 8
+int styleable PullToRefresh_ptrDrawableStart 7
+int styleable PullToRefresh_ptrDrawableTop 17
+int styleable PullToRefresh_ptrHeaderBackground 1
+int styleable PullToRefresh_ptrHeaderSubTextColor 3
+int styleable PullToRefresh_ptrHeaderTextAppearance 10
+int styleable PullToRefresh_ptrHeaderTextColor 2
+int styleable PullToRefresh_ptrListViewExtrasEnabled 14
+int styleable PullToRefresh_ptrMode 4
+int styleable PullToRefresh_ptrOverScroll 9
+int styleable PullToRefresh_ptrRefreshableViewBackground 0
+int styleable PullToRefresh_ptrRotateDrawableWhilePulling 15
+int styleable PullToRefresh_ptrScrollingWhileRefreshingEnabled 13
+int styleable PullToRefresh_ptrShowIndicator 5
+int styleable PullToRefresh_ptrSubHeaderTextAppearance 11
Index: PullToRefresh/build/intermediates/bundles/debug/res/values/values.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/bundles/debug/res/values/values.xml	(revision )
+++ PullToRefresh/build/intermediates/bundles/debug/res/values/values.xml	(revision )
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <declare-styleable name="PullToRefresh"><attr format="reference|color" name="ptrRefreshableViewBackground"/><attr format="reference|color" name="ptrHeaderBackground"/><attr format="reference|color" name="ptrHeaderTextColor"/><attr format="reference|color" name="ptrHeaderSubTextColor"/><attr name="ptrMode"><flag name="disabled" value="0x0"/><flag name="pullFromStart" value="0x1"/><flag name="pullFromEnd" value="0x2"/><flag name="both" value="0x3"/><flag name="manualOnly" value="0x4"/><flag name="pullDownFromTop" value="0x1"/><flag name="pullUpFromBottom" value="0x2"/></attr><attr format="reference|boolean" name="ptrShowIndicator"/><attr format="reference" name="ptrDrawable"/><attr format="reference" name="ptrDrawableStart"/><attr format="reference" name="ptrDrawableEnd"/><attr format="reference|boolean" name="ptrOverScroll"/><attr format="reference" name="ptrHeaderTextAppearance"/><attr format="reference" name="ptrSubHeaderTextAppearance"/><attr name="ptrAnimationStyle"><flag name="rotate" value="0x0"/><flag name="flip" value="0x1"/></attr><attr format="reference|boolean" name="ptrScrollingWhileRefreshingEnabled"/><attr format="reference|boolean" name="ptrListViewExtrasEnabled"/><attr format="reference|boolean" name="ptrRotateDrawableWhilePulling"/><attr format="reference|color" name="ptrAdapterViewBackground"/><attr format="reference" name="ptrDrawableTop"/><attr format="reference" name="ptrDrawableBottom"/></declare-styleable>
+    <dimen name="header_footer_left_right_padding">24dp</dimen>
+    <dimen name="header_footer_top_bottom_padding">12dp</dimen>
+    <dimen name="indicator_corner_radius">12dp</dimen>
+    <dimen name="indicator_internal_padding">4dp</dimen>
+    <dimen name="indicator_right_padding">10dp</dimen>
+    <item name="gridview" type="id"/>
+    <item name="scrollview" type="id"/>
+    <item name="webview" type="id"/>
+    <string name="pull_to_refresh_from_bottom_pull_label">@string/pull_to_refresh_pull_label</string>
+    <string name="pull_to_refresh_from_bottom_refreshing_label">@string/pull_to_refresh_refreshing_label</string>
+    <string name="pull_to_refresh_from_bottom_release_label">@string/pull_to_refresh_release_label</string>
+    <string name="pull_to_refresh_pull_label">Pull to refresh…</string>
+    <string name="pull_to_refresh_refreshing_label">Loading…</string>
+    <string name="pull_to_refresh_release_label">Release to refresh…</string>
+</resources>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/blame/res/androidTest/debug/multi/values-es.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/blame/res/androidTest/debug/multi/values-es.json	(revision )
+++ PullToRefresh/build/intermediates/blame/res/androidTest/debug/multi/values-es.json	(revision )
@@ -0,0 +1,64 @@
+[
+    {
+        "outputFile": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\res\\merged\\androidTest\\debug\\values-es\\values-es.xml",
+        "map": [
+            {
+                "to": {
+                    "startLine": 2,
+                    "startColumn": 4,
+                    "startOffset": 55,
+                    "endColumn": 77,
+                    "endOffset": 128
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values-es\\values-es.xml",
+                    "position": {
+                        "startLine": 2,
+                        "startColumn": 4,
+                        "startOffset": 55,
+                        "endColumn": 77,
+                        "endOffset": 128
+                    }
+                }
+            },
+            {
+                "to": {
+                    "startLine": 3,
+                    "startColumn": 4,
+                    "startOffset": 133,
+                    "endColumn": 70,
+                    "endOffset": 199
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values-es\\values-es.xml",
+                    "position": {
+                        "startLine": 3,
+                        "startColumn": 4,
+                        "startOffset": 133,
+                        "endColumn": 70,
+                        "endOffset": 199
+                    }
+                }
+            },
+            {
+                "to": {
+                    "startLine": 4,
+                    "startColumn": 4,
+                    "startOffset": 204,
+                    "endColumn": 81,
+                    "endOffset": 281
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values-es\\values-es.xml",
+                    "position": {
+                        "startLine": 4,
+                        "startColumn": 4,
+                        "startOffset": 204,
+                        "endColumn": 81,
+                        "endOffset": 281
+                    }
+                }
+            }
+        ]
+    }
+]
\ No newline at end of file
Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- build.gradle	(revision )
+++ build.gradle	(revision )
@@ -0,0 +1,23 @@
+// Top-level build file where you can add configuration options common to all sub-projects/modules.
+
+buildscript {
+    repositories {
+        jcenter()
+    }
+    dependencies {
+        classpath 'com.android.tools.build:gradle:1.5.0'
+
+        // NOTE: Do not place your application dependencies here; they belong
+        // in the individual module build.gradle files
+    }
+}
+
+allprojects {
+    repositories {
+        jcenter()
+    }
+}
+
+task clean(type: Delete) {
+    delete rootProject.buildDir
+}
Index: PullToRefresh/build/intermediates/bundles/debug/res/values-zh/values-zh.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/bundles/debug/res/values-zh/values-zh.xml	(revision )
+++ PullToRefresh/build/intermediates/bundles/debug/res/values-zh/values-zh.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="pull_to_refresh_pull_label">下拉刷新…</string>
+    <string name="pull_to_refresh_refreshing_label">正在载入…</string>
+    <string name="pull_to_refresh_release_label">放开以刷新…</string>
+</resources>
\ No newline at end of file
Index: PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/PullToRefreshScrollView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/PullToRefreshScrollView.java	(revision )
+++ PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/PullToRefreshScrollView.java	(revision )
@@ -0,0 +1,109 @@
+/*******************************************************************************
+ * Copyright 2011, 2012 Chris Banes.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ *******************************************************************************/
+package com.handmark.pulltorefresh.library;
+
+import android.annotation.TargetApi;
+import android.content.Context;
+import android.os.Build.VERSION;
+import android.os.Build.VERSION_CODES;
+import android.util.AttributeSet;
+import android.view.View;
+import android.widget.ScrollView;
+
+public class PullToRefreshScrollView extends PullToRefreshBase<ScrollView> {
+
+	public PullToRefreshScrollView(Context context) {
+		super(context);
+	}
+
+	public PullToRefreshScrollView(Context context, AttributeSet attrs) {
+		super(context, attrs);
+	}
+
+	public PullToRefreshScrollView(Context context, Mode mode) {
+		super(context, mode);
+	}
+
+	public PullToRefreshScrollView(Context context, Mode mode, AnimationStyle style) {
+		super(context, mode, style);
+	}
+
+	@Override
+	public final Orientation getPullToRefreshScrollDirection() {
+		return Orientation.VERTICAL;
+	}
+
+	@Override
+	protected ScrollView createRefreshableView(Context context, AttributeSet attrs) {
+		ScrollView scrollView;
+		if (VERSION.SDK_INT >= VERSION_CODES.GINGERBREAD) {
+			scrollView = new InternalScrollViewSDK9(context, attrs);
+		} else {
+			scrollView = new ScrollView(context, attrs);
+		}
+
+		scrollView.setId(R.id.scrollview);
+		return scrollView;
+	}
+
+	@Override
+	protected boolean isReadyForPullStart() {
+		return mRefreshableView.getScrollY() == 0;
+	}
+
+	@Override
+	protected boolean isReadyForPullEnd() {
+		View scrollViewChild = mRefreshableView.getChildAt(0);
+		if (null != scrollViewChild) {
+			return mRefreshableView.getScrollY() >= (scrollViewChild.getHeight() - getHeight());
+		}
+		return false;
+	}
+
+	@TargetApi(9)
+	final class InternalScrollViewSDK9 extends ScrollView {
+
+		public InternalScrollViewSDK9(Context context, AttributeSet attrs) {
+			super(context, attrs);
+		}
+
+		@Override
+		protected boolean overScrollBy(int deltaX, int deltaY, int scrollX, int scrollY, int scrollRangeX,
+				int scrollRangeY, int maxOverScrollX, int maxOverScrollY, boolean isTouchEvent) {
+
+			final boolean returnValue = super.overScrollBy(deltaX, deltaY, scrollX, scrollY, scrollRangeX,
+					scrollRangeY, maxOverScrollX, maxOverScrollY, isTouchEvent);
+
+			// Does all of the hard work...
+			OverscrollHelper.overScrollBy(PullToRefreshScrollView.this, deltaX, scrollX, deltaY, scrollY,
+					getScrollRange(), isTouchEvent);
+
+			return returnValue;
+		}
+
+		/**
+		 * Taken from the AOSP ScrollView source
+		 */
+		private int getScrollRange() {
+			int scrollRange = 0;
+			if (getChildCount() > 0) {
+				View child = getChildAt(0);
+				scrollRange = Math.max(0, child.getHeight() - (getHeight() - getPaddingBottom() - getPaddingTop()));
+			}
+			return scrollRange;
+		}
+	}
+}
Index: PullToRefresh/src/main/res/anim/slide_in_from_bottom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/src/main/res/anim/slide_in_from_bottom.xml	(revision )
+++ PullToRefresh/src/main/res/anim/slide_in_from_bottom.xml	(revision )
@@ -0,0 +1,21 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+     Copyright (C) 2009 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+
+<translate xmlns:android="http://schemas.android.com/apk/res/android"
+    android:duration="@android:integer/config_longAnimTime"
+    android:fromYDelta="100%p"
+    android:toYDelta="0" />
Index: app/src/main/res/layout/activity_city.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_city.xml	(revision )
+++ app/src/main/res/layout/activity_city.xml	(revision )
@@ -0,0 +1,50 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@color/blue"
+    android:orientation="vertical"
+    android:paddingLeft="16dp"
+    android:paddingRight="8dp" >
+
+    <RelativeLayout
+        android:layout_width="match_parent"
+        android:layout_height="64dp" >
+
+        <ImageView
+            android:id="@+id/iv_back"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_centerVertical="true"
+            android:layout_marginLeft="8dp"
+            android:src="@drawable/back" />
+
+        <TextView
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_centerInParent="true"
+            android:text="@string/title_city"
+            android:textColor="@color/text_color"
+            android:textSize="20sp" />
+
+        <View
+            android:layout_width="match_parent"
+            android:layout_height="1px"
+            android:layout_alignParentBottom="true"
+            android:background="@color/light_grey" />
+    </RelativeLayout>
+
+    <ListView
+        android:id="@+id/lv_city"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginLeft="16dp"
+        android:layout_marginRight="16dp"
+        android:scrollbars="none" 
+        android:cacheColorHint="#00000000"
+        android:listSelector="#00000000"
+        android:divider="@color/dark_grey"
+        android:dividerHeight="1px"
+        />
+
+</LinearLayout>
\ No newline at end of file
Index: PullToRefresh/src/main/res/values-fi/pull_refresh_strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/src/main/res/values-fi/pull_refresh_strings.xml	(revision )
+++ PullToRefresh/src/main/res/values-fi/pull_refresh_strings.xml	(revision )
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+
+    <string name="pull_to_refresh_pull_label">Päivitä vetämällä alas…</string>
+    <string name="pull_to_refresh_release_label">Päivitä vapauttamalla…</string>
+    <string name="pull_to_refresh_refreshing_label">Päivitetään…</string>
+
+    <!-- Just use standard Pull Down String when pulling up. These can be set for languages which require it -->
+    <string name="pull_to_refresh_from_bottom_pull_label">Päivitä vetämällä ylös…</string>
+    <string name="pull_to_refresh_from_bottom_release_label">@string/pull_to_refresh_release_label</string>
+    <string name="pull_to_refresh_from_bottom_refreshing_label">@string/pull_to_refresh_refreshing_label</string>
+
+</resources>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/blame/res/androidTest/debug/multi/values-ro.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/blame/res/androidTest/debug/multi/values-ro.json	(revision )
+++ PullToRefresh/build/intermediates/blame/res/androidTest/debug/multi/values-ro.json	(revision )
@@ -0,0 +1,64 @@
+[
+    {
+        "outputFile": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\res\\merged\\androidTest\\debug\\values-ro\\values-ro.xml",
+        "map": [
+            {
+                "to": {
+                    "startLine": 2,
+                    "startColumn": 4,
+                    "startOffset": 55,
+                    "endColumn": 83,
+                    "endOffset": 134
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values-ro\\values-ro.xml",
+                    "position": {
+                        "startLine": 2,
+                        "startColumn": 4,
+                        "startOffset": 55,
+                        "endColumn": 83,
+                        "endOffset": 134
+                    }
+                }
+            },
+            {
+                "to": {
+                    "startLine": 3,
+                    "startColumn": 4,
+                    "startOffset": 139,
+                    "endColumn": 71,
+                    "endOffset": 206
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values-ro\\values-ro.xml",
+                    "position": {
+                        "startLine": 3,
+                        "startColumn": 4,
+                        "startOffset": 139,
+                        "endColumn": 71,
+                        "endOffset": 206
+                    }
+                }
+            },
+            {
+                "to": {
+                    "startLine": 4,
+                    "startColumn": 4,
+                    "startOffset": 211,
+                    "endColumn": 91,
+                    "endOffset": 298
+                },
+                "from": {
+                    "file": "E:\\AndroidStudioProjects\\WeatherTest3\\PullToRefresh\\build\\intermediates\\bundles\\debug\\res\\values-ro\\values-ro.xml",
+                    "position": {
+                        "startLine": 4,
+                        "startColumn": 4,
+                        "startOffset": 211,
+                        "endColumn": 91,
+                        "endOffset": 298
+                    }
+                }
+            }
+        ]
+    }
+]
\ No newline at end of file
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/modules.xml	(revision )
+++ .idea/modules.xml	(revision )
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/PullToRefresh/PullToRefresh.iml" filepath="$PROJECT_DIR$/PullToRefresh/PullToRefresh.iml" />
+      <module fileurl="file://$PROJECT_DIR$/WeatherTest3.iml" filepath="$PROJECT_DIR$/WeatherTest3.iml" />
+      <module fileurl="file://$PROJECT_DIR$/app/app.iml" filepath="$PROJECT_DIR$/app/app.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/bundles/release/res/anim/slide_out_to_top.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/bundles/release/res/anim/slide_out_to_top.xml	(revision )
+++ PullToRefresh/build/intermediates/bundles/release/res/anim/slide_out_to_top.xml	(revision )
@@ -0,0 +1,21 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+     Copyright (C) 2009 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+
+<translate xmlns:android="http://schemas.android.com/apk/res/android"
+    android:duration="@android:integer/config_longAnimTime"
+    android:fromYDelta="0"
+    android:toYDelta="-100%p" />
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision )
+++ app/build.gradle	(revision )
@@ -0,0 +1,28 @@
+apply plugin: 'com.android.application'
+
+android {
+    compileSdkVersion 23
+    buildToolsVersion "24.0.0"
+
+    defaultConfig {
+        applicationId "com.example.victor.weathertest3"
+        minSdkVersion 14
+        targetSdkVersion 23
+        versionCode 1
+        versionName "1.0"
+    }
+    buildTypes {
+        release {
+            minifyEnabled false
+            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
+        }
+    }
+}
+
+dependencies {
+    compile fileTree(include: ['*.jar'], dir: 'libs')
+    testCompile 'junit:junit:4.12'
+    compile 'com.android.support:appcompat-v7:23.4.0'
+    compile project(':PullToRefresh')
+    compile files('libs/ApiStoreSDK1.0.4.jar')
+}
Index: PullToRefresh/src/main/res/values-de/pull_refresh_strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/src/main/res/values-de/pull_refresh_strings.xml	(revision )
+++ PullToRefresh/src/main/res/values-de/pull_refresh_strings.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+  <string name="pull_to_refresh_pull_label">Ziehen zum Aktualisieren…</string>
+  <string name="pull_to_refresh_release_label">Loslassen zum Aktualisieren…</string>
+  <string name="pull_to_refresh_refreshing_label">Laden…</string>
+</resources>
Index: PullToRefresh/build/intermediates/bundles/release/res/anim/slide_in_from_bottom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/bundles/release/res/anim/slide_in_from_bottom.xml	(revision )
+++ PullToRefresh/build/intermediates/bundles/release/res/anim/slide_in_from_bottom.xml	(revision )
@@ -0,0 +1,21 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+     Copyright (C) 2009 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+
+<translate xmlns:android="http://schemas.android.com/apk/res/android"
+    android:duration="@android:integer/config_longAnimTime"
+    android:fromYDelta="100%p"
+    android:toYDelta="0" />
Index: PullToRefresh/src/main/res/values/ids.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/src/main/res/values/ids.xml	(revision )
+++ PullToRefresh/src/main/res/values/ids.xml	(revision )
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+
+    <item type="id" name="gridview" />
+    <item type="id" name="webview" />
+    <item type="id" name="scrollview" />
+
+</resources>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/manifest/androidTest/debug/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/manifest/androidTest/debug/AndroidManifest.xml	(revision )
+++ PullToRefresh/build/intermediates/manifest/androidTest/debug/AndroidManifest.xml	(revision )
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.handmark.pulltorefresh.library.test" >
+
+    <uses-sdk
+        android:minSdkVersion="4"
+        android:targetSdkVersion="4" />
+
+    <instrumentation
+        android:name="android.test.InstrumentationTestRunner"
+        android:functionalTest="false"
+        android:handleProfiling="false"
+        android:label="Tests for com.handmark.pulltorefresh.library.test"
+        android:targetPackage="com.handmark.pulltorefresh.library.test" />
+
+    <application>
+        <uses-library android:name="android.test.runner" />
+    </application>
+
+</manifest>
\ No newline at end of file
Index: PullToRefresh/build/intermediates/bundles/release/res/values/values.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/intermediates/bundles/release/res/values/values.xml	(revision )
+++ PullToRefresh/build/intermediates/bundles/release/res/values/values.xml	(revision )
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <declare-styleable name="PullToRefresh"><attr format="reference|color" name="ptrRefreshableViewBackground"/><attr format="reference|color" name="ptrHeaderBackground"/><attr format="reference|color" name="ptrHeaderTextColor"/><attr format="reference|color" name="ptrHeaderSubTextColor"/><attr name="ptrMode"><flag name="disabled" value="0x0"/><flag name="pullFromStart" value="0x1"/><flag name="pullFromEnd" value="0x2"/><flag name="both" value="0x3"/><flag name="manualOnly" value="0x4"/><flag name="pullDownFromTop" value="0x1"/><flag name="pullUpFromBottom" value="0x2"/></attr><attr format="reference|boolean" name="ptrShowIndicator"/><attr format="reference" name="ptrDrawable"/><attr format="reference" name="ptrDrawableStart"/><attr format="reference" name="ptrDrawableEnd"/><attr format="reference|boolean" name="ptrOverScroll"/><attr format="reference" name="ptrHeaderTextAppearance"/><attr format="reference" name="ptrSubHeaderTextAppearance"/><attr name="ptrAnimationStyle"><flag name="rotate" value="0x0"/><flag name="flip" value="0x1"/></attr><attr format="reference|boolean" name="ptrScrollingWhileRefreshingEnabled"/><attr format="reference|boolean" name="ptrListViewExtrasEnabled"/><attr format="reference|boolean" name="ptrRotateDrawableWhilePulling"/><attr format="reference|color" name="ptrAdapterViewBackground"/><attr format="reference" name="ptrDrawableTop"/><attr format="reference" name="ptrDrawableBottom"/></declare-styleable>
+    <dimen name="header_footer_left_right_padding">24dp</dimen>
+    <dimen name="header_footer_top_bottom_padding">12dp</dimen>
+    <dimen name="indicator_corner_radius">12dp</dimen>
+    <dimen name="indicator_internal_padding">4dp</dimen>
+    <dimen name="indicator_right_padding">10dp</dimen>
+    <item name="gridview" type="id"/>
+    <item name="scrollview" type="id"/>
+    <item name="webview" type="id"/>
+    <string name="pull_to_refresh_from_bottom_pull_label">@string/pull_to_refresh_pull_label</string>
+    <string name="pull_to_refresh_from_bottom_refreshing_label">@string/pull_to_refresh_refreshing_label</string>
+    <string name="pull_to_refresh_from_bottom_release_label">@string/pull_to_refresh_release_label</string>
+    <string name="pull_to_refresh_pull_label">Pull to refresh…</string>
+    <string name="pull_to_refresh_refreshing_label">Loading…</string>
+    <string name="pull_to_refresh_release_label">Release to refresh…</string>
+</resources>
\ No newline at end of file
Index: PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/extras/SoundPullEventListener.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/extras/SoundPullEventListener.java	(revision )
+++ PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/extras/SoundPullEventListener.java	(revision )
@@ -0,0 +1,96 @@
+/*******************************************************************************
+ * Copyright 2011, 2012 Chris Banes.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ *******************************************************************************/
+package com.handmark.pulltorefresh.library.extras;
+
+import java.util.HashMap;
+
+import android.content.Context;
+import android.media.MediaPlayer;
+import android.view.View;
+
+import com.handmark.pulltorefresh.library.PullToRefreshBase;
+import com.handmark.pulltorefresh.library.PullToRefreshBase.Mode;
+import com.handmark.pulltorefresh.library.PullToRefreshBase.State;
+
+public class SoundPullEventListener<V extends View> implements PullToRefreshBase.OnPullEventListener<V> {
+
+	private final Context mContext;
+	private final HashMap<State, Integer> mSoundMap;
+
+	private MediaPlayer mCurrentMediaPlayer;
+
+	/**
+	 * Constructor
+	 * 
+	 * @param context - Context
+	 */
+	public SoundPullEventListener(Context context) {
+		mContext = context;
+		mSoundMap = new HashMap<State, Integer>();
+	}
+
+	@Override
+	public final void onPullEvent(PullToRefreshBase<V> refreshView, State event, Mode direction) {
+		Integer soundResIdObj = mSoundMap.get(event);
+		if (null != soundResIdObj) {
+			playSound(soundResIdObj.intValue());
+		}
+	}
+
+	/**
+	 * Set the Sounds to be played when a Pull Event happens. You specify which
+	 * sound plays for which events by calling this method multiple times for
+	 * each event.
+	 * <p/>
+	 * If you've already set a sound for a certain event, and add another sound
+	 * for that event, only the new sound will be played.
+	 * 
+	 * @param event - The event for which the sound will be played.
+	 * @param resId - Resource Id of the sound file to be played (e.g.
+	 *            <var>R.raw.pull_sound</var>)
+	 */
+	public void addSoundEvent(State event, int resId) {
+		mSoundMap.put(event, resId);
+	}
+
+	/**
+	 * Clears all of the previously set sounds and events.
+	 */
+	public void clearSounds() {
+		mSoundMap.clear();
+	}
+
+	/**
+	 * Gets the current (or last) MediaPlayer instance.
+	 */
+	public MediaPlayer getCurrentMediaPlayer() {
+		return mCurrentMediaPlayer;
+	}
+
+	private void playSound(int resId) {
+		// Stop current player, if there's one playing
+		if (null != mCurrentMediaPlayer) {
+			mCurrentMediaPlayer.stop();
+			mCurrentMediaPlayer.release();
+		}
+
+		mCurrentMediaPlayer = MediaPlayer.create(mContext, resId);
+		if (null != mCurrentMediaPlayer) {
+			mCurrentMediaPlayer.start();
+		}
+	}
+
+}
Index: app/src/main/res/values/ids.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/ids.xml	(revision )
+++ app/src/main/res/values/ids.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+
+    <item type="id" name="scrollview" />
+
+</resources>
\ No newline at end of file
Index: PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/PullToRefreshBase.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/PullToRefreshBase.java	(revision )
+++ PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/PullToRefreshBase.java	(revision )
@@ -0,0 +1,1653 @@
+/*******************************************************************************
+ * Copyright 2011, 2012 Chris Banes.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ *******************************************************************************/
+package com.handmark.pulltorefresh.library;
+
+import android.content.Context;
+import android.content.res.TypedArray;
+import android.graphics.drawable.Drawable;
+import android.os.Build.VERSION;
+import android.os.Build.VERSION_CODES;
+import android.os.Bundle;
+import android.os.Parcelable;
+import android.util.AttributeSet;
+import android.util.Log;
+import android.view.Gravity;
+import android.view.MotionEvent;
+import android.view.View;
+import android.view.ViewConfiguration;
+import android.view.ViewGroup;
+import android.view.animation.DecelerateInterpolator;
+import android.view.animation.Interpolator;
+import android.widget.FrameLayout;
+import android.widget.LinearLayout;
+
+import com.handmark.pulltorefresh.library.internal.FlipLoadingLayout;
+import com.handmark.pulltorefresh.library.internal.LoadingLayout;
+import com.handmark.pulltorefresh.library.internal.RotateLoadingLayout;
+import com.handmark.pulltorefresh.library.internal.Utils;
+import com.handmark.pulltorefresh.library.internal.ViewCompat;
+
+public abstract class PullToRefreshBase<T extends View> extends LinearLayout implements IPullToRefresh<T> {
+
+	// ===========================================================
+	// Constants
+	// ===========================================================
+
+	static final boolean DEBUG = true;
+
+	static final boolean USE_HW_LAYERS = false;
+
+	static final String LOG_TAG = "PullToRefresh";
+
+	static final float FRICTION = 2.0f;
+
+	public static final int SMOOTH_SCROLL_DURATION_MS = 200;
+	public static final int SMOOTH_SCROLL_LONG_DURATION_MS = 325;
+	static final int DEMO_SCROLL_INTERVAL = 225;
+
+	static final String STATE_STATE = "ptr_state";
+	static final String STATE_MODE = "ptr_mode";
+	static final String STATE_CURRENT_MODE = "ptr_current_mode";
+	static final String STATE_SCROLLING_REFRESHING_ENABLED = "ptr_disable_scrolling";
+	static final String STATE_SHOW_REFRESHING_VIEW = "ptr_show_refreshing_view";
+	static final String STATE_SUPER = "ptr_super";
+
+	// ===========================================================
+	// Fields
+	// ===========================================================
+
+	private int mTouchSlop;
+	private float mLastMotionX, mLastMotionY;
+	private float mInitialMotionX, mInitialMotionY;
+
+	private boolean mIsBeingDragged = false;
+	private State mState = State.RESET;
+	private Mode mMode = Mode.getDefault();
+
+	private Mode mCurrentMode;
+	T mRefreshableView;
+	private FrameLayout mRefreshableViewWrapper;
+
+	private boolean mShowViewWhileRefreshing = true;
+	private boolean mScrollingWhileRefreshingEnabled = false;
+	private boolean mFilterTouchEvents = true;
+	private boolean mOverScrollEnabled = true;
+	private boolean mLayoutVisibilityChangesEnabled = true;
+
+	private Interpolator mScrollAnimationInterpolator;
+	private AnimationStyle mLoadingAnimationStyle = AnimationStyle.getDefault();
+
+	private LoadingLayout mHeaderLayout;
+	private LoadingLayout mFooterLayout;
+
+	private OnRefreshListener<T> mOnRefreshListener;
+	private OnRefreshListener2<T> mOnRefreshListener2;
+	private OnPullEventListener<T> mOnPullEventListener;
+
+	private SmoothScrollRunnable mCurrentSmoothScrollRunnable;
+
+	// ===========================================================
+	// Constructors
+	// ===========================================================
+
+	public PullToRefreshBase(Context context) {
+		super(context);
+		init(context, null);
+	}
+
+	public PullToRefreshBase(Context context, AttributeSet attrs) {
+		super(context, attrs);
+		init(context, attrs);
+	}
+
+	public PullToRefreshBase(Context context, Mode mode) {
+		super(context);
+		mMode = mode;
+		init(context, null);
+	}
+
+	public PullToRefreshBase(Context context, Mode mode, AnimationStyle animStyle) {
+		super(context);
+		mMode = mode;
+		mLoadingAnimationStyle = animStyle;
+		init(context, null);
+	}
+
+	@Override
+	public void addView(View child, int index, ViewGroup.LayoutParams params) {
+		if (DEBUG) {
+			Log.d(LOG_TAG, "addView: " + child.getClass().getSimpleName());
+		}
+
+		final T refreshableView = getRefreshableView();
+
+		if (refreshableView instanceof ViewGroup) {
+			((ViewGroup) refreshableView).addView(child, index, params);
+		} else {
+			throw new UnsupportedOperationException("Refreshable View is not a ViewGroup so can't addView");
+		}
+	}
+
+	@Override
+	public final boolean demo() {
+		if (mMode.showHeaderLoadingLayout() && isReadyForPullStart()) {
+			smoothScrollToAndBack(-getHeaderSize() * 2);
+			return true;
+		} else if (mMode.showFooterLoadingLayout() && isReadyForPullEnd()) {
+			smoothScrollToAndBack(getFooterSize() * 2);
+			return true;
+		}
+
+		return false;
+	}
+
+	@Override
+	public final Mode getCurrentMode() {
+		return mCurrentMode;
+	}
+
+	@Override
+	public final boolean getFilterTouchEvents() {
+		return mFilterTouchEvents;
+	}
+
+	@Override
+	public final ILoadingLayout getLoadingLayoutProxy() {
+		return getLoadingLayoutProxy(true, true);
+	}
+
+	@Override
+	public final ILoadingLayout getLoadingLayoutProxy(boolean includeStart, boolean includeEnd) {
+		return createLoadingLayoutProxy(includeStart, includeEnd);
+	}
+
+	@Override
+	public final Mode getMode() {
+		return mMode;
+	}
+
+	@Override
+	public final T getRefreshableView() {
+		return mRefreshableView;
+	}
+
+	@Override
+	public final boolean getShowViewWhileRefreshing() {
+		return mShowViewWhileRefreshing;
+	}
+
+	@Override
+	public final State getState() {
+		return mState;
+	}
+
+	/**
+	 * @deprecated See {@link #isScrollingWhileRefreshingEnabled()}.
+	 */
+	public final boolean isDisableScrollingWhileRefreshing() {
+		return !isScrollingWhileRefreshingEnabled();
+	}
+
+	@Override
+	public final boolean isPullToRefreshEnabled() {
+		return mMode.permitsPullToRefresh();
+	}
+
+	@Override
+	public final boolean isPullToRefreshOverScrollEnabled() {
+		return VERSION.SDK_INT >= VERSION_CODES.GINGERBREAD && mOverScrollEnabled
+				&& OverscrollHelper.isAndroidOverScrollEnabled(mRefreshableView);
+	}
+
+	@Override
+	public final boolean isRefreshing() {
+		return mState == State.REFRESHING || mState == State.MANUAL_REFRESHING;
+	}
+
+	@Override
+	public final boolean isScrollingWhileRefreshingEnabled() {
+		return mScrollingWhileRefreshingEnabled;
+	}
+
+	@Override
+	public final boolean onInterceptTouchEvent(MotionEvent event) {
+
+		if (!isPullToRefreshEnabled()) {
+			return false;
+		}
+
+		final int action = event.getAction();
+
+		if (action == MotionEvent.ACTION_CANCEL || action == MotionEvent.ACTION_UP) {
+			mIsBeingDragged = false;
+			return false;
+		}
+
+		if (action != MotionEvent.ACTION_DOWN && mIsBeingDragged) {
+			return true;
+		}
+
+		switch (action) {
+			case MotionEvent.ACTION_MOVE: {
+				// If we're refreshing, and the flag is set. Eat all MOVE events
+				if (!mScrollingWhileRefreshingEnabled && isRefreshing()) {
+					return true;
+				}
+
+				if (isReadyForPull()) {
+					final float y = event.getY(), x = event.getX();
+					final float diff, oppositeDiff, absDiff;
+
+					// We need to use the correct values, based on scroll
+					// direction
+					switch (getPullToRefreshScrollDirection()) {
+						case HORIZONTAL:
+							diff = x - mLastMotionX;
+							oppositeDiff = y - mLastMotionY;
+							break;
+						case VERTICAL:
+						default:
+							diff = y - mLastMotionY;
+							oppositeDiff = x - mLastMotionX;
+							break;
+					}
+					absDiff = Math.abs(diff);
+
+					if (absDiff > mTouchSlop && (!mFilterTouchEvents || absDiff > Math.abs(oppositeDiff))) {
+						if (mMode.showHeaderLoadingLayout() && diff >= 1f && isReadyForPullStart()) {
+							mLastMotionY = y;
+							mLastMotionX = x;
+							mIsBeingDragged = true;
+							if (mMode == Mode.BOTH) {
+								mCurrentMode = Mode.PULL_FROM_START;
+							}
+						} else if (mMode.showFooterLoadingLayout() && diff <= -1f && isReadyForPullEnd()) {
+							mLastMotionY = y;
+							mLastMotionX = x;
+							mIsBeingDragged = true;
+							if (mMode == Mode.BOTH) {
+								mCurrentMode = Mode.PULL_FROM_END;
+							}
+						}
+					}
+				}
+				break;
+			}
+			case MotionEvent.ACTION_DOWN: {
+				if (isReadyForPull()) {
+					mLastMotionY = mInitialMotionY = event.getY();
+					mLastMotionX = mInitialMotionX = event.getX();
+					mIsBeingDragged = false;
+				}
+				break;
+			}
+		}
+
+		return mIsBeingDragged;
+	}
+
+	@Override
+	public final void onRefreshComplete() {
+		if (isRefreshing()) {
+			setState(State.RESET);
+		}
+	}
+
+	@Override
+	public final boolean onTouchEvent(MotionEvent event) {
+
+		if (!isPullToRefreshEnabled()) {
+			return false;
+		}
+
+		// If we're refreshing, and the flag is set. Eat the event
+		if (!mScrollingWhileRefreshingEnabled && isRefreshing()) {
+			return true;
+		}
+
+		if (event.getAction() == MotionEvent.ACTION_DOWN && event.getEdgeFlags() != 0) {
+			return false;
+		}
+
+		switch (event.getAction()) {
+			case MotionEvent.ACTION_MOVE: {
+				if (mIsBeingDragged) {
+					mLastMotionY = event.getY();
+					mLastMotionX = event.getX();
+					pullEvent();
+					return true;
+				}
+				break;
+			}
+
+			case MotionEvent.ACTION_DOWN: {
+				if (isReadyForPull()) {
+					mLastMotionY = mInitialMotionY = event.getY();
+					mLastMotionX = mInitialMotionX = event.getX();
+					return true;
+				}
+				break;
+			}
+
+			case MotionEvent.ACTION_CANCEL:
+			case MotionEvent.ACTION_UP: {
+				if (mIsBeingDragged) {
+					mIsBeingDragged = false;
+
+					if (mState == State.RELEASE_TO_REFRESH
+							&& (null != mOnRefreshListener || null != mOnRefreshListener2)) {
+						setState(State.REFRESHING, true);
+						return true;
+					}
+
+					// If we're already refreshing, just scroll back to the top
+					if (isRefreshing()) {
+						smoothScrollTo(0);
+						return true;
+					}
+
+					// If we haven't returned by here, then we're not in a state
+					// to pull, so just reset
+					setState(State.RESET);
+
+					return true;
+				}
+				break;
+			}
+		}
+
+		return false;
+	}
+
+	public final void setScrollingWhileRefreshingEnabled(boolean allowScrollingWhileRefreshing) {
+		mScrollingWhileRefreshingEnabled = allowScrollingWhileRefreshing;
+	}
+
+	/**
+	 * @deprecated See {@link #setScrollingWhileRefreshingEnabled(boolean)}
+	 */
+	public void setDisableScrollingWhileRefreshing(boolean disableScrollingWhileRefreshing) {
+		setScrollingWhileRefreshingEnabled(!disableScrollingWhileRefreshing);
+	}
+
+	@Override
+	public final void setFilterTouchEvents(boolean filterEvents) {
+		mFilterTouchEvents = filterEvents;
+	}
+
+	/**
+	 * @deprecated You should now call this method on the result of
+	 *             {@link #getLoadingLayoutProxy()}.
+	 */
+	public void setLastUpdatedLabel(CharSequence label) {
+		getLoadingLayoutProxy().setLastUpdatedLabel(label);
+	}
+
+	/**
+	 * @deprecated You should now call this method on the result of
+	 *             {@link #getLoadingLayoutProxy()}.
+	 */
+	public void setLoadingDrawable(Drawable drawable) {
+		getLoadingLayoutProxy().setLoadingDrawable(drawable);
+	}
+
+	/**
+	 * @deprecated You should now call this method on the result of
+	 *             {@link #getLoadingLayoutProxy(boolean, boolean)}.
+	 */
+	public void setLoadingDrawable(Drawable drawable, Mode mode) {
+		getLoadingLayoutProxy(mode.showHeaderLoadingLayout(), mode.showFooterLoadingLayout()).setLoadingDrawable(
+				drawable);
+	}
+
+	@Override
+	public void setLongClickable(boolean longClickable) {
+		getRefreshableView().setLongClickable(longClickable);
+	}
+
+	@Override
+	public final void setMode(Mode mode) {
+		if (mode != mMode) {
+			if (DEBUG) {
+				Log.d(LOG_TAG, "Setting mode to: " + mode);
+			}
+			mMode = mode;
+			updateUIForMode();
+		}
+	}
+
+	public void setOnPullEventListener(OnPullEventListener<T> listener) {
+		mOnPullEventListener = listener;
+	}
+
+	@Override
+	public final void setOnRefreshListener(OnRefreshListener<T> listener) {
+		mOnRefreshListener = listener;
+		mOnRefreshListener2 = null;
+	}
+
+	@Override
+	public final void setOnRefreshListener(OnRefreshListener2<T> listener) {
+		mOnRefreshListener2 = listener;
+		mOnRefreshListener = null;
+	}
+
+	/**
+	 * @deprecated You should now call this method on the result of
+	 *             {@link #getLoadingLayoutProxy()}.
+	 */
+	public void setPullLabel(CharSequence pullLabel) {
+		getLoadingLayoutProxy().setPullLabel(pullLabel);
+	}
+
+	/**
+	 * @deprecated You should now call this method on the result of
+	 *             {@link #getLoadingLayoutProxy(boolean, boolean)}.
+	 */
+	public void setPullLabel(CharSequence pullLabel, Mode mode) {
+		getLoadingLayoutProxy(mode.showHeaderLoadingLayout(), mode.showFooterLoadingLayout()).setPullLabel(pullLabel);
+	}
+
+	/**
+	 * @param enable Whether Pull-To-Refresh should be used
+	 * @deprecated This simple calls setMode with an appropriate mode based on
+	 *             the passed value.
+	 */
+	public final void setPullToRefreshEnabled(boolean enable) {
+		setMode(enable ? Mode.getDefault() : Mode.DISABLED);
+	}
+
+	@Override
+	public final void setPullToRefreshOverScrollEnabled(boolean enabled) {
+		mOverScrollEnabled = enabled;
+	}
+
+	@Override
+	public final void setRefreshing() {
+		setRefreshing(true);
+	}
+
+	@Override
+	public final void setRefreshing(boolean doScroll) {
+		if (!isRefreshing()) {
+			setState(State.MANUAL_REFRESHING, doScroll);
+		}
+	}
+
+	/**
+	 * @deprecated You should now call this method on the result of
+	 *             {@link #getLoadingLayoutProxy()}.
+	 */
+	public void setRefreshingLabel(CharSequence refreshingLabel) {
+		getLoadingLayoutProxy().setRefreshingLabel(refreshingLabel);
+	}
+
+	/**
+	 * @deprecated You should now call this method on the result of
+	 *             {@link #getLoadingLayoutProxy(boolean, boolean)}.
+	 */
+	public void setRefreshingLabel(CharSequence refreshingLabel, Mode mode) {
+		getLoadingLayoutProxy(mode.showHeaderLoadingLayout(), mode.showFooterLoadingLayout()).setRefreshingLabel(
+				refreshingLabel);
+	}
+
+	/**
+	 * @deprecated You should now call this method on the result of
+	 *             {@link #getLoadingLayoutProxy()}.
+	 */
+	public void setReleaseLabel(CharSequence releaseLabel) {
+		setReleaseLabel(releaseLabel, Mode.BOTH);
+	}
+
+	/**
+	 * @deprecated You should now call this method on the result of
+	 *             {@link #getLoadingLayoutProxy(boolean, boolean)}.
+	 */
+	public void setReleaseLabel(CharSequence releaseLabel, Mode mode) {
+		getLoadingLayoutProxy(mode.showHeaderLoadingLayout(), mode.showFooterLoadingLayout()).setReleaseLabel(
+				releaseLabel);
+	}
+
+	public void setScrollAnimationInterpolator(Interpolator interpolator) {
+		mScrollAnimationInterpolator = interpolator;
+	}
+
+	@Override
+	public final void setShowViewWhileRefreshing(boolean showView) {
+		mShowViewWhileRefreshing = showView;
+	}
+
+	/**
+	 * @return Either {@link Orientation#VERTICAL} or
+	 *         {@link Orientation#HORIZONTAL} depending on the scroll direction.
+	 */
+	public abstract Orientation getPullToRefreshScrollDirection();
+
+	final void setState(State state, final boolean... params) {
+		mState = state;
+		if (DEBUG) {
+			Log.d(LOG_TAG, "State: " + mState.name());
+		}
+
+		switch (mState) {
+			case RESET:
+				onReset();
+				break;
+			case PULL_TO_REFRESH:
+				onPullToRefresh();
+				break;
+			case RELEASE_TO_REFRESH:
+				onReleaseToRefresh();
+				break;
+			case REFRESHING:
+			case MANUAL_REFRESHING:
+				onRefreshing(params[0]);
+				break;
+			case OVERSCROLLING:
+				// NO-OP
+				break;
+		}
+
+		// Call OnPullEventListener
+		if (null != mOnPullEventListener) {
+			mOnPullEventListener.onPullEvent(this, mState, mCurrentMode);
+		}
+	}
+
+	/**
+	 * Used internally for adding view. Need because we override addView to
+	 * pass-through to the Refreshable View
+	 */
+	protected final void addViewInternal(View child, int index, ViewGroup.LayoutParams params) {
+		super.addView(child, index, params);
+	}
+
+	/**
+	 * Used internally for adding view. Need because we override addView to
+	 * pass-through to the Refreshable View
+	 */
+	protected final void addViewInternal(View child, ViewGroup.LayoutParams params) {
+		super.addView(child, -1, params);
+	}
+
+	protected LoadingLayout createLoadingLayout(Context context, Mode mode, TypedArray attrs) {
+		LoadingLayout layout = mLoadingAnimationStyle.createLoadingLayout(context, mode,
+				getPullToRefreshScrollDirection(), attrs);
+		layout.setVisibility(View.INVISIBLE);
+		return layout;
+	}
+
+	/**
+	 * Used internally for {@link #getLoadingLayoutProxy(boolean, boolean)}.
+	 * Allows derivative classes to include any extra LoadingLayouts.
+	 */
+	protected LoadingLayoutProxy createLoadingLayoutProxy(final boolean includeStart, final boolean includeEnd) {
+		LoadingLayoutProxy proxy = new LoadingLayoutProxy();
+
+		if (includeStart && mMode.showHeaderLoadingLayout()) {
+			proxy.addLayout(mHeaderLayout);
+		}
+		if (includeEnd && mMode.showFooterLoadingLayout()) {
+			proxy.addLayout(mFooterLayout);
+		}
+
+		return proxy;
+	}
+
+	/**
+	 * This is implemented by derived classes to return the created View. If you
+	 * need to use a custom View (such as a custom ListView), override this
+	 * method and return an instance of your custom class.
+	 * <p/>
+	 * Be sure to set the ID of the view in this method, especially if you're
+	 * using a ListActivity or ListFragment.
+	 * 
+	 * @param context Context to create view with
+	 * @param attrs AttributeSet from wrapped class. Means that anything you
+	 *            include in the XML layout declaration will be routed to the
+	 *            created View
+	 * @return New instance of the Refreshable View
+	 */
+	protected abstract T createRefreshableView(Context context, AttributeSet attrs);
+
+	protected final void disableLoadingLayoutVisibilityChanges() {
+		mLayoutVisibilityChangesEnabled = false;
+	}
+
+	protected final LoadingLayout getFooterLayout() {
+		return mFooterLayout;
+	}
+
+	protected final int getFooterSize() {
+		return mFooterLayout.getContentSize();
+	}
+
+	protected final LoadingLayout getHeaderLayout() {
+		return mHeaderLayout;
+	}
+
+	protected final int getHeaderSize() {
+		return mHeaderLayout.getContentSize();
+	}
+
+	protected int getPullToRefreshScrollDuration() {
+		return SMOOTH_SCROLL_DURATION_MS;
+	}
+
+	protected int getPullToRefreshScrollDurationLonger() {
+		return SMOOTH_SCROLL_LONG_DURATION_MS;
+	}
+
+	protected FrameLayout getRefreshableViewWrapper() {
+		return mRefreshableViewWrapper;
+	}
+
+	/**
+	 * Allows Derivative classes to handle the XML Attrs without creating a
+	 * TypedArray themsevles
+	 * 
+	 * @param a - TypedArray of PullToRefresh Attributes
+	 */
+	protected void handleStyledAttributes(TypedArray a) {
+	}
+
+	/**
+	 * Implemented by derived class to return whether the View is in a state
+	 * where the user can Pull to Refresh by scrolling from the end.
+	 * 
+	 * @return true if the View is currently in the correct state (for example,
+	 *         bottom of a ListView)
+	 */
+	protected abstract boolean isReadyForPullEnd();
+
+	/**
+	 * Implemented by derived class to return whether the View is in a state
+	 * where the user can Pull to Refresh by scrolling from the start.
+	 * 
+	 * @return true if the View is currently the correct state (for example, top
+	 *         of a ListView)
+	 */
+	protected abstract boolean isReadyForPullStart();
+
+	/**
+	 * Called by {@link #onRestoreInstanceState(Parcelable)} so that derivative
+	 * classes can handle their saved instance state.
+	 * 
+	 * @param savedInstanceState - Bundle which contains saved instance state.
+	 */
+	protected void onPtrRestoreInstanceState(Bundle savedInstanceState) {
+	}
+
+	/**
+	 * Called by {@link #onSaveInstanceState()} so that derivative classes can
+	 * save their instance state.
+	 * 
+	 * @param saveState - Bundle to be updated with saved state.
+	 */
+	protected void onPtrSaveInstanceState(Bundle saveState) {
+	}
+
+	/**
+	 * Called when the UI has been to be updated to be in the
+	 * {@link State#PULL_TO_REFRESH} state.
+	 */
+	protected void onPullToRefresh() {
+		switch (mCurrentMode) {
+			case PULL_FROM_END:
+				mFooterLayout.pullToRefresh();
+				break;
+			case PULL_FROM_START:
+				mHeaderLayout.pullToRefresh();
+				break;
+			default:
+				// NO-OP
+				break;
+		}
+	}
+
+	/**
+	 * Called when the UI has been to be updated to be in the
+	 * {@link State#REFRESHING} or {@link State#MANUAL_REFRESHING} state.
+	 * 
+	 * @param doScroll - Whether the UI should scroll for this event.
+	 */
+	protected void onRefreshing(final boolean doScroll) {
+		if (mMode.showHeaderLoadingLayout()) {
+			mHeaderLayout.refreshing();
+		}
+		if (mMode.showFooterLoadingLayout()) {
+			mFooterLayout.refreshing();
+		}
+
+		if (doScroll) {
+			if (mShowViewWhileRefreshing) {
+
+				// Call Refresh Listener when the Scroll has finished
+				OnSmoothScrollFinishedListener listener = new OnSmoothScrollFinishedListener() {
+					@Override
+					public void onSmoothScrollFinished() {
+						callRefreshListener();
+					}
+				};
+
+				switch (mCurrentMode) {
+					case MANUAL_REFRESH_ONLY:
+					case PULL_FROM_END:
+						smoothScrollTo(getFooterSize(), listener);
+						break;
+					default:
+					case PULL_FROM_START:
+						smoothScrollTo(-getHeaderSize(), listener);
+						break;
+				}
+			} else {
+				smoothScrollTo(0);
+			}
+		} else {
+			// We're not scrolling, so just call Refresh Listener now
+			callRefreshListener();
+		}
+	}
+
+	/**
+	 * Called when the UI has been to be updated to be in the
+	 * {@link State#RELEASE_TO_REFRESH} state.
+	 */
+	protected void onReleaseToRefresh() {
+		switch (mCurrentMode) {
+			case PULL_FROM_END:
+				mFooterLayout.releaseToRefresh();
+				break;
+			case PULL_FROM_START:
+				mHeaderLayout.releaseToRefresh();
+				break;
+			default:
+				// NO-OP
+				break;
+		}
+	}
+
+	/**
+	 * Called when the UI has been to be updated to be in the
+	 * {@link State#RESET} state.
+	 */
+	protected void onReset() {
+		mIsBeingDragged = false;
+		mLayoutVisibilityChangesEnabled = true;
+
+		// Always reset both layouts, just in case...
+		mHeaderLayout.reset();
+		mFooterLayout.reset();
+
+		smoothScrollTo(0);
+	}
+
+	@Override
+	protected final void onRestoreInstanceState(Parcelable state) {
+		if (state instanceof Bundle) {
+			Bundle bundle = (Bundle) state;
+
+			setMode(Mode.mapIntToValue(bundle.getInt(STATE_MODE, 0)));
+			mCurrentMode = Mode.mapIntToValue(bundle.getInt(STATE_CURRENT_MODE, 0));
+
+			mScrollingWhileRefreshingEnabled = bundle.getBoolean(STATE_SCROLLING_REFRESHING_ENABLED, false);
+			mShowViewWhileRefreshing = bundle.getBoolean(STATE_SHOW_REFRESHING_VIEW, true);
+
+			// Let super Restore Itself
+			super.onRestoreInstanceState(bundle.getParcelable(STATE_SUPER));
+
+			State viewState = State.mapIntToValue(bundle.getInt(STATE_STATE, 0));
+			if (viewState == State.REFRESHING || viewState == State.MANUAL_REFRESHING) {
+				setState(viewState, true);
+			}
+
+			// Now let derivative classes restore their state
+			onPtrRestoreInstanceState(bundle);
+			return;
+		}
+
+		super.onRestoreInstanceState(state);
+	}
+
+	@Override
+	protected final Parcelable onSaveInstanceState() {
+		Bundle bundle = new Bundle();
+
+		// Let derivative classes get a chance to save state first, that way we
+		// can make sure they don't overrite any of our values
+		onPtrSaveInstanceState(bundle);
+
+		bundle.putInt(STATE_STATE, mState.getIntValue());
+		bundle.putInt(STATE_MODE, mMode.getIntValue());
+		bundle.putInt(STATE_CURRENT_MODE, mCurrentMode.getIntValue());
+		bundle.putBoolean(STATE_SCROLLING_REFRESHING_ENABLED, mScrollingWhileRefreshingEnabled);
+		bundle.putBoolean(STATE_SHOW_REFRESHING_VIEW, mShowViewWhileRefreshing);
+		bundle.putParcelable(STATE_SUPER, super.onSaveInstanceState());
+
+		return bundle;
+	}
+
+	@Override
+	protected final void onSizeChanged(int w, int h, int oldw, int oldh) {
+		if (DEBUG) {
+			Log.d(LOG_TAG, String.format("onSizeChanged. W: %d, H: %d", w, h));
+		}
+
+		super.onSizeChanged(w, h, oldw, oldh);
+
+		// We need to update the header/footer when our size changes
+		refreshLoadingViewsSize();
+
+		// Update the Refreshable View layout
+		refreshRefreshableViewSize(w, h);
+
+		/**
+		 * As we're currently in a Layout Pass, we need to schedule another one
+		 * to layout any changes we've made here
+		 */
+		post(new Runnable() {
+			@Override
+			public void run() {
+				requestLayout();
+			}
+		});
+	}
+
+	/**
+	 * Re-measure the Loading Views height, and adjust internal padding as
+	 * necessary
+	 */
+	protected final void refreshLoadingViewsSize() {
+		final int maximumPullScroll = (int) (getMaximumPullScroll() * 1.2f);
+
+		int pLeft = getPaddingLeft();
+		int pTop = getPaddingTop();
+		int pRight = getPaddingRight();
+		int pBottom = getPaddingBottom();
+
+		switch (getPullToRefreshScrollDirection()) {
+			case HORIZONTAL:
+				if (mMode.showHeaderLoadingLayout()) {
+					mHeaderLayout.setWidth(maximumPullScroll);
+					pLeft = -maximumPullScroll;
+				} else {
+					pLeft = 0;
+				}
+
+				if (mMode.showFooterLoadingLayout()) {
+					mFooterLayout.setWidth(maximumPullScroll);
+					pRight = -maximumPullScroll;
+				} else {
+					pRight = 0;
+				}
+				break;
+
+			case VERTICAL:
+				if (mMode.showHeaderLoadingLayout()) {
+					mHeaderLayout.setHeight(maximumPullScroll);
+					pTop = -maximumPullScroll;
+				} else {
+					pTop = 0;
+				}
+
+				if (mMode.showFooterLoadingLayout()) {
+					mFooterLayout.setHeight(maximumPullScroll);
+					pBottom = -maximumPullScroll;
+				} else {
+					pBottom = 0;
+				}
+				break;
+		}
+
+		if (DEBUG) {
+			Log.d(LOG_TAG, String.format("Setting Padding. L: %d, T: %d, R: %d, B: %d", pLeft, pTop, pRight, pBottom));
+		}
+		setPadding(pLeft, pTop, pRight, pBottom);
+	}
+
+	protected final void refreshRefreshableViewSize(int width, int height) {
+		// We need to set the Height of the Refreshable View to the same as
+		// this layout
+		LinearLayout.LayoutParams lp = (LinearLayout.LayoutParams) mRefreshableViewWrapper.getLayoutParams();
+
+		switch (getPullToRefreshScrollDirection()) {
+			case HORIZONTAL:
+				if (lp.width != width) {
+					lp.width = width;
+					mRefreshableViewWrapper.requestLayout();
+				}
+				break;
+			case VERTICAL:
+				if (lp.height != height) {
+					lp.height = height;
+					mRefreshableViewWrapper.requestLayout();
+				}
+				break;
+		}
+	}
+
+	/**
+	 * Helper method which just calls scrollTo() in the correct scrolling
+	 * direction.
+	 * 
+	 * @param value - New Scroll value
+	 */
+	protected final void setHeaderScroll(int value) {
+		if (DEBUG) {
+			Log.d(LOG_TAG, "setHeaderScroll: " + value);
+		}
+
+		// Clamp value to with pull scroll range
+		final int maximumPullScroll = getMaximumPullScroll();
+		value = Math.min(maximumPullScroll, Math.max(-maximumPullScroll, value));
+
+		if (mLayoutVisibilityChangesEnabled) {
+			if (value < 0) {
+				mHeaderLayout.setVisibility(View.VISIBLE);
+			} else if (value > 0) {
+				mFooterLayout.setVisibility(View.VISIBLE);
+			} else {
+				mHeaderLayout.setVisibility(View.INVISIBLE);
+				mFooterLayout.setVisibility(View.INVISIBLE);
+			}
+		}
+
+		if (USE_HW_LAYERS) {
+			/**
+			 * Use a Hardware Layer on the Refreshable View if we've scrolled at
+			 * all. We don't use them on the Header/Footer Views as they change
+			 * often, which would negate any HW layer performance boost.
+			 */
+			ViewCompat.setLayerType(mRefreshableViewWrapper, value != 0 ? View.LAYER_TYPE_HARDWARE
+					: View.LAYER_TYPE_NONE);
+		}
+
+		switch (getPullToRefreshScrollDirection()) {
+			case VERTICAL:
+				scrollTo(0, value);
+				break;
+			case HORIZONTAL:
+				scrollTo(value, 0);
+				break;
+		}
+	}
+
+	/**
+	 * Smooth Scroll to position using the default duration of
+	 * {@value #SMOOTH_SCROLL_DURATION_MS} ms.
+	 * 
+	 * @param scrollValue - Position to scroll to
+	 */
+	protected final void smoothScrollTo(int scrollValue) {
+		smoothScrollTo(scrollValue, getPullToRefreshScrollDuration());
+	}
+
+	/**
+	 * Smooth Scroll to position using the default duration of
+	 * {@value #SMOOTH_SCROLL_DURATION_MS} ms.
+	 * 
+	 * @param scrollValue - Position to scroll to
+	 * @param listener - Listener for scroll
+	 */
+	protected final void smoothScrollTo(int scrollValue, OnSmoothScrollFinishedListener listener) {
+		smoothScrollTo(scrollValue, getPullToRefreshScrollDuration(), 0, listener);
+	}
+
+	/**
+	 * Smooth Scroll to position using the longer default duration of
+	 * {@value #SMOOTH_SCROLL_LONG_DURATION_MS} ms.
+	 * 
+	 * @param scrollValue - Position to scroll to
+	 */
+	protected final void smoothScrollToLonger(int scrollValue) {
+		smoothScrollTo(scrollValue, getPullToRefreshScrollDurationLonger());
+	}
+
+	/**
+	 * Updates the View State when the mode has been set. This does not do any
+	 * checking that the mode is different to current state so always updates.
+	 */
+	protected void updateUIForMode() {
+		// We need to use the correct LayoutParam values, based on scroll
+		// direction
+		final LinearLayout.LayoutParams lp = getLoadingLayoutLayoutParams();
+
+		// Remove Header, and then add Header Loading View again if needed
+		if (this == mHeaderLayout.getParent()) {
+			removeView(mHeaderLayout);
+		}
+		if (mMode.showHeaderLoadingLayout()) {
+			addViewInternal(mHeaderLayout, 0, lp);
+		}
+
+		// Remove Footer, and then add Footer Loading View again if needed
+		if (this == mFooterLayout.getParent()) {
+			removeView(mFooterLayout);
+		}
+		if (mMode.showFooterLoadingLayout()) {
+			addViewInternal(mFooterLayout, lp);
+		}
+
+		// Hide Loading Views
+		refreshLoadingViewsSize();
+
+		// If we're not using Mode.BOTH, set mCurrentMode to mMode, otherwise
+		// set it to pull down
+		mCurrentMode = (mMode != Mode.BOTH) ? mMode : Mode.PULL_FROM_START;
+	}
+
+	private void addRefreshableView(Context context, T refreshableView) {
+		mRefreshableViewWrapper = new FrameLayout(context);
+		mRefreshableViewWrapper.addView(refreshableView, ViewGroup.LayoutParams.MATCH_PARENT,
+				ViewGroup.LayoutParams.MATCH_PARENT);
+
+		addViewInternal(mRefreshableViewWrapper, new LinearLayout.LayoutParams(LayoutParams.MATCH_PARENT,
+				LayoutParams.MATCH_PARENT));
+	}
+
+	private void callRefreshListener() {
+		if (null != mOnRefreshListener) {
+			mOnRefreshListener.onRefresh(this);
+		} else if (null != mOnRefreshListener2) {
+			if (mCurrentMode == Mode.PULL_FROM_START) {
+				mOnRefreshListener2.onPullDownToRefresh(this);
+			} else if (mCurrentMode == Mode.PULL_FROM_END) {
+				mOnRefreshListener2.onPullUpToRefresh(this);
+			}
+		}
+	}
+
+	@SuppressWarnings("deprecation")
+	private void init(Context context, AttributeSet attrs) {
+		switch (getPullToRefreshScrollDirection()) {
+			case HORIZONTAL:
+				setOrientation(LinearLayout.HORIZONTAL);
+				break;
+			case VERTICAL:
+			default:
+				setOrientation(LinearLayout.VERTICAL);
+				break;
+		}
+
+		setGravity(Gravity.CENTER);
+
+		ViewConfiguration config = ViewConfiguration.get(context);
+		mTouchSlop = config.getScaledTouchSlop();
+
+		// Styleables from XML
+		TypedArray a = context.obtainStyledAttributes(attrs, R.styleable.PullToRefresh);
+
+		if (a.hasValue(R.styleable.PullToRefresh_ptrMode)) {
+			mMode = Mode.mapIntToValue(a.getInteger(R.styleable.PullToRefresh_ptrMode, 0));
+		}
+
+		if (a.hasValue(R.styleable.PullToRefresh_ptrAnimationStyle)) {
+			mLoadingAnimationStyle = AnimationStyle.mapIntToValue(a.getInteger(
+					R.styleable.PullToRefresh_ptrAnimationStyle, 0));
+		}
+
+		// Refreshable View
+		// By passing the attrs, we can add ListView/GridView params via XML
+		mRefreshableView = createRefreshableView(context, attrs);
+		addRefreshableView(context, mRefreshableView);
+
+		// We need to create now layouts now
+		mHeaderLayout = createLoadingLayout(context, Mode.PULL_FROM_START, a);
+		mFooterLayout = createLoadingLayout(context, Mode.PULL_FROM_END, a);
+
+		/**
+		 * Styleables from XML
+		 */
+		if (a.hasValue(R.styleable.PullToRefresh_ptrRefreshableViewBackground)) {
+			Drawable background = a.getDrawable(R.styleable.PullToRefresh_ptrRefreshableViewBackground);
+			if (null != background) {
+				mRefreshableView.setBackgroundDrawable(background);
+			}
+		} else if (a.hasValue(R.styleable.PullToRefresh_ptrAdapterViewBackground)) {
+			Utils.warnDeprecation("ptrAdapterViewBackground", "ptrRefreshableViewBackground");
+			Drawable background = a.getDrawable(R.styleable.PullToRefresh_ptrAdapterViewBackground);
+			if (null != background) {
+				mRefreshableView.setBackgroundDrawable(background);
+			}
+		}
+
+		if (a.hasValue(R.styleable.PullToRefresh_ptrOverScroll)) {
+			mOverScrollEnabled = a.getBoolean(R.styleable.PullToRefresh_ptrOverScroll, true);
+		}
+
+		if (a.hasValue(R.styleable.PullToRefresh_ptrScrollingWhileRefreshingEnabled)) {
+			mScrollingWhileRefreshingEnabled = a.getBoolean(
+					R.styleable.PullToRefresh_ptrScrollingWhileRefreshingEnabled, false);
+		}
+
+		// Let the derivative classes have a go at handling attributes, then
+		// recycle them...
+		handleStyledAttributes(a);
+		a.recycle();
+
+		// Finally update the UI for the modes
+		updateUIForMode();
+	}
+
+	private boolean isReadyForPull() {
+		switch (mMode) {
+			case PULL_FROM_START:
+				return isReadyForPullStart();
+			case PULL_FROM_END:
+				return isReadyForPullEnd();
+			case BOTH:
+				return isReadyForPullEnd() || isReadyForPullStart();
+			default:
+				return false;
+		}
+	}
+
+	/**
+	 * Actions a Pull Event
+	 * 
+	 * @return true if the Event has been handled, false if there has been no
+	 *         change
+	 */
+	private void pullEvent() {
+		final int newScrollValue;
+		final int itemDimension;
+		final float initialMotionValue, lastMotionValue;
+
+		switch (getPullToRefreshScrollDirection()) {
+			case HORIZONTAL:
+				initialMotionValue = mInitialMotionX;
+				lastMotionValue = mLastMotionX;
+				break;
+			case VERTICAL:
+			default:
+				initialMotionValue = mInitialMotionY;
+				lastMotionValue = mLastMotionY;
+				break;
+		}
+
+		switch (mCurrentMode) {
+			case PULL_FROM_END:
+				newScrollValue = Math.round(Math.max(initialMotionValue - lastMotionValue, 0) / FRICTION);
+				itemDimension = getFooterSize();
+				break;
+			case PULL_FROM_START:
+			default:
+				newScrollValue = Math.round(Math.min(initialMotionValue - lastMotionValue, 0) / FRICTION);
+				itemDimension = getHeaderSize();
+				break;
+		}
+
+		setHeaderScroll(newScrollValue);
+
+		if (newScrollValue != 0 && !isRefreshing()) {
+			float scale = Math.abs(newScrollValue) / (float) itemDimension;
+			switch (mCurrentMode) {
+				case PULL_FROM_END:
+					mFooterLayout.onPull(scale);
+					break;
+				case PULL_FROM_START:
+				default:
+					mHeaderLayout.onPull(scale);
+					break;
+			}
+
+			if (mState != State.PULL_TO_REFRESH && itemDimension >= Math.abs(newScrollValue)) {
+				setState(State.PULL_TO_REFRESH);
+			} else if (mState == State.PULL_TO_REFRESH && itemDimension < Math.abs(newScrollValue)) {
+				setState(State.RELEASE_TO_REFRESH);
+			}
+		}
+	}
+
+	private LinearLayout.LayoutParams getLoadingLayoutLayoutParams() {
+		switch (getPullToRefreshScrollDirection()) {
+			case HORIZONTAL:
+				return new LinearLayout.LayoutParams(LinearLayout.LayoutParams.WRAP_CONTENT,
+						LinearLayout.LayoutParams.MATCH_PARENT);
+			case VERTICAL:
+			default:
+				return new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT,
+						LinearLayout.LayoutParams.WRAP_CONTENT);
+		}
+	}
+
+	private int getMaximumPullScroll() {
+		switch (getPullToRefreshScrollDirection()) {
+			case HORIZONTAL:
+				return Math.round(getWidth() / FRICTION);
+			case VERTICAL:
+			default:
+				return Math.round(getHeight() / FRICTION);
+		}
+	}
+
+	/**
+	 * Smooth Scroll to position using the specific duration
+	 * 
+	 * @param scrollValue - Position to scroll to
+	 * @param duration - Duration of animation in milliseconds
+	 */
+	private final void smoothScrollTo(int scrollValue, long duration) {
+		smoothScrollTo(scrollValue, duration, 0, null);
+	}
+
+	private final void smoothScrollTo(int newScrollValue, long duration, long delayMillis,
+			OnSmoothScrollFinishedListener listener) {
+		if (null != mCurrentSmoothScrollRunnable) {
+			mCurrentSmoothScrollRunnable.stop();
+		}
+
+		final int oldScrollValue;
+		switch (getPullToRefreshScrollDirection()) {
+			case HORIZONTAL:
+				oldScrollValue = getScrollX();
+				break;
+			case VERTICAL:
+			default:
+				oldScrollValue = getScrollY();
+				break;
+		}
+
+		if (oldScrollValue != newScrollValue) {
+			if (null == mScrollAnimationInterpolator) {
+				// Default interpolator is a Decelerate Interpolator
+				mScrollAnimationInterpolator = new DecelerateInterpolator();
+			}
+			mCurrentSmoothScrollRunnable = new SmoothScrollRunnable(oldScrollValue, newScrollValue, duration, listener);
+
+			if (delayMillis > 0) {
+				postDelayed(mCurrentSmoothScrollRunnable, delayMillis);
+			} else {
+				post(mCurrentSmoothScrollRunnable);
+			}
+		}
+	}
+
+	private final void smoothScrollToAndBack(int y) {
+		smoothScrollTo(y, SMOOTH_SCROLL_DURATION_MS, 0, new OnSmoothScrollFinishedListener() {
+
+			@Override
+			public void onSmoothScrollFinished() {
+				smoothScrollTo(0, SMOOTH_SCROLL_DURATION_MS, DEMO_SCROLL_INTERVAL, null);
+			}
+		});
+	}
+
+	public static enum AnimationStyle {
+		/**
+		 * This is the default for Android-PullToRefresh. Allows you to use any
+		 * drawable, which is automatically rotated and used as a Progress Bar.
+		 */
+		ROTATE,
+
+		/**
+		 * This is the old default, and what is commonly used on iOS. Uses an
+		 * arrow image which flips depending on where the user has scrolled.
+		 */
+		FLIP;
+
+		static AnimationStyle getDefault() {
+			return ROTATE;
+		}
+
+		/**
+		 * Maps an int to a specific mode. This is needed when saving state, or
+		 * inflating the view from XML where the mode is given through a attr
+		 * int.
+		 * 
+		 * @param modeInt - int to map a Mode to
+		 * @return Mode that modeInt maps to, or ROTATE by default.
+		 */
+		static AnimationStyle mapIntToValue(int modeInt) {
+			switch (modeInt) {
+				case 0x0:
+				default:
+					return ROTATE;
+				case 0x1:
+					return FLIP;
+			}
+		}
+
+		LoadingLayout createLoadingLayout(Context context, Mode mode, Orientation scrollDirection, TypedArray attrs) {
+			switch (this) {
+				case ROTATE:
+				default:
+					return new RotateLoadingLayout(context, mode, scrollDirection, attrs);
+				case FLIP:
+					return new FlipLoadingLayout(context, mode, scrollDirection, attrs);
+			}
+		}
+	}
+
+	public static enum Mode {
+
+		/**
+		 * Disable all Pull-to-Refresh gesture and Refreshing handling
+		 */
+		DISABLED(0x0),
+
+		/**
+		 * Only allow the user to Pull from the start of the Refreshable View to
+		 * refresh. The start is either the Top or Left, depending on the
+		 * scrolling direction.
+		 */
+		PULL_FROM_START(0x1),
+
+		/**
+		 * Only allow the user to Pull from the end of the Refreshable View to
+		 * refresh. The start is either the Bottom or Right, depending on the
+		 * scrolling direction.
+		 */
+		PULL_FROM_END(0x2),
+
+		/**
+		 * Allow the user to both Pull from the start, from the end to refresh.
+		 */
+		BOTH(0x3),
+
+		/**
+		 * Disables Pull-to-Refresh gesture handling, but allows manually
+		 * setting the Refresh state via
+		 * {@link PullToRefreshBase#setRefreshing() setRefreshing()}.
+		 */
+		MANUAL_REFRESH_ONLY(0x4);
+
+		/**
+		 * @deprecated Use {@link #PULL_FROM_START} from now on.
+		 */
+		public static Mode PULL_DOWN_TO_REFRESH = Mode.PULL_FROM_START;
+
+		/**
+		 * @deprecated Use {@link #PULL_FROM_END} from now on.
+		 */
+		public static Mode PULL_UP_TO_REFRESH = Mode.PULL_FROM_END;
+
+		/**
+		 * Maps an int to a specific mode. This is needed when saving state, or
+		 * inflating the view from XML where the mode is given through a attr
+		 * int.
+		 * 
+		 * @param modeInt - int to map a Mode to
+		 * @return Mode that modeInt maps to, or PULL_FROM_START by default.
+		 */
+		static Mode mapIntToValue(final int modeInt) {
+			for (Mode value : Mode.values()) {
+				if (modeInt == value.getIntValue()) {
+					return value;
+				}
+			}
+
+			// If not, return default
+			return getDefault();
+		}
+
+		static Mode getDefault() {
+			return PULL_FROM_START;
+		}
+
+		private int mIntValue;
+
+		// The modeInt values need to match those from attrs.xml
+		Mode(int modeInt) {
+			mIntValue = modeInt;
+		}
+
+		/**
+		 * @return true if the mode permits Pull-to-Refresh
+		 */
+		boolean permitsPullToRefresh() {
+			return !(this == DISABLED || this == MANUAL_REFRESH_ONLY);
+		}
+
+		/**
+		 * @return true if this mode wants the Loading Layout Header to be shown
+		 */
+		public boolean showHeaderLoadingLayout() {
+			return this == PULL_FROM_START || this == BOTH;
+		}
+
+		/**
+		 * @return true if this mode wants the Loading Layout Footer to be shown
+		 */
+		public boolean showFooterLoadingLayout() {
+			return this == PULL_FROM_END || this == BOTH || this == MANUAL_REFRESH_ONLY;
+		}
+
+		int getIntValue() {
+			return mIntValue;
+		}
+
+	}
+
+	// ===========================================================
+	// Inner, Anonymous Classes, and Enumerations
+	// ===========================================================
+
+	/**
+	 * Simple Listener that allows you to be notified when the user has scrolled
+	 * to the end of the AdapterView. See (
+	 * {@link PullToRefreshAdapterViewBase#setOnLastItemVisibleListener}.
+	 * 
+	 * @author Chris Banes
+	 */
+	public static interface OnLastItemVisibleListener {
+
+		/**
+		 * Called when the user has scrolled to the end of the list
+		 */
+		public void onLastItemVisible();
+
+	}
+
+	/**
+	 * Listener that allows you to be notified when the user has started or
+	 * finished a touch event. Useful when you want to append extra UI events
+	 * (such as sounds). See (
+	 * {@link PullToRefreshAdapterViewBase#setOnPullEventListener}.
+	 * 
+	 * @author Chris Banes
+	 */
+	public static interface OnPullEventListener<V extends View> {
+
+		/**
+		 * Called when the internal state has been changed, usually by the user
+		 * pulling.
+		 * 
+		 * @param refreshView - View which has had it's state change.
+		 * @param state - The new state of View.
+		 * @param direction - One of {@link Mode#PULL_FROM_START} or
+		 *            {@link Mode#PULL_FROM_END} depending on which direction
+		 *            the user is pulling. Only useful when <var>state</var> is
+		 *            {@link State#PULL_TO_REFRESH} or
+		 *            {@link State#RELEASE_TO_REFRESH}.
+		 */
+		public void onPullEvent(final PullToRefreshBase<V> refreshView, State state, Mode direction);
+
+	}
+
+	/**
+	 * Simple Listener to listen for any callbacks to Refresh.
+	 * 
+	 * @author Chris Banes
+	 */
+	public static interface OnRefreshListener<V extends View> {
+
+		/**
+		 * onRefresh will be called for both a Pull from start, and Pull from
+		 * end
+		 */
+		public void onRefresh(final PullToRefreshBase<V> refreshView);
+
+	}
+
+	/**
+	 * An advanced version of the Listener to listen for callbacks to Refresh.
+	 * This listener is different as it allows you to differentiate between Pull
+	 * Ups, and Pull Downs.
+	 * 
+	 * @author Chris Banes
+	 */
+	public static interface OnRefreshListener2<V extends View> {
+		// TODO These methods need renaming to START/END rather than DOWN/UP
+
+		/**
+		 * onPullDownToRefresh will be called only when the user has Pulled from
+		 * the start, and released.
+		 */
+		public void onPullDownToRefresh(final PullToRefreshBase<V> refreshView);
+
+		/**
+		 * onPullUpToRefresh will be called only when the user has Pulled from
+		 * the end, and released.
+		 */
+		public void onPullUpToRefresh(final PullToRefreshBase<V> refreshView);
+
+	}
+
+	public static enum Orientation {
+		VERTICAL, HORIZONTAL;
+	}
+
+	public static enum State {
+
+		/**
+		 * When the UI is in a state which means that user is not interacting
+		 * with the Pull-to-Refresh function.
+		 */
+		RESET(0x0),
+
+		/**
+		 * When the UI is being pulled by the user, but has not been pulled far
+		 * enough so that it refreshes when released.
+		 */
+		PULL_TO_REFRESH(0x1),
+
+		/**
+		 * When the UI is being pulled by the user, and <strong>has</strong>
+		 * been pulled far enough so that it will refresh when released.
+		 */
+		RELEASE_TO_REFRESH(0x2),
+
+		/**
+		 * When the UI is currently refreshing, caused by a pull gesture.
+		 */
+		REFRESHING(0x8),
+
+		/**
+		 * When the UI is currently refreshing, caused by a call to
+		 * {@link PullToRefreshBase#setRefreshing() setRefreshing()}.
+		 */
+		MANUAL_REFRESHING(0x9),
+
+		/**
+		 * When the UI is currently overscrolling, caused by a fling on the
+		 * Refreshable View.
+		 */
+		OVERSCROLLING(0x10);
+
+		/**
+		 * Maps an int to a specific state. This is needed when saving state.
+		 * 
+		 * @param stateInt - int to map a State to
+		 * @return State that stateInt maps to
+		 */
+		static State mapIntToValue(final int stateInt) {
+			for (State value : State.values()) {
+				if (stateInt == value.getIntValue()) {
+					return value;
+				}
+			}
+
+			// If not, return default
+			return RESET;
+		}
+
+		private int mIntValue;
+
+		State(int intValue) {
+			mIntValue = intValue;
+		}
+
+		int getIntValue() {
+			return mIntValue;
+		}
+	}
+
+	final class SmoothScrollRunnable implements Runnable {
+		private final Interpolator mInterpolator;
+		private final int mScrollToY;
+		private final int mScrollFromY;
+		private final long mDuration;
+		private OnSmoothScrollFinishedListener mListener;
+
+		private boolean mContinueRunning = true;
+		private long mStartTime = -1;
+		private int mCurrentY = -1;
+
+		public SmoothScrollRunnable(int fromY, int toY, long duration, OnSmoothScrollFinishedListener listener) {
+			mScrollFromY = fromY;
+			mScrollToY = toY;
+			mInterpolator = mScrollAnimationInterpolator;
+			mDuration = duration;
+			mListener = listener;
+		}
+
+		@Override
+		public void run() {
+
+			/**
+			 * Only set mStartTime if this is the first time we're starting,
+			 * else actually calculate the Y delta
+			 */
+			if (mStartTime == -1) {
+				mStartTime = System.currentTimeMillis();
+			} else {
+
+				/**
+				 * We do do all calculations in long to reduce software float
+				 * calculations. We use 1000 as it gives us good accuracy and
+				 * small rounding errors
+				 */
+				long normalizedTime = (1000 * (System.currentTimeMillis() - mStartTime)) / mDuration;
+				normalizedTime = Math.max(Math.min(normalizedTime, 1000), 0);
+
+				final int deltaY = Math.round((mScrollFromY - mScrollToY)
+						* mInterpolator.getInterpolation(normalizedTime / 1000f));
+				mCurrentY = mScrollFromY - deltaY;
+				setHeaderScroll(mCurrentY);
+			}
+
+			// If we're not at the target Y, keep going...
+			if (mContinueRunning && mScrollToY != mCurrentY) {
+				ViewCompat.postOnAnimation(PullToRefreshBase.this, this);
+			} else {
+				if (null != mListener) {
+					mListener.onSmoothScrollFinished();
+				}
+			}
+		}
+
+		public void stop() {
+			mContinueRunning = false;
+			removeCallbacks(this);
+		}
+	}
+
+	static interface OnSmoothScrollFinishedListener {
+		void onSmoothScrollFinished();
+	}
+
+}
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision )
+++ app/src/main/AndroidManifest.xml	(revision )
@@ -0,0 +1,34 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.example.victor.weathertest3">
+
+    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
+    <uses-permission android:name="android.permission.INTERNET" />
+    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
+    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
+    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
+
+    <application
+        android:name=".WeatherApplication"
+        android:allowBackup="true"
+        android:icon="@mipmap/ic_launcher"
+        android:label="@string/app_name"
+        android:supportsRtl="true"
+        android:theme="@android:style/Theme.NoTitleBar">
+        <activity android:name=".MainActivity">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+
+                <category android:name="android.intent.category.LAUNCHER" />
+            </intent-filter>
+        </activity>
+        <activity
+            android:name=".CityActivity"
+            android:screenOrientation="portrait"/>
+        <service
+            android:name=".service.WeatherService"
+            android:enabled="true"
+            android:exported="true"></service>
+    </application>
+
+</manifest>
Index: gradle/wrapper/gradle-wrapper.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GBK
===================================================================
--- gradle/wrapper/gradle-wrapper.properties	(revision )
+++ gradle/wrapper/gradle-wrapper.properties	(revision )
@@ -0,0 +1,6 @@
+#Wed Oct 21 11:34:03 PDT 2015
+distributionBase=GRADLE_USER_HOME
+distributionPath=wrapper/dists
+zipStoreBase=GRADLE_USER_HOME
+zipStorePath=wrapper/dists
+distributionUrl=https\://services.gradle.org/distributions/gradle-2.8-all.zip
Index: PullToRefresh/src/main/res/values-he/pull_refresh_strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/src/main/res/values-he/pull_refresh_strings.xml	(revision )
+++ PullToRefresh/src/main/res/values-he/pull_refresh_strings.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+  <string name="pull_to_refresh_pull_label">משוך לרענון…</string>
+  <string name="pull_to_refresh_release_label">שחרר לרענון…</string>
+  <string name="pull_to_refresh_refreshing_label">טוען…</string>
+</resources>
Index: PullToRefresh/build/generated/source/buildConfig/debug/com/handmark/pulltorefresh/library/BuildConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/build/generated/source/buildConfig/debug/com/handmark/pulltorefresh/library/BuildConfig.java	(revision )
+++ PullToRefresh/build/generated/source/buildConfig/debug/com/handmark/pulltorefresh/library/BuildConfig.java	(revision )
@@ -0,0 +1,13 @@
+/**
+ * Automatically generated file. DO NOT MODIFY
+ */
+package com.handmark.pulltorefresh.library;
+
+public final class BuildConfig {
+  public static final boolean DEBUG = Boolean.parseBoolean("true");
+  public static final String APPLICATION_ID = "com.handmark.pulltorefresh.library";
+  public static final String BUILD_TYPE = "debug";
+  public static final String FLAVOR = "";
+  public static final int VERSION_CODE = 2110;
+  public static final String VERSION_NAME = "2.1.1";
+}
Index: PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/extras/PullToRefreshWebView2.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/extras/PullToRefreshWebView2.java	(revision )
+++ PullToRefresh/src/main/java/com/handmark/pulltorefresh/library/extras/PullToRefreshWebView2.java	(revision )
@@ -0,0 +1,132 @@
+/*******************************************************************************
+ * Copyright 2011, 2012 Chris Banes.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ *******************************************************************************/
+package com.handmark.pulltorefresh.library.extras;
+
+import java.util.concurrent.atomic.AtomicBoolean;
+
+import android.content.Context;
+import android.util.AttributeSet;
+import android.webkit.WebView;
+
+import com.handmark.pulltorefresh.library.PullToRefreshWebView;
+
+/**
+ * An advanced version of {@link PullToRefreshWebView} which delegates the
+ * triggering of the PullToRefresh gesture to the Javascript running within the
+ * WebView. This means that you should only use this class if:
+ * <p/>
+ * <ul>
+ * <li>{@link PullToRefreshWebView} doesn't work correctly because you're using
+ * <code>overflow:scroll</code> or something else which means
+ * {@link WebView#getScrollY()} doesn't return correct values.</li>
+ * <li>You control the web content being displayed, as you need to write some
+ * Javascript callbacks.</li>
+ * </ul>
+ * <p/>
+ * <p/>
+ * The way this call works is that when a PullToRefresh gesture is in action,
+ * the following Javascript methods will be called:
+ * <code>isReadyForPullDown()</code> and <code>isReadyForPullUp()</code>, it is
+ * your job to calculate whether the view is in a state where a PullToRefresh
+ * can happen, and return the result via the callback mechanism. An example can
+ * be seen below:
+ * <p/>
+ * 
+ * <pre>
+ * function isReadyForPullDown() {
+ *   var result = ...  // Probably using the .scrollTop DOM attribute
+ *   ptr.isReadyForPullDownResponse(result);
+ * }
+ * 
+ * function isReadyForPullUp() {
+ *   var result = ...  // Probably using the .scrollBottom DOM attribute
+ *   ptr.isReadyForPullUpResponse(result);
+ * }
+ * </pre>
+ * 
+ * @author Chris Banes
+ */
+public class PullToRefreshWebView2 extends PullToRefreshWebView {
+
+	static final String JS_INTERFACE_PKG = "ptr";
+	static final String DEF_JS_READY_PULL_DOWN_CALL = "javascript:isReadyForPullDown();";
+	static final String DEF_JS_READY_PULL_UP_CALL = "javascript:isReadyForPullUp();";
+
+	public PullToRefreshWebView2(Context context) {
+		super(context);
+	}
+
+	public PullToRefreshWebView2(Context context, AttributeSet attrs) {
+		super(context, attrs);
+	}
+
+	public PullToRefreshWebView2(Context context, Mode mode) {
+		super(context, mode);
+	}
+
+	private JsValueCallback mJsCallback;
+	private final AtomicBoolean mIsReadyForPullDown = new AtomicBoolean(false);
+	private final AtomicBoolean mIsReadyForPullUp = new AtomicBoolean(false);
+
+	@Override
+	protected WebView createRefreshableView(Context context, AttributeSet attrs) {
+		WebView webView = super.createRefreshableView(context, attrs);
+
+		// Need to add JS Interface so we can get the response back
+		mJsCallback = new JsValueCallback();
+		webView.addJavascriptInterface(mJsCallback, JS_INTERFACE_PKG);
+
+		return webView;
+	}
+
+	@Override
+	protected boolean isReadyForPullStart() {
+		// Call Javascript...
+		getRefreshableView().loadUrl(DEF_JS_READY_PULL_DOWN_CALL);
+
+		// Response will be given to JsValueCallback, which will update
+		// mIsReadyForPullDown
+
+		return mIsReadyForPullDown.get();
+	}
+
+	@Override
+	protected boolean isReadyForPullEnd() {
+		// Call Javascript...
+		getRefreshableView().loadUrl(DEF_JS_READY_PULL_UP_CALL);
+
+		// Response will be given to JsValueCallback, which will update
+		// mIsReadyForPullUp
+
+		return mIsReadyForPullUp.get();
+	}
+
+	/**
+	 * Used for response from Javascript
+	 * 
+	 * @author Chris Banes
+	 */
+	final class JsValueCallback {
+
+		public void isReadyForPullUpResponse(boolean response) {
+			mIsReadyForPullUp.set(response);
+		}
+
+		public void isReadyForPullDownResponse(boolean response) {
+			mIsReadyForPullDown.set(response);
+		}
+	}
+}
Index: PullToRefresh/src/main/res/values-ko/pull_refresh_strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PullToRefresh/src/main/res/values-ko/pull_refresh_strings.xml	(revision )
+++ PullToRefresh/src/main/res/values-ko/pull_refresh_strings.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+  <string name="pull_to_refresh_pull_label">당겨서 새로 고침…</string>
+  <string name="pull_to_refresh_release_label">놓아서 새로 고침…</string>
+  <string name="pull_to_refresh_refreshing_label">로드 중…</string>
+</resources>
Index: app/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/.gitignore	(revision )
+++ app/.gitignore	(revision )
@@ -0,0 +1,1 @@
+/build
